/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.localData;


import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.smartsarov.citylighting.localData.tables.ClustersTable;
import ru.smartsarov.citylighting.localData.tables.records.ClustersTableRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ClustersTableRecord, Integer> IDENTITY_CLUSTERS_TABLE = Identities0.IDENTITY_CLUSTERS_TABLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ClustersTableRecord> PK_CLUSTERS_TABLE = UniqueKeys0.PK_CLUSTERS_TABLE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ClustersTableRecord, Integer> IDENTITY_CLUSTERS_TABLE = Internal.createIdentity(ClustersTable.CLUSTERS_TABLE, ClustersTable.CLUSTERS_TABLE.SYS_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ClustersTableRecord> PK_CLUSTERS_TABLE = Internal.createUniqueKey(ClustersTable.CLUSTERS_TABLE, "pk_clusters_table", ClustersTable.CLUSTERS_TABLE.SYS_ID);
    }
}
