/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.localData.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.localData.DefaultSchema;
import ru.smartsarov.citylighting.localData.Keys;
import ru.smartsarov.citylighting.localData.tables.records.ClustersTableRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClustersTable extends TableImpl<ClustersTableRecord> {

    private static final long serialVersionUID = -1799966657;

    /**
     * The reference instance of <code>clusters_table</code>
     */
    public static final ClustersTable CLUSTERS_TABLE = new ClustersTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClustersTableRecord> getRecordType() {
        return ClustersTableRecord.class;
    }

    /**
     * The column <code>clusters_table.sys_id</code>.
     */
    public final TableField<ClustersTableRecord, Integer> SYS_ID = createField("sys_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>clusters_table.usk_id</code>.
     */
    public final TableField<ClustersTableRecord, Integer> USK_ID = createField("usk_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>clusters_table.index</code>.
     */
    public final TableField<ClustersTableRecord, Integer> INDEX = createField("index", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>clusters_table.longitude</code>.
     */
    public final TableField<ClustersTableRecord, Float> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * The column <code>clusters_table.latitude</code>.
     */
    public final TableField<ClustersTableRecord, Float> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.REAL.nullable(false), this, "");

    /**
     * The column <code>clusters_table.removed</code>.
     */
    public final TableField<ClustersTableRecord, BigDecimal> REMOVED = createField("removed", org.jooq.impl.SQLDataType.NUMERIC.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * Create a <code>clusters_table</code> table reference
     */
    public ClustersTable() {
        this(DSL.name("clusters_table"), null);
    }

    /**
     * Create an aliased <code>clusters_table</code> table reference
     */
    public ClustersTable(String alias) {
        this(DSL.name(alias), CLUSTERS_TABLE);
    }

    /**
     * Create an aliased <code>clusters_table</code> table reference
     */
    public ClustersTable(Name alias) {
        this(alias, CLUSTERS_TABLE);
    }

    private ClustersTable(Name alias, Table<ClustersTableRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClustersTable(Name alias, Table<ClustersTableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ClustersTable(Table<O> child, ForeignKey<O, ClustersTableRecord> key) {
        super(child, key, CLUSTERS_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClustersTableRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CLUSTERS_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClustersTableRecord> getPrimaryKey() {
        return Keys.PK_CLUSTERS_TABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClustersTableRecord>> getKeys() {
        return Arrays.<UniqueKey<ClustersTableRecord>>asList(Keys.PK_CLUSTERS_TABLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClustersTable as(String alias) {
        return new ClustersTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClustersTable as(Name alias) {
        return new ClustersTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClustersTable rename(String name) {
        return new ClustersTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ClustersTable rename(Name name) {
        return new ClustersTable(name, null);
    }
}
