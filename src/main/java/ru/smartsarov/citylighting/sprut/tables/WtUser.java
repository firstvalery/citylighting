/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.WtUserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WtUser extends TableImpl<WtUserRecord> {

    private static final long serialVersionUID = 933383633;

    /**
     * The reference instance of <code>WT_USER</code>
     */
    public static final WtUser WT_USER = new WtUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WtUserRecord> getRecordType() {
        return WtUserRecord.class;
    }

    /**
     * The column <code>WT_USER.USER_ID</code>.
     */
    public final TableField<WtUserRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_USER.USER_AB_ID</code>.
     */
    public final TableField<WtUserRecord, Integer> USER_AB_ID = createField("USER_AB_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_USER.USER_GRP_ID</code>.
     */
    public final TableField<WtUserRecord, Integer> USER_GRP_ID = createField("USER_GRP_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_USER.USER_NAME</code>.
     */
    public final TableField<WtUserRecord, String> USER_NAME = createField("USER_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>WT_USER.USER_PASSWORD</code>.
     */
    public final TableField<WtUserRecord, String> USER_PASSWORD = createField("USER_PASSWORD", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>WT_USER.USER_DESCRIPTION</code>.
     */
    public final TableField<WtUserRecord, String> USER_DESCRIPTION = createField("USER_DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>WT_USER</code> table reference
     */
    public WtUser() {
        this(DSL.name("WT_USER"), null);
    }

    /**
     * Create an aliased <code>WT_USER</code> table reference
     */
    public WtUser(String alias) {
        this(DSL.name(alias), WT_USER);
    }

    /**
     * Create an aliased <code>WT_USER</code> table reference
     */
    public WtUser(Name alias) {
        this(alias, WT_USER);
    }

    private WtUser(Name alias, Table<WtUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private WtUser(Name alias, Table<WtUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WtUser(Table<O> child, ForeignKey<O, WtUserRecord> key) {
        super(child, key, WT_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WtUserRecord> getPrimaryKey() {
        return Keys.INTEG_148;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WtUserRecord>> getKeys() {
        return Arrays.<UniqueKey<WtUserRecord>>asList(Keys.INTEG_148);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtUser as(String alias) {
        return new WtUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtUser as(Name alias) {
        return new WtUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WtUser rename(String name) {
        return new WtUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WtUser rename(Name name) {
        return new WtUser(name, null);
    }
}
