/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ObjControlLog extends TableImpl<ObjControlLogRecord> {

    private static final long serialVersionUID = 475111265;

    /**
     * The reference instance of <code>OBJ_CONTROL_LOG</code>
     */
    public static final ObjControlLog OBJ_CONTROL_LOG = new ObjControlLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ObjControlLogRecord> getRecordType() {
        return ObjControlLogRecord.class;
    }

    /**
     * The column <code>OBJ_CONTROL_LOG.GENERATOR_ID</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> GENERATOR_ID = createField("GENERATOR_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_ID</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> OBJ_ID = createField("OBJ_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_TYPE</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> OBJ_TYPE = createField("OBJ_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_ACTION</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> OBJ_ACTION = createField("OBJ_ACTION", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_ACTION_TYPE</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> OBJ_ACTION_TYPE = createField("OBJ_ACTION_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_PARAM_INT</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> OBJ_PARAM_INT = createField("OBJ_PARAM_INT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_PARAM_DOUBLE</code>.
     */
    public final TableField<ObjControlLogRecord, Double> OBJ_PARAM_DOUBLE = createField("OBJ_PARAM_DOUBLE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_PARAM_STR</code>.
     */
    public final TableField<ObjControlLogRecord, String> OBJ_PARAM_STR = createField("OBJ_PARAM_STR", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_SYNC</code>.
     */
    public final TableField<ObjControlLogRecord, Integer> OBJ_SYNC = createField("OBJ_SYNC", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_COMMENT_USER</code>.
     */
    public final TableField<ObjControlLogRecord, String> OBJ_COMMENT_USER = createField("OBJ_COMMENT_USER", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_COMMENT_DATETIME</code>.
     */
    public final TableField<ObjControlLogRecord, Timestamp> OBJ_COMMENT_DATETIME = createField("OBJ_COMMENT_DATETIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>OBJ_CONTROL_LOG.OBJ_COMMENT_IP</code>.
     */
    public final TableField<ObjControlLogRecord, String> OBJ_COMMENT_IP = createField("OBJ_COMMENT_IP", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * Create a <code>OBJ_CONTROL_LOG</code> table reference
     */
    public ObjControlLog() {
        this(DSL.name("OBJ_CONTROL_LOG"), null);
    }

    /**
     * Create an aliased <code>OBJ_CONTROL_LOG</code> table reference
     */
    public ObjControlLog(String alias) {
        this(DSL.name(alias), OBJ_CONTROL_LOG);
    }

    /**
     * Create an aliased <code>OBJ_CONTROL_LOG</code> table reference
     */
    public ObjControlLog(Name alias) {
        this(alias, OBJ_CONTROL_LOG);
    }

    private ObjControlLog(Name alias, Table<ObjControlLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ObjControlLog(Name alias, Table<ObjControlLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ObjControlLog(Table<O> child, ForeignKey<O, ObjControlLogRecord> key) {
        super(child, key, OBJ_CONTROL_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ObjControlLogRecord> getPrimaryKey() {
        return Keys.OBJ_CONTROL_LOG_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ObjControlLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ObjControlLogRecord>>asList(Keys.OBJ_CONTROL_LOG_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ObjControlLog as(String alias) {
        return new ObjControlLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ObjControlLog as(Name alias) {
        return new ObjControlLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ObjControlLog rename(String name) {
        return new ObjControlLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ObjControlLog rename(Name name) {
        return new ObjControlLog(name, null);
    }
}
