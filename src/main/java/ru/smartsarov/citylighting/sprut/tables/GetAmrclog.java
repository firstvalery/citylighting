/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetAmrclogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetAmrclog extends TableImpl<GetAmrclogRecord> {

    private static final long serialVersionUID = -2009559139;

    /**
     * The reference instance of <code>GET_AMRCLOG</code>
     */
    public static final GetAmrclog GET_AMRCLOG = new GetAmrclog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetAmrclogRecord> getRecordType() {
        return GetAmrclogRecord.class;
    }

    /**
     * The column <code>GET_AMRCLOG.GMRCL_CID</code>.
     */
    public final TableField<GetAmrclogRecord, Integer> GMRCL_CID = createField("GMRCL_CID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_SDATE</code>.
     */
    public final TableField<GetAmrclogRecord, Timestamp> GMRCL_SDATE = createField("GMRCL_SDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_EDATE</code>.
     */
    public final TableField<GetAmrclogRecord, Timestamp> GMRCL_EDATE = createField("GMRCL_EDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_SAP</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_SAP = createField("GMRCL_SAP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_EAP</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_EAP = createField("GMRCL_EAP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_SRP</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_SRP = createField("GMRCL_SRP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_ERP</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_ERP = createField("GMRCL_ERP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_P</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_P = createField("GMRCL_P", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_MINP</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_MINP = createField("GMRCL_MINP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_MAXP</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_MAXP = createField("GMRCL_MAXP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_Q</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_Q = createField("GMRCL_Q", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_MINQ</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_MINQ = createField("GMRCL_MINQ", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_AMRCLOG.GMRCL_MAXQ</code>.
     */
    public final TableField<GetAmrclogRecord, Double> GMRCL_MAXQ = createField("GMRCL_MAXQ", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>GET_AMRCLOG</code> table reference
     */
    public GetAmrclog() {
        this(DSL.name("GET_AMRCLOG"), null);
    }

    /**
     * Create an aliased <code>GET_AMRCLOG</code> table reference
     */
    public GetAmrclog(String alias) {
        this(DSL.name(alias), GET_AMRCLOG);
    }

    /**
     * Create an aliased <code>GET_AMRCLOG</code> table reference
     */
    public GetAmrclog(Name alias) {
        this(alias, GET_AMRCLOG);
    }

    private GetAmrclog(Name alias, Table<GetAmrclogRecord> aliased) {
        this(alias, aliased, new Field[3]);
    }

    private GetAmrclog(Name alias, Table<GetAmrclogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetAmrclog(Table<O> child, ForeignKey<O, GetAmrclogRecord> key) {
        super(child, key, GET_AMRCLOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetAmrclog as(String alias) {
        return new GetAmrclog(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetAmrclog as(Name alias) {
        return new GetAmrclog(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetAmrclog rename(String name) {
        return new GetAmrclog(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetAmrclog rename(Name name) {
        return new GetAmrclog(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetAmrclog call(Integer aid, Timestamp sdate, Timestamp edate) {
        return new GetAmrclog(DSL.name(getName()), null, new Field[] { 
              DSL.val(aid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(sdate, org.jooq.impl.SQLDataType.TIMESTAMP)
            , DSL.val(edate, org.jooq.impl.SQLDataType.TIMESTAMP)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetAmrclog call(Field<Integer> aid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return new GetAmrclog(DSL.name(getName()), null, new Field[] { 
              aid
            , sdate
            , edate
        });
    }
}
