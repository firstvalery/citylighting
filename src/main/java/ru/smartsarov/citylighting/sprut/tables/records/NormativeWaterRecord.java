/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.NormativeWater;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NormativeWaterRecord extends UpdatableRecordImpl<NormativeWaterRecord> implements Record15<Integer, Integer, Short, Short, Short, Short, Double, Double, Double, Double, Double, Double, Double, Double, Double> {

    private static final long serialVersionUID = 15869404;

    /**
     * Setter for <code>NORMATIVE_WATER.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.NORM_ID</code>.
     */
    public void setNormId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.NORM_ID</code>.
     */
    public Integer getNormId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.TYPE1</code>.
     */
    public void setType1(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.TYPE1</code>.
     */
    public Short getType1() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.TYPE2</code>.
     */
    public void setType2(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.TYPE2</code>.
     */
    public Short getType2() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.TYPE3</code>.
     */
    public void setType3(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.TYPE3</code>.
     */
    public Short getType3() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.TYPE4</code>.
     */
    public void setType4(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.TYPE4</code>.
     */
    public Short getType4() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.Q1</code>.
     */
    public void setQ1(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.Q1</code>.
     */
    public Double getQ1() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.V1</code>.
     */
    public void setV1(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.V1</code>.
     */
    public Double getV1() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.V2</code>.
     */
    public void setV2(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.V2</code>.
     */
    public Double getV2() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.GV1</code>.
     */
    public void setGv1(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.GV1</code>.
     */
    public Double getGv1() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.GV2</code>.
     */
    public void setGv2(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.GV2</code>.
     */
    public Double getGv2() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.T1</code>.
     */
    public void setT1(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.T1</code>.
     */
    public Double getT1() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.T2</code>.
     */
    public void setT2(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.T2</code>.
     */
    public Double getT2() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.P1</code>.
     */
    public void setP1(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.P1</code>.
     */
    public Double getP1() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>NORMATIVE_WATER.P2</code>.
     */
    public void setP2(Double value) {
        set(14, value);
    }

    /**
     * Getter for <code>NORMATIVE_WATER.P2</code>.
     */
    public Double getP2() {
        return (Double) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, Integer, Short, Short, Short, Short, Double, Double, Double, Double, Double, Double, Double, Double, Double> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, Integer, Short, Short, Short, Short, Double, Double, Double, Double, Double, Double, Double, Double, Double> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return NormativeWater.NORMATIVE_WATER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return NormativeWater.NORMATIVE_WATER.NORM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return NormativeWater.NORMATIVE_WATER.TYPE1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return NormativeWater.NORMATIVE_WATER.TYPE2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return NormativeWater.NORMATIVE_WATER.TYPE3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field6() {
        return NormativeWater.NORMATIVE_WATER.TYPE4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return NormativeWater.NORMATIVE_WATER.Q1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return NormativeWater.NORMATIVE_WATER.V1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return NormativeWater.NORMATIVE_WATER.V2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field10() {
        return NormativeWater.NORMATIVE_WATER.GV1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field11() {
        return NormativeWater.NORMATIVE_WATER.GV2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field12() {
        return NormativeWater.NORMATIVE_WATER.T1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field13() {
        return NormativeWater.NORMATIVE_WATER.T2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field14() {
        return NormativeWater.NORMATIVE_WATER.P1;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field15() {
        return NormativeWater.NORMATIVE_WATER.P2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getNormId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getType1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getType2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getType3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component6() {
        return getType4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getQ1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getV1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getV2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component10() {
        return getGv1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component11() {
        return getGv2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component12() {
        return getT1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component13() {
        return getT2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component14() {
        return getP1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component15() {
        return getP2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getNormId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getType1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getType2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getType3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value6() {
        return getType4();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getQ1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getV1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getV2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value10() {
        return getGv1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value11() {
        return getGv2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value12() {
        return getT1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value13() {
        return getT2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value14() {
        return getP1();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value15() {
        return getP2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value2(Integer value) {
        setNormId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value3(Short value) {
        setType1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value4(Short value) {
        setType2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value5(Short value) {
        setType3(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value6(Short value) {
        setType4(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value7(Double value) {
        setQ1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value8(Double value) {
        setV1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value9(Double value) {
        setV2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value10(Double value) {
        setGv1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value11(Double value) {
        setGv2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value12(Double value) {
        setT1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value13(Double value) {
        setT2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value14(Double value) {
        setP1(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord value15(Double value) {
        setP2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeWaterRecord values(Integer value1, Integer value2, Short value3, Short value4, Short value5, Short value6, Double value7, Double value8, Double value9, Double value10, Double value11, Double value12, Double value13, Double value14, Double value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NormativeWaterRecord
     */
    public NormativeWaterRecord() {
        super(NormativeWater.NORMATIVE_WATER);
    }

    /**
     * Create a detached, initialised NormativeWaterRecord
     */
    public NormativeWaterRecord(Integer id, Integer normId, Short type1, Short type2, Short type3, Short type4, Double q1, Double v1, Double v2, Double gv1, Double gv2, Double t1, Double t2, Double p1, Double p2) {
        super(NormativeWater.NORMATIVE_WATER);

        set(0, id);
        set(1, normId);
        set(2, type1);
        set(3, type2);
        set(4, type3);
        set(5, type4);
        set(6, q1);
        set(7, v1);
        set(8, v2);
        set(9, gv1);
        set(10, gv2);
        set(11, t1);
        set(12, t2);
        set(13, p1);
        set(14, p2);
    }
}
