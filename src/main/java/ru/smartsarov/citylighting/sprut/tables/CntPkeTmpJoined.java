/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.CntPkeTmpJoinedRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntPkeTmpJoined extends TableImpl<CntPkeTmpJoinedRecord> {

    private static final long serialVersionUID = 888485197;

    /**
     * The reference instance of <code>CNT_PKE_TMP_JOINED</code>
     */
    public static final CntPkeTmpJoined CNT_PKE_TMP_JOINED = new CntPkeTmpJoined();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntPkeTmpJoinedRecord> getRecordType() {
        return CntPkeTmpJoinedRecord.class;
    }

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_RECNO</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Integer> PKE_RECNO = createField("PKE_RECNO", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_IN1</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_IN1 = createField("PKE_IN1", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_OUT1</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_OUT1 = createField("PKE_OUT1", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_IN2</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_IN2 = createField("PKE_IN2", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_OUT2</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_OUT2 = createField("PKE_OUT2", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_IN3</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_IN3 = createField("PKE_IN3", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_OUT3</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_OUT3 = createField("PKE_OUT3", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_IN4</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_IN4 = createField("PKE_IN4", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_OUT4</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Timestamp> PKE_OUT4 = createField("PKE_OUT4", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_INDEX1</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Short> PKE_INDEX1 = createField("PKE_INDEX1", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_INDEX2</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Short> PKE_INDEX2 = createField("PKE_INDEX2", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_INDEX3</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Short> PKE_INDEX3 = createField("PKE_INDEX3", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CNT_PKE_TMP_JOINED.PKE_INDEX4</code>.
     */
    public final TableField<CntPkeTmpJoinedRecord, Short> PKE_INDEX4 = createField("PKE_INDEX4", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>CNT_PKE_TMP_JOINED</code> table reference
     */
    public CntPkeTmpJoined() {
        this(DSL.name("CNT_PKE_TMP_JOINED"), null);
    }

    /**
     * Create an aliased <code>CNT_PKE_TMP_JOINED</code> table reference
     */
    public CntPkeTmpJoined(String alias) {
        this(DSL.name(alias), CNT_PKE_TMP_JOINED);
    }

    /**
     * Create an aliased <code>CNT_PKE_TMP_JOINED</code> table reference
     */
    public CntPkeTmpJoined(Name alias) {
        this(alias, CNT_PKE_TMP_JOINED);
    }

    private CntPkeTmpJoined(Name alias, Table<CntPkeTmpJoinedRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntPkeTmpJoined(Name alias, Table<CntPkeTmpJoinedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntPkeTmpJoined(Table<O> child, ForeignKey<O, CntPkeTmpJoinedRecord> key) {
        super(child, key, CNT_PKE_TMP_JOINED);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntPkeTmpJoined as(String alias) {
        return new CntPkeTmpJoined(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntPkeTmpJoined as(Name alias) {
        return new CntPkeTmpJoined(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntPkeTmpJoined rename(String name) {
        return new CntPkeTmpJoined(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntPkeTmpJoined rename(Name name) {
        return new CntPkeTmpJoined(name, null);
    }
}
