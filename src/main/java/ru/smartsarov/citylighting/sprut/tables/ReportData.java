/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.ReportDataRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportData extends TableImpl<ReportDataRecord> {

    private static final long serialVersionUID = 341814283;

    /**
     * The reference instance of <code>REPORT_DATA</code>
     */
    public static final ReportData REPORT_DATA = new ReportData();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportDataRecord> getRecordType() {
        return ReportDataRecord.class;
    }

    /**
     * The column <code>REPORT_DATA.REPORT_ID</code>.
     */
    public final TableField<ReportDataRecord, Integer> REPORT_ID = createField("REPORT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_PARENT_ID</code>.
     */
    public final TableField<ReportDataRecord, Integer> REPORT_PARENT_ID = createField("REPORT_PARENT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_VER</code>.
     */
    public final TableField<ReportDataRecord, Integer> REPORT_VER = createField("REPORT_VER", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_PARENT_VER</code>.
     */
    public final TableField<ReportDataRecord, Integer> REPORT_PARENT_VER = createField("REPORT_PARENT_VER", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_CREATED</code>.
     */
    public final TableField<ReportDataRecord, Timestamp> REPORT_CREATED = createField("REPORT_CREATED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_EDITED</code>.
     */
    public final TableField<ReportDataRecord, Timestamp> REPORT_EDITED = createField("REPORT_EDITED", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_NAME</code>.
     */
    public final TableField<ReportDataRecord, String> REPORT_NAME = createField("REPORT_NAME", org.jooq.impl.SQLDataType.VARCHAR(250).nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_DESC</code>.
     */
    public final TableField<ReportDataRecord, String> REPORT_DESC = createField("REPORT_DESC", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_TYPE</code>.
     */
    public final TableField<ReportDataRecord, String> REPORT_TYPE = createField("REPORT_TYPE", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_DIALOG_TYPE</code>.
     */
    public final TableField<ReportDataRecord, String> REPORT_DIALOG_TYPE = createField("REPORT_DIALOG_TYPE", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_CRC</code>.
     */
    public final TableField<ReportDataRecord, Long> REPORT_CRC = createField("REPORT_CRC", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_DATA</code>.
     */
    public final TableField<ReportDataRecord, byte[]> REPORT_DATA_ = createField("REPORT_DATA", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>REPORT_DATA.AB_ID</code>.
     */
    public final TableField<ReportDataRecord, Integer> AB_ID = createField("AB_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.ACCESS_TYPE</code>.
     */
    public final TableField<ReportDataRecord, Integer> ACCESS_TYPE = createField("ACCESS_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_DATA.REPORT_FILTER_TYPES</code>.
     */
    public final TableField<ReportDataRecord, String> REPORT_FILTER_TYPES = createField("REPORT_FILTER_TYPES", org.jooq.impl.SQLDataType.VARCHAR(1024), this, "");

    /**
     * The column <code>REPORT_DATA.PROGTECH</code>.
     */
    public final TableField<ReportDataRecord, Short> PROGTECH = createField("PROGTECH", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>REPORT_DATA.SUPPORTED_TYPES</code>.
     */
    public final TableField<ReportDataRecord, String> SUPPORTED_TYPES = createField("SUPPORTED_TYPES", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * Create a <code>REPORT_DATA</code> table reference
     */
    public ReportData() {
        this(DSL.name("REPORT_DATA"), null);
    }

    /**
     * Create an aliased <code>REPORT_DATA</code> table reference
     */
    public ReportData(String alias) {
        this(DSL.name(alias), REPORT_DATA);
    }

    /**
     * Create an aliased <code>REPORT_DATA</code> table reference
     */
    public ReportData(Name alias) {
        this(alias, REPORT_DATA);
    }

    private ReportData(Name alias, Table<ReportDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportData(Name alias, Table<ReportDataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReportData(Table<O> child, ForeignKey<O, ReportDataRecord> key) {
        super(child, key, REPORT_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReportDataRecord> getPrimaryKey() {
        return Keys.PK_REPORT_DATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReportDataRecord>> getKeys() {
        return Arrays.<UniqueKey<ReportDataRecord>>asList(Keys.PK_REPORT_DATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportData as(String alias) {
        return new ReportData(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportData as(Name alias) {
        return new ReportData(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportData rename(String name) {
        return new ReportData(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportData rename(Name name) {
        return new ReportData(name, null);
    }
}
