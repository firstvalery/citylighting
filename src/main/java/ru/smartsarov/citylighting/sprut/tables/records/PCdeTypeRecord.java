/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.PCdeType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PCdeTypeRecord extends UpdatableRecordImpl<PCdeTypeRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1569511630;

    /**
     * Setter for <code>P_CDE_TYPE.PCT_ID</code>.
     */
    public void setPctId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>P_CDE_TYPE.PCT_ID</code>.
     */
    public Integer getPctId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>P_CDE_TYPE.PCT_NAME</code>.
     */
    public void setPctName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>P_CDE_TYPE.PCT_NAME</code>.
     */
    public String getPctName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>P_CDE_TYPE.PCT_SNAME</code>.
     */
    public void setPctSname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>P_CDE_TYPE.PCT_SNAME</code>.
     */
    public String getPctSname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>P_CDE_TYPE.PCT_IK</code>.
     */
    public void setPctIk(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>P_CDE_TYPE.PCT_IK</code>.
     */
    public String getPctIk() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return PCdeType.P_CDE_TYPE.PCT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return PCdeType.P_CDE_TYPE.PCT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return PCdeType.P_CDE_TYPE.PCT_SNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PCdeType.P_CDE_TYPE.PCT_IK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getPctId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getPctName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getPctSname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getPctIk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPctId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getPctName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getPctSname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getPctIk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeTypeRecord value1(Integer value) {
        setPctId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeTypeRecord value2(String value) {
        setPctName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeTypeRecord value3(String value) {
        setPctSname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeTypeRecord value4(String value) {
        setPctIk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeTypeRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PCdeTypeRecord
     */
    public PCdeTypeRecord() {
        super(PCdeType.P_CDE_TYPE);
    }

    /**
     * Create a detached, initialised PCdeTypeRecord
     */
    public PCdeTypeRecord(Integer pctId, String pctName, String pctSname, String pctIk) {
        super(PCdeType.P_CDE_TYPE);

        set(0, pctId);
        set(1, pctName);
        set(2, pctSname);
        set(3, pctIk);
    }
}
