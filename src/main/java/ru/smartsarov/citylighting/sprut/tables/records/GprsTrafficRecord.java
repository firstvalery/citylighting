/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record15;
import org.jooq.Record2;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.GprsTraffic;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GprsTrafficRecord extends UpdatableRecordImpl<GprsTrafficRecord> implements Record15<Integer, Timestamp, Integer, Integer, Integer, Integer, Integer, Integer, Long, Long, Long, Long, Short, BigDecimal, Short> {

    private static final long serialVersionUID = 246316318;

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_ID</code>.
     */
    public void setUskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_ID</code>.
     */
    public Integer getUskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.LOG_TIME</code>.
     */
    public void setLogTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.LOG_TIME</code>.
     */
    public Timestamp getLogTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.PROXY_TX</code>.
     */
    public void setProxyTx(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.PROXY_TX</code>.
     */
    public Integer getProxyTx() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_RX_TCP</code>.
     */
    public void setUskRxTcp(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_RX_TCP</code>.
     */
    public Integer getUskRxTcp() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_RX_RAW</code>.
     */
    public void setUskRxRaw(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_RX_RAW</code>.
     */
    public Integer getUskRxRaw() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.PROXY_RX</code>.
     */
    public void setProxyRx(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.PROXY_RX</code>.
     */
    public Integer getProxyRx() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_TX_TCP</code>.
     */
    public void setUskTxTcp(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_TX_TCP</code>.
     */
    public Integer getUskTxTcp() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_TX_RAW</code>.
     */
    public void setUskTxRaw(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_TX_RAW</code>.
     */
    public Integer getUskTxRaw() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_RX_TCP_TOT</code>.
     */
    public void setUskRxTcpTot(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_RX_TCP_TOT</code>.
     */
    public Long getUskRxTcpTot() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_RX_RAW_TOT</code>.
     */
    public void setUskRxRawTot(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_RX_RAW_TOT</code>.
     */
    public Long getUskRxRawTot() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_TX_TCP_TOT</code>.
     */
    public void setUskTxTcpTot(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_TX_TCP_TOT</code>.
     */
    public Long getUskTxTcpTot() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.USK_TX_RAW_TOT</code>.
     */
    public void setUskTxRawTot(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.USK_TX_RAW_TOT</code>.
     */
    public Long getUskTxRawTot() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.INCOMPLETE</code>.
     */
    public void setIncomplete(Short value) {
        set(12, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.INCOMPLETE</code>.
     */
    public Short getIncomplete() {
        return (Short) get(12);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.SIGNAL_LEVEL</code>.
     */
    public void setSignalLevel(BigDecimal value) {
        set(13, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.SIGNAL_LEVEL</code>.
     */
    public BigDecimal getSignalLevel() {
        return (BigDecimal) get(13);
    }

    /**
     * Setter for <code>GPRS_TRAFFIC.RESET_COUNT</code>.
     */
    public void setResetCount(Short value) {
        set(14, value);
    }

    /**
     * Getter for <code>GPRS_TRAFFIC.RESET_COUNT</code>.
     */
    public Short getResetCount() {
        return (Short) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Integer, Timestamp> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, Timestamp, Integer, Integer, Integer, Integer, Integer, Integer, Long, Long, Long, Long, Short, BigDecimal, Short> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row15<Integer, Timestamp, Integer, Integer, Integer, Integer, Integer, Integer, Long, Long, Long, Long, Short, BigDecimal, Short> valuesRow() {
        return (Row15) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return GprsTraffic.GPRS_TRAFFIC.USK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return GprsTraffic.GPRS_TRAFFIC.LOG_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return GprsTraffic.GPRS_TRAFFIC.PROXY_TX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return GprsTraffic.GPRS_TRAFFIC.USK_RX_TCP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return GprsTraffic.GPRS_TRAFFIC.USK_RX_RAW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return GprsTraffic.GPRS_TRAFFIC.PROXY_RX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return GprsTraffic.GPRS_TRAFFIC.USK_TX_TCP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return GprsTraffic.GPRS_TRAFFIC.USK_TX_RAW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field9() {
        return GprsTraffic.GPRS_TRAFFIC.USK_RX_TCP_TOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return GprsTraffic.GPRS_TRAFFIC.USK_RX_RAW_TOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return GprsTraffic.GPRS_TRAFFIC.USK_TX_TCP_TOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return GprsTraffic.GPRS_TRAFFIC.USK_TX_RAW_TOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field13() {
        return GprsTraffic.GPRS_TRAFFIC.INCOMPLETE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field14() {
        return GprsTraffic.GPRS_TRAFFIC.SIGNAL_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field15() {
        return GprsTraffic.GPRS_TRAFFIC.RESET_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getUskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getLogTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getProxyTx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getUskRxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getUskRxRaw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getProxyRx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getUskTxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getUskTxRaw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component9() {
        return getUskRxTcpTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component10() {
        return getUskRxRawTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getUskTxTcpTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getUskTxRawTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component13() {
        return getIncomplete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component14() {
        return getSignalLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component15() {
        return getResetCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getUskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getLogTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProxyTx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getUskRxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getUskRxRaw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getProxyRx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getUskTxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getUskTxRaw();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value9() {
        return getUskRxTcpTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getUskRxRawTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getUskTxTcpTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getUskTxRawTot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value13() {
        return getIncomplete();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value14() {
        return getSignalLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value15() {
        return getResetCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value1(Integer value) {
        setUskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value2(Timestamp value) {
        setLogTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value3(Integer value) {
        setProxyTx(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value4(Integer value) {
        setUskRxTcp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value5(Integer value) {
        setUskRxRaw(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value6(Integer value) {
        setProxyRx(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value7(Integer value) {
        setUskTxTcp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value8(Integer value) {
        setUskTxRaw(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value9(Long value) {
        setUskRxTcpTot(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value10(Long value) {
        setUskRxRawTot(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value11(Long value) {
        setUskTxTcpTot(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value12(Long value) {
        setUskTxRawTot(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value13(Short value) {
        setIncomplete(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value14(BigDecimal value) {
        setSignalLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord value15(Short value) {
        setResetCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTrafficRecord values(Integer value1, Timestamp value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, Long value9, Long value10, Long value11, Long value12, Short value13, BigDecimal value14, Short value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GprsTrafficRecord
     */
    public GprsTrafficRecord() {
        super(GprsTraffic.GPRS_TRAFFIC);
    }

    /**
     * Create a detached, initialised GprsTrafficRecord
     */
    public GprsTrafficRecord(Integer uskId, Timestamp logTime, Integer proxyTx, Integer uskRxTcp, Integer uskRxRaw, Integer proxyRx, Integer uskTxTcp, Integer uskTxRaw, Long uskRxTcpTot, Long uskRxRawTot, Long uskTxTcpTot, Long uskTxRawTot, Short incomplete, BigDecimal signalLevel, Short resetCount) {
        super(GprsTraffic.GPRS_TRAFFIC);

        set(0, uskId);
        set(1, logTime);
        set(2, proxyTx);
        set(3, uskRxTcp);
        set(4, uskRxRaw);
        set(5, proxyRx);
        set(6, uskTxTcp);
        set(7, uskTxRaw);
        set(8, uskRxTcpTot);
        set(9, uskRxRawTot);
        set(10, uskTxTcpTot);
        set(11, uskTxRawTot);
        set(12, incomplete);
        set(13, signalLevel);
        set(14, resetCount);
    }
}
