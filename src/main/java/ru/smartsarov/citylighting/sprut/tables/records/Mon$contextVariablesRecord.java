/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Mon$contextVariables;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mon$contextVariablesRecord extends TableRecordImpl<Mon$contextVariablesRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = 1876669575;

    /**
     * Setter for <code>MON$CONTEXT_VARIABLES.MON$ATTACHMENT_ID</code>.
     */
    public void setMon$attachmentId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>MON$CONTEXT_VARIABLES.MON$ATTACHMENT_ID</code>.
     */
    public Integer getMon$attachmentId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>MON$CONTEXT_VARIABLES.MON$TRANSACTION_ID</code>.
     */
    public void setMon$transactionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>MON$CONTEXT_VARIABLES.MON$TRANSACTION_ID</code>.
     */
    public Integer getMon$transactionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>MON$CONTEXT_VARIABLES.MON$VARIABLE_NAME</code>.
     */
    public void setMon$variableName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>MON$CONTEXT_VARIABLES.MON$VARIABLE_NAME</code>.
     */
    public String getMon$variableName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>MON$CONTEXT_VARIABLES.MON$VARIABLE_VALUE</code>.
     */
    public void setMon$variableValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>MON$CONTEXT_VARIABLES.MON$VARIABLE_VALUE</code>.
     */
    public String getMon$variableValue() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Mon$contextVariables.MON$CONTEXT_VARIABLES.MON$ATTACHMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Mon$contextVariables.MON$CONTEXT_VARIABLES.MON$TRANSACTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Mon$contextVariables.MON$CONTEXT_VARIABLES.MON$VARIABLE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Mon$contextVariables.MON$CONTEXT_VARIABLES.MON$VARIABLE_VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMon$attachmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getMon$transactionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getMon$variableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getMon$variableValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMon$attachmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getMon$transactionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getMon$variableName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMon$variableValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$contextVariablesRecord value1(Integer value) {
        setMon$attachmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$contextVariablesRecord value2(Integer value) {
        setMon$transactionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$contextVariablesRecord value3(String value) {
        setMon$variableName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$contextVariablesRecord value4(String value) {
        setMon$variableValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$contextVariablesRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Mon$contextVariablesRecord
     */
    public Mon$contextVariablesRecord() {
        super(Mon$contextVariables.MON$CONTEXT_VARIABLES);
    }

    /**
     * Create a detached, initialised Mon$contextVariablesRecord
     */
    public Mon$contextVariablesRecord(Integer mon$attachmentId, Integer mon$transactionId, String mon$variableName, String mon$variableValue) {
        super(Mon$contextVariables.MON$CONTEXT_VARIABLES);

        set(0, mon$attachmentId);
        set(1, mon$transactionId);
        set(2, mon$variableName);
        set(3, mon$variableValue);
    }
}
