/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetControlStateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetControlState extends TableImpl<GetControlStateRecord> {

    private static final long serialVersionUID = -932876488;

    /**
     * The reference instance of <code>GET_CONTROL_STATE</code>
     */
    public static final GetControlState GET_CONTROL_STATE = new GetControlState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetControlStateRecord> getRecordType() {
        return GetControlStateRecord.class;
    }

    /**
     * The column <code>GET_CONTROL_STATE.OBJ_ID</code>.
     */
    public final TableField<GetControlStateRecord, Integer> OBJ_ID = createField("OBJ_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_CONTROL_STATE.OBJ_ACTION_STATE</code>.
     */
    public final TableField<GetControlStateRecord, String> OBJ_ACTION_STATE = createField("OBJ_ACTION_STATE", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * Create a <code>GET_CONTROL_STATE</code> table reference
     */
    public GetControlState() {
        this(DSL.name("GET_CONTROL_STATE"), null);
    }

    /**
     * Create an aliased <code>GET_CONTROL_STATE</code> table reference
     */
    public GetControlState(String alias) {
        this(DSL.name(alias), GET_CONTROL_STATE);
    }

    /**
     * Create an aliased <code>GET_CONTROL_STATE</code> table reference
     */
    public GetControlState(Name alias) {
        this(alias, GET_CONTROL_STATE);
    }

    private GetControlState(Name alias, Table<GetControlStateRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private GetControlState(Name alias, Table<GetControlStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetControlState(Table<O> child, ForeignKey<O, GetControlStateRecord> key) {
        super(child, key, GET_CONTROL_STATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetControlState as(String alias) {
        return new GetControlState(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetControlState as(Name alias) {
        return new GetControlState(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetControlState rename(String name) {
        return new GetControlState(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetControlState rename(Name name) {
        return new GetControlState(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetControlState call(String login, String pass) {
        return new GetControlState(DSL.name(getName()), null, new Field[] { 
              DSL.val(login, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(pass, org.jooq.impl.SQLDataType.VARCHAR(32))
        });
    }

    /**
     * Call this table-valued function
     */
    public GetControlState call(Field<String> login, Field<String> pass) {
        return new GetControlState(DSL.name(getName()), null, new Field[] { 
              login
            , pass
        });
    }
}
