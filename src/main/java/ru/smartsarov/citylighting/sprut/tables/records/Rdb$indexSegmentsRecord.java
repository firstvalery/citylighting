/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$indexSegments;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$indexSegmentsRecord extends TableRecordImpl<Rdb$indexSegmentsRecord> implements Record4<String, String, Short, Double> {

    private static final long serialVersionUID = -1471794382;

    /**
     * Setter for <code>RDB$INDEX_SEGMENTS.RDB$INDEX_NAME</code>.
     */
    public void setRdb$indexName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$INDEX_SEGMENTS.RDB$INDEX_NAME</code>.
     */
    public String getRdb$indexName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>RDB$INDEX_SEGMENTS.RDB$FIELD_NAME</code>.
     */
    public void setRdb$fieldName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$INDEX_SEGMENTS.RDB$FIELD_NAME</code>.
     */
    public String getRdb$fieldName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>RDB$INDEX_SEGMENTS.RDB$FIELD_POSITION</code>.
     */
    public void setRdb$fieldPosition(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$INDEX_SEGMENTS.RDB$FIELD_POSITION</code>.
     */
    public Short getRdb$fieldPosition() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>RDB$INDEX_SEGMENTS.RDB$STATISTICS</code>.
     */
    public void setRdb$statistics(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$INDEX_SEGMENTS.RDB$STATISTICS</code>.
     */
    public Double getRdb$statistics() {
        return (Double) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Short, Double> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Short, Double> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Rdb$indexSegments.RDB$INDEX_SEGMENTS.RDB$INDEX_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Rdb$indexSegments.RDB$INDEX_SEGMENTS.RDB$FIELD_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Rdb$indexSegments.RDB$INDEX_SEGMENTS.RDB$FIELD_POSITION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Rdb$indexSegments.RDB$INDEX_SEGMENTS.RDB$STATISTICS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getRdb$indexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRdb$fieldName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getRdb$fieldPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getRdb$statistics();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRdb$indexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRdb$fieldName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getRdb$fieldPosition();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getRdb$statistics();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$indexSegmentsRecord value1(String value) {
        setRdb$indexName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$indexSegmentsRecord value2(String value) {
        setRdb$fieldName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$indexSegmentsRecord value3(Short value) {
        setRdb$fieldPosition(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$indexSegmentsRecord value4(Double value) {
        setRdb$statistics(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$indexSegmentsRecord values(String value1, String value2, Short value3, Double value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$indexSegmentsRecord
     */
    public Rdb$indexSegmentsRecord() {
        super(Rdb$indexSegments.RDB$INDEX_SEGMENTS);
    }

    /**
     * Create a detached, initialised Rdb$indexSegmentsRecord
     */
    public Rdb$indexSegmentsRecord(String rdb$indexName, String rdb$fieldName, Short rdb$fieldPosition, Double rdb$statistics) {
        super(Rdb$indexSegments.RDB$INDEX_SEGMENTS);

        set(0, rdb$indexName);
        set(1, rdb$fieldName);
        set(2, rdb$fieldPosition);
        set(3, rdb$statistics);
    }
}
