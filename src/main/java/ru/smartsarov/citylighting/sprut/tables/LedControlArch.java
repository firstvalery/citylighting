/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.LedControlArchRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LedControlArch extends TableImpl<LedControlArchRecord> {

    private static final long serialVersionUID = 1223952231;

    /**
     * The reference instance of <code>LED_CONTROL_ARCH</code>
     */
    public static final LedControlArch LED_CONTROL_ARCH = new LedControlArch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LedControlArchRecord> getRecordType() {
        return LedControlArchRecord.class;
    }

    /**
     * The column <code>LED_CONTROL_ARCH.LED_CONTROL_RECORD_ID</code>.
     */
    public final TableField<LedControlArchRecord, Integer> LED_CONTROL_RECORD_ID = createField("LED_CONTROL_RECORD_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LED_CONTROL_ARCH.MODULE_ID</code>.
     */
    public final TableField<LedControlArchRecord, Integer> MODULE_ID = createField("MODULE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LED_CONTROL_ARCH.SERVER_TIME</code>.
     */
    public final TableField<LedControlArchRecord, Timestamp> SERVER_TIME = createField("SERVER_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>LED_CONTROL_ARCH.STATE</code>.
     */
    public final TableField<LedControlArchRecord, Integer> STATE = createField("STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>LED_CONTROL_ARCH.DIMM_STATE</code>.
     */
    public final TableField<LedControlArchRecord, Integer> DIMM_STATE = createField("DIMM_STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>LED_CONTROL_ARCH.TEMPERATURE</code>.
     */
    public final TableField<LedControlArchRecord, Double> TEMPERATURE = createField("TEMPERATURE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>LED_CONTROL_ARCH</code> table reference
     */
    public LedControlArch() {
        this(DSL.name("LED_CONTROL_ARCH"), null);
    }

    /**
     * Create an aliased <code>LED_CONTROL_ARCH</code> table reference
     */
    public LedControlArch(String alias) {
        this(DSL.name(alias), LED_CONTROL_ARCH);
    }

    /**
     * Create an aliased <code>LED_CONTROL_ARCH</code> table reference
     */
    public LedControlArch(Name alias) {
        this(alias, LED_CONTROL_ARCH);
    }

    private LedControlArch(Name alias, Table<LedControlArchRecord> aliased) {
        this(alias, aliased, null);
    }

    private LedControlArch(Name alias, Table<LedControlArchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LedControlArch(Table<O> child, ForeignKey<O, LedControlArchRecord> key) {
        super(child, key, LED_CONTROL_ARCH);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LedControlArchRecord> getPrimaryKey() {
        return Keys.INTEG_249;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LedControlArchRecord>> getKeys() {
        return Arrays.<UniqueKey<LedControlArchRecord>>asList(Keys.INTEG_249);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LedControlArch as(String alias) {
        return new LedControlArch(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LedControlArch as(Name alias) {
        return new LedControlArch(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LedControlArch rename(String name) {
        return new LedControlArch(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LedControlArch rename(Name name) {
        return new LedControlArch(name, null);
    }
}
