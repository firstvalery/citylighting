/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.CsdModemLocalState;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CsdModemLocalStateRecord extends UpdatableRecordImpl<CsdModemLocalStateRecord> implements Record4<Integer, Integer, Timestamp, Short> {

    private static final long serialVersionUID = 1610415815;

    /**
     * Setter for <code>CSD_MODEM_LOCAL_STATE.MODEM_ID</code>.
     */
    public void setModemId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>CSD_MODEM_LOCAL_STATE.MODEM_ID</code>.
     */
    public Integer getModemId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>CSD_MODEM_LOCAL_STATE.LAST_SESS_ID</code>.
     */
    public void setLastSessId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>CSD_MODEM_LOCAL_STATE.LAST_SESS_ID</code>.
     */
    public Integer getLastSessId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>CSD_MODEM_LOCAL_STATE.LAST_OPEN</code>.
     */
    public void setLastOpen(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>CSD_MODEM_LOCAL_STATE.LAST_OPEN</code>.
     */
    public Timestamp getLastOpen() {
        return (Timestamp) get(2);
    }

    /**
     * Setter for <code>CSD_MODEM_LOCAL_STATE.LAST_STATE</code>.
     */
    public void setLastState(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>CSD_MODEM_LOCAL_STATE.LAST_STATE</code>.
     */
    public Short getLastState() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Timestamp, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Integer, Timestamp, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CsdModemLocalState.CSD_MODEM_LOCAL_STATE.MODEM_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CsdModemLocalState.CSD_MODEM_LOCAL_STATE.LAST_SESS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field3() {
        return CsdModemLocalState.CSD_MODEM_LOCAL_STATE.LAST_OPEN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return CsdModemLocalState.CSD_MODEM_LOCAL_STATE.LAST_STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getModemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getLastSessId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component3() {
        return getLastOpen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getLastState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getModemId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getLastSessId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value3() {
        return getLastOpen();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getLastState();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocalStateRecord value1(Integer value) {
        setModemId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocalStateRecord value2(Integer value) {
        setLastSessId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocalStateRecord value3(Timestamp value) {
        setLastOpen(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocalStateRecord value4(Short value) {
        setLastState(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocalStateRecord values(Integer value1, Integer value2, Timestamp value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CsdModemLocalStateRecord
     */
    public CsdModemLocalStateRecord() {
        super(CsdModemLocalState.CSD_MODEM_LOCAL_STATE);
    }

    /**
     * Create a detached, initialised CsdModemLocalStateRecord
     */
    public CsdModemLocalStateRecord(Integer modemId, Integer lastSessId, Timestamp lastOpen, Short lastState) {
        super(CsdModemLocalState.CSD_MODEM_LOCAL_STATE);

        set(0, modemId);
        set(1, lastSessId);
        set(2, lastOpen);
        set(3, lastState);
    }
}
