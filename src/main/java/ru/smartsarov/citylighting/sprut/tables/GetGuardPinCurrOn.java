/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinCurrOnRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetGuardPinCurrOn extends TableImpl<GetGuardPinCurrOnRecord> {

    private static final long serialVersionUID = 1094449012;

    /**
     * The reference instance of <code>GET_GUARD_PIN_CURR_ON</code>
     */
    public static final GetGuardPinCurrOn GET_GUARD_PIN_CURR_ON = new GetGuardPinCurrOn();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetGuardPinCurrOnRecord> getRecordType() {
        return GetGuardPinCurrOnRecord.class;
    }

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_ID</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, Integer> GPC_PIN_ID = createField("GPC_PIN_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_ENTRY</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, Integer> GPC_PIN_ENTRY = createField("GPC_PIN_ENTRY", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_NAME</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, String> GPC_PIN_NAME = createField("GPC_PIN_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_TYPE</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, String> GPC_PIN_TYPE = createField("GPC_PIN_TYPE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_VALUE</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, Integer> GPC_PIN_VALUE = createField("GPC_PIN_VALUE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_TIME</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, Timestamp> GPC_PIN_TIME = createField("GPC_PIN_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_PIN_STATE</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, Integer> GPC_PIN_STATE = createField("GPC_PIN_STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_ZONE_NAME</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, String> GPC_ZONE_NAME = createField("GPC_ZONE_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_ZONE_ADR</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, String> GPC_ZONE_ADR = createField("GPC_ZONE_ADR", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>GET_GUARD_PIN_CURR_ON.GPC_USK_IP</code>.
     */
    public final TableField<GetGuardPinCurrOnRecord, String> GPC_USK_IP = createField("GPC_USK_IP", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * Create a <code>GET_GUARD_PIN_CURR_ON</code> table reference
     */
    public GetGuardPinCurrOn() {
        this(DSL.name("GET_GUARD_PIN_CURR_ON"), null);
    }

    /**
     * Create an aliased <code>GET_GUARD_PIN_CURR_ON</code> table reference
     */
    public GetGuardPinCurrOn(String alias) {
        this(DSL.name(alias), GET_GUARD_PIN_CURR_ON);
    }

    /**
     * Create an aliased <code>GET_GUARD_PIN_CURR_ON</code> table reference
     */
    public GetGuardPinCurrOn(Name alias) {
        this(alias, GET_GUARD_PIN_CURR_ON);
    }

    private GetGuardPinCurrOn(Name alias, Table<GetGuardPinCurrOnRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private GetGuardPinCurrOn(Name alias, Table<GetGuardPinCurrOnRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetGuardPinCurrOn(Table<O> child, ForeignKey<O, GetGuardPinCurrOnRecord> key) {
        super(child, key, GET_GUARD_PIN_CURR_ON);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGuardPinCurrOn as(String alias) {
        return new GetGuardPinCurrOn(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGuardPinCurrOn as(Name alias) {
        return new GetGuardPinCurrOn(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetGuardPinCurrOn rename(String name) {
        return new GetGuardPinCurrOn(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetGuardPinCurrOn rename(Name name) {
        return new GetGuardPinCurrOn(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetGuardPinCurrOn call(String login, String pass) {
        return new GetGuardPinCurrOn(DSL.name(getName()), null, new Field[] { 
              DSL.val(login, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(pass, org.jooq.impl.SQLDataType.VARCHAR(32))
        });
    }

    /**
     * Call this table-valued function
     */
    public GetGuardPinCurrOn call(Field<String> login, Field<String> pass) {
        return new GetGuardPinCurrOn(DSL.name(getName()), null, new Field[] { 
              login
            , pass
        });
    }
}
