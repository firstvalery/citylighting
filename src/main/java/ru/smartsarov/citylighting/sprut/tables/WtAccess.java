/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.WtAccessRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WtAccess extends TableImpl<WtAccessRecord> {

    private static final long serialVersionUID = 1822081906;

    /**
     * The reference instance of <code>WT_ACCESS</code>
     */
    public static final WtAccess WT_ACCESS = new WtAccess();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WtAccessRecord> getRecordType() {
        return WtAccessRecord.class;
    }

    /**
     * The column <code>WT_ACCESS.USER_ID</code>.
     */
    public final TableField<WtAccessRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_ACCESS.ELEMENT_ID</code>.
     */
    public final TableField<WtAccessRecord, Integer> ELEMENT_ID = createField("ELEMENT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_ACCESS.ELEMENT_TYPE</code>.
     */
    public final TableField<WtAccessRecord, Integer> ELEMENT_TYPE = createField("ELEMENT_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_ACCESS.ACCESS_TYPE</code>.
     */
    public final TableField<WtAccessRecord, Integer> ACCESS_TYPE = createField("ACCESS_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>WT_ACCESS.GRANTED_BY_USER_ID</code>.
     */
    public final TableField<WtAccessRecord, Integer> GRANTED_BY_USER_ID = createField("GRANTED_BY_USER_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>WT_ACCESS</code> table reference
     */
    public WtAccess() {
        this(DSL.name("WT_ACCESS"), null);
    }

    /**
     * Create an aliased <code>WT_ACCESS</code> table reference
     */
    public WtAccess(String alias) {
        this(DSL.name(alias), WT_ACCESS);
    }

    /**
     * Create an aliased <code>WT_ACCESS</code> table reference
     */
    public WtAccess(Name alias) {
        this(alias, WT_ACCESS);
    }

    private WtAccess(Name alias, Table<WtAccessRecord> aliased) {
        this(alias, aliased, null);
    }

    private WtAccess(Name alias, Table<WtAccessRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WtAccess(Table<O> child, ForeignKey<O, WtAccessRecord> key) {
        super(child, key, WT_ACCESS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WtAccessRecord> getPrimaryKey() {
        return Keys.PK_WT_ACCESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WtAccessRecord>> getKeys() {
        return Arrays.<UniqueKey<WtAccessRecord>>asList(Keys.PK_WT_ACCESS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtAccess as(String alias) {
        return new WtAccess(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtAccess as(Name alias) {
        return new WtAccess(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WtAccess rename(String name) {
        return new WtAccess(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WtAccess rename(Name name) {
        return new WtAccess(name, null);
    }
}
