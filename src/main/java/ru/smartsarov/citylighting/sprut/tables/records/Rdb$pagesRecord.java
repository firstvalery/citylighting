/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$pages;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$pagesRecord extends TableRecordImpl<Rdb$pagesRecord> implements Record4<Integer, Short, Integer, Short> {

    private static final long serialVersionUID = 529313171;

    /**
     * Setter for <code>RDB$PAGES.RDB$PAGE_NUMBER</code>.
     */
    public void setRdb$pageNumber(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$PAGES.RDB$PAGE_NUMBER</code>.
     */
    public Integer getRdb$pageNumber() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>RDB$PAGES.RDB$RELATION_ID</code>.
     */
    public void setRdb$relationId(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$PAGES.RDB$RELATION_ID</code>.
     */
    public Short getRdb$relationId() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>RDB$PAGES.RDB$PAGE_SEQUENCE</code>.
     */
    public void setRdb$pageSequence(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$PAGES.RDB$PAGE_SEQUENCE</code>.
     */
    public Integer getRdb$pageSequence() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>RDB$PAGES.RDB$PAGE_TYPE</code>.
     */
    public void setRdb$pageType(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$PAGES.RDB$PAGE_TYPE</code>.
     */
    public Short getRdb$pageType() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Short, Integer, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, Short, Integer, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Rdb$pages.RDB$PAGES.RDB$PAGE_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return Rdb$pages.RDB$PAGES.RDB$RELATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Rdb$pages.RDB$PAGES.RDB$PAGE_SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return Rdb$pages.RDB$PAGES.RDB$PAGE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getRdb$pageNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getRdb$relationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getRdb$pageSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getRdb$pageType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getRdb$pageNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getRdb$relationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getRdb$pageSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getRdb$pageType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$pagesRecord value1(Integer value) {
        setRdb$pageNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$pagesRecord value2(Short value) {
        setRdb$relationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$pagesRecord value3(Integer value) {
        setRdb$pageSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$pagesRecord value4(Short value) {
        setRdb$pageType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$pagesRecord values(Integer value1, Short value2, Integer value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$pagesRecord
     */
    public Rdb$pagesRecord() {
        super(Rdb$pages.RDB$PAGES);
    }

    /**
     * Create a detached, initialised Rdb$pagesRecord
     */
    public Rdb$pagesRecord(Integer rdb$pageNumber, Short rdb$relationId, Integer rdb$pageSequence, Short rdb$pageType) {
        super(Rdb$pages.RDB$PAGES);

        set(0, rdb$pageNumber);
        set(1, rdb$relationId);
        set(2, rdb$pageSequence);
        set(3, rdb$pageType);
    }
}
