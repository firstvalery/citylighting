/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.WtGroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WtGroup extends TableImpl<WtGroupRecord> {

    private static final long serialVersionUID = -817195988;

    /**
     * The reference instance of <code>WT_GROUP</code>
     */
    public static final WtGroup WT_GROUP = new WtGroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WtGroupRecord> getRecordType() {
        return WtGroupRecord.class;
    }

    /**
     * The column <code>WT_GROUP.GRP_ID</code>.
     */
    public final TableField<WtGroupRecord, Integer> GRP_ID = createField("GRP_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_GROUP.GRP_NAME</code>.
     */
    public final TableField<WtGroupRecord, String> GRP_NAME = createField("GRP_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>WT_GROUP.GRP_DESCRIPTION</code>.
     */
    public final TableField<WtGroupRecord, String> GRP_DESCRIPTION = createField("GRP_DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>WT_GROUP.GRP_DB_USER</code>.
     */
    public final TableField<WtGroupRecord, String> GRP_DB_USER = createField("GRP_DB_USER", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>WT_GROUP.GRP_DB_PASSWORD</code>.
     */
    public final TableField<WtGroupRecord, String> GRP_DB_PASSWORD = createField("GRP_DB_PASSWORD", org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

    /**
     * The column <code>WT_GROUP.GRP_DB_ROLE</code>.
     */
    public final TableField<WtGroupRecord, String> GRP_DB_ROLE = createField("GRP_DB_ROLE", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * Create a <code>WT_GROUP</code> table reference
     */
    public WtGroup() {
        this(DSL.name("WT_GROUP"), null);
    }

    /**
     * Create an aliased <code>WT_GROUP</code> table reference
     */
    public WtGroup(String alias) {
        this(DSL.name(alias), WT_GROUP);
    }

    /**
     * Create an aliased <code>WT_GROUP</code> table reference
     */
    public WtGroup(Name alias) {
        this(alias, WT_GROUP);
    }

    private WtGroup(Name alias, Table<WtGroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private WtGroup(Name alias, Table<WtGroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WtGroup(Table<O> child, ForeignKey<O, WtGroupRecord> key) {
        super(child, key, WT_GROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WtGroupRecord> getPrimaryKey() {
        return Keys.INTEG_144;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WtGroupRecord>> getKeys() {
        return Arrays.<UniqueKey<WtGroupRecord>>asList(Keys.INTEG_144);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtGroup as(String alias) {
        return new WtGroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtGroup as(Name alias) {
        return new WtGroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WtGroup rename(String name) {
        return new WtGroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WtGroup rename(Name name) {
        return new WtGroup(name, null);
    }
}
