/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntLstateRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntLstate extends TableImpl<CntLstateRecord> {

    private static final long serialVersionUID = 1061108649;

    /**
     * The reference instance of <code>CNT_LSTATE</code>
     */
    public static final CntLstate CNT_LSTATE = new CntLstate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntLstateRecord> getRecordType() {
        return CntLstateRecord.class;
    }

    /**
     * The column <code>CNT_LSTATE.CNTLS_ID</code>.
     */
    public final TableField<CntLstateRecord, Integer> CNTLS_ID = createField("CNTLS_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_LSTATE.CNTLS_NAME</code>.
     */
    public final TableField<CntLstateRecord, String> CNTLS_NAME = createField("CNTLS_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>CNT_LSTATE.CNTLS_SNAME</code>.
     */
    public final TableField<CntLstateRecord, String> CNTLS_SNAME = createField("CNTLS_SNAME", org.jooq.impl.SQLDataType.VARCHAR(16), this, "");

    /**
     * Create a <code>CNT_LSTATE</code> table reference
     */
    public CntLstate() {
        this(DSL.name("CNT_LSTATE"), null);
    }

    /**
     * Create an aliased <code>CNT_LSTATE</code> table reference
     */
    public CntLstate(String alias) {
        this(DSL.name(alias), CNT_LSTATE);
    }

    /**
     * Create an aliased <code>CNT_LSTATE</code> table reference
     */
    public CntLstate(Name alias) {
        this(alias, CNT_LSTATE);
    }

    private CntLstate(Name alias, Table<CntLstateRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntLstate(Name alias, Table<CntLstateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntLstate(Table<O> child, ForeignKey<O, CntLstateRecord> key) {
        super(child, key, CNT_LSTATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntLstateRecord> getPrimaryKey() {
        return Keys.INTEG_31;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntLstateRecord>> getKeys() {
        return Arrays.<UniqueKey<CntLstateRecord>>asList(Keys.INTEG_31);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntLstate as(String alias) {
        return new CntLstate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntLstate as(Name alias) {
        return new CntLstate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntLstate rename(String name) {
        return new CntLstate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntLstate rename(Name name) {
        return new CntLstate(name, null);
    }
}
