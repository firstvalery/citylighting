/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.UskChangeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UskChange extends TableImpl<UskChangeRecord> {

    private static final long serialVersionUID = -218616785;

    /**
     * The reference instance of <code>USK_CHANGE</code>
     */
    public static final UskChange USK_CHANGE = new UskChange();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UskChangeRecord> getRecordType() {
        return UskChangeRecord.class;
    }

    /**
     * The column <code>USK_CHANGE.USKC_ID</code>.
     */
    public final TableField<UskChangeRecord, Integer> USKC_ID = createField("USKC_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>USK_CHANGE.USKC_USK_ID</code>.
     */
    public final TableField<UskChangeRecord, Integer> USKC_USK_ID = createField("USKC_USK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>USK_CHANGE.USKC_TYPE</code>.
     */
    public final TableField<UskChangeRecord, Integer> USKC_TYPE = createField("USKC_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CHANGE.USKC_XUSER_ID</code>.
     */
    public final TableField<UskChangeRecord, Integer> USKC_XUSER_ID = createField("USKC_XUSER_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CHANGE.USKC_DATE</code>.
     */
    public final TableField<UskChangeRecord, Timestamp> USKC_DATE = createField("USKC_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>USK_CHANGE</code> table reference
     */
    public UskChange() {
        this(DSL.name("USK_CHANGE"), null);
    }

    /**
     * Create an aliased <code>USK_CHANGE</code> table reference
     */
    public UskChange(String alias) {
        this(DSL.name(alias), USK_CHANGE);
    }

    /**
     * Create an aliased <code>USK_CHANGE</code> table reference
     */
    public UskChange(Name alias) {
        this(alias, USK_CHANGE);
    }

    private UskChange(Name alias, Table<UskChangeRecord> aliased) {
        this(alias, aliased, null);
    }

    private UskChange(Name alias, Table<UskChangeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UskChange(Table<O> child, ForeignKey<O, UskChangeRecord> key) {
        super(child, key, USK_CHANGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UskChangeRecord> getPrimaryKey() {
        return Keys.INTEG_96;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UskChangeRecord>> getKeys() {
        return Arrays.<UniqueKey<UskChangeRecord>>asList(Keys.INTEG_96);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UskChange as(String alias) {
        return new UskChange(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UskChange as(Name alias) {
        return new UskChange(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UskChange rename(String name) {
        return new UskChange(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UskChange rename(Name name) {
        return new UskChange(name, null);
    }
}
