/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.Mon$attachmentsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mon$attachments extends TableImpl<Mon$attachmentsRecord> {

    private static final long serialVersionUID = 1365652470;

    /**
     * The reference instance of <code>MON$ATTACHMENTS</code>
     */
    public static final Mon$attachments MON$ATTACHMENTS = new Mon$attachments();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Mon$attachmentsRecord> getRecordType() {
        return Mon$attachmentsRecord.class;
    }

    /**
     * The column <code>MON$ATTACHMENTS.MON$ATTACHMENT_ID</code>.
     */
    public final TableField<Mon$attachmentsRecord, Integer> MON$ATTACHMENT_ID = createField("MON$ATTACHMENT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$SERVER_PID</code>.
     */
    public final TableField<Mon$attachmentsRecord, Integer> MON$SERVER_PID = createField("MON$SERVER_PID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$STATE</code>.
     */
    public final TableField<Mon$attachmentsRecord, Short> MON$STATE = createField("MON$STATE", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$ATTACHMENT_NAME</code>.
     */
    public final TableField<Mon$attachmentsRecord, String> MON$ATTACHMENT_NAME = createField("MON$ATTACHMENT_NAME", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$USER</code>.
     */
    public final TableField<Mon$attachmentsRecord, String> MON$USER = createField("MON$USER", org.jooq.impl.SQLDataType.CHAR, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$ROLE</code>.
     */
    public final TableField<Mon$attachmentsRecord, String> MON$ROLE = createField("MON$ROLE", org.jooq.impl.SQLDataType.CHAR, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$REMOTE_PROTOCOL</code>.
     */
    public final TableField<Mon$attachmentsRecord, String> MON$REMOTE_PROTOCOL = createField("MON$REMOTE_PROTOCOL", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$REMOTE_ADDRESS</code>.
     */
    public final TableField<Mon$attachmentsRecord, String> MON$REMOTE_ADDRESS = createField("MON$REMOTE_ADDRESS", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$REMOTE_PID</code>.
     */
    public final TableField<Mon$attachmentsRecord, Integer> MON$REMOTE_PID = createField("MON$REMOTE_PID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$CHARACTER_SET_ID</code>.
     */
    public final TableField<Mon$attachmentsRecord, Short> MON$CHARACTER_SET_ID = createField("MON$CHARACTER_SET_ID", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$TIMESTAMP</code>.
     */
    public final TableField<Mon$attachmentsRecord, Timestamp> MON$TIMESTAMP = createField("MON$TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$GARBAGE_COLLECTION</code>.
     */
    public final TableField<Mon$attachmentsRecord, Short> MON$GARBAGE_COLLECTION = createField("MON$GARBAGE_COLLECTION", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$REMOTE_PROCESS</code>.
     */
    public final TableField<Mon$attachmentsRecord, String> MON$REMOTE_PROCESS = createField("MON$REMOTE_PROCESS", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>MON$ATTACHMENTS.MON$STAT_ID</code>.
     */
    public final TableField<Mon$attachmentsRecord, Integer> MON$STAT_ID = createField("MON$STAT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>MON$ATTACHMENTS</code> table reference
     */
    public Mon$attachments() {
        this(DSL.name("MON$ATTACHMENTS"), null);
    }

    /**
     * Create an aliased <code>MON$ATTACHMENTS</code> table reference
     */
    public Mon$attachments(String alias) {
        this(DSL.name(alias), MON$ATTACHMENTS);
    }

    /**
     * Create an aliased <code>MON$ATTACHMENTS</code> table reference
     */
    public Mon$attachments(Name alias) {
        this(alias, MON$ATTACHMENTS);
    }

    private Mon$attachments(Name alias, Table<Mon$attachmentsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mon$attachments(Name alias, Table<Mon$attachmentsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Mon$attachments(Table<O> child, ForeignKey<O, Mon$attachmentsRecord> key) {
        super(child, key, MON$ATTACHMENTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$attachments as(String alias) {
        return new Mon$attachments(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$attachments as(Name alias) {
        return new Mon$attachments(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Mon$attachments rename(String name) {
        return new Mon$attachments(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Mon$attachments rename(Name name) {
        return new Mon$attachments(name, null);
    }
}
