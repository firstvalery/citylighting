/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetPkeTimesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetPkeTimes extends TableImpl<GetPkeTimesRecord> {

    private static final long serialVersionUID = 758710365;

    /**
     * The reference instance of <code>GET_PKE_TIMES</code>
     */
    public static final GetPkeTimes GET_PKE_TIMES = new GetPkeTimes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetPkeTimesRecord> getRecordType() {
        return GetPkeTimesRecord.class;
    }

    /**
     * The column <code>GET_PKE_TIMES.PKE_TIME_DESCR</code>.
     */
    public final TableField<GetPkeTimesRecord, String> PKE_TIME_DESCR = createField("PKE_TIME_DESCR", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_TIME_PHASE1</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_TIME_PHASE1 = createField("PKE_TIME_PHASE1", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_TIME_PHASE2</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_TIME_PHASE2 = createField("PKE_TIME_PHASE2", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_TIME_PHASE3</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_TIME_PHASE3 = createField("PKE_TIME_PHASE3", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_TIME_FREQ</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_TIME_FREQ = createField("PKE_TIME_FREQ", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_PERC_PHASE1</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_PERC_PHASE1 = createField("PKE_PERC_PHASE1", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_PERC_PHASE2</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_PERC_PHASE2 = createField("PKE_PERC_PHASE2", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_PERC_PHASE3</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_PERC_PHASE3 = createField("PKE_PERC_PHASE3", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_PERC_FREQ</code>.
     */
    public final TableField<GetPkeTimesRecord, Float> PKE_PERC_FREQ = createField("PKE_PERC_FREQ", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_PKE_TIMES.PKE_COLOR</code>.
     */
    public final TableField<GetPkeTimesRecord, Integer> PKE_COLOR = createField("PKE_COLOR", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>GET_PKE_TIMES</code> table reference
     */
    public GetPkeTimes() {
        this(DSL.name("GET_PKE_TIMES"), null);
    }

    /**
     * Create an aliased <code>GET_PKE_TIMES</code> table reference
     */
    public GetPkeTimes(String alias) {
        this(DSL.name(alias), GET_PKE_TIMES);
    }

    /**
     * Create an aliased <code>GET_PKE_TIMES</code> table reference
     */
    public GetPkeTimes(Name alias) {
        this(alias, GET_PKE_TIMES);
    }

    private GetPkeTimes(Name alias, Table<GetPkeTimesRecord> aliased) {
        this(alias, aliased, new Field[3]);
    }

    private GetPkeTimes(Name alias, Table<GetPkeTimesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetPkeTimes(Table<O> child, ForeignKey<O, GetPkeTimesRecord> key) {
        super(child, key, GET_PKE_TIMES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetPkeTimes as(String alias) {
        return new GetPkeTimes(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetPkeTimes as(Name alias) {
        return new GetPkeTimes(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetPkeTimes rename(String name) {
        return new GetPkeTimes(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetPkeTimes rename(Name name) {
        return new GetPkeTimes(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetPkeTimes call(Integer cid, Date sdate, Date edate) {
        return new GetPkeTimes(DSL.name(getName()), null, new Field[] { 
              DSL.val(cid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(sdate, org.jooq.impl.SQLDataType.DATE)
            , DSL.val(edate, org.jooq.impl.SQLDataType.DATE)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetPkeTimes call(Field<Integer> cid, Field<Date> sdate, Field<Date> edate) {
        return new GetPkeTimes(DSL.name(getName()), null, new Field[] { 
              cid
            , sdate
            , edate
        });
    }
}
