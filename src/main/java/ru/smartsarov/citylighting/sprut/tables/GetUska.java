/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetUskaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetUska extends TableImpl<GetUskaRecord> {

    private static final long serialVersionUID = -1438974997;

    /**
     * The reference instance of <code>GET_USKA</code>
     */
    public static final GetUska GET_USKA = new GetUska();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetUskaRecord> getRecordType() {
        return GetUskaRecord.class;
    }

    /**
     * The column <code>GET_USKA.USK_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> USK_ID = createField("USK_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.USK_AB_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> USK_AB_ID = createField("USK_AB_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.USK_UID</code>.
     */
    public final TableField<GetUskaRecord, Integer> USK_UID = createField("USK_UID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.USK_TYPE</code>.
     */
    public final TableField<GetUskaRecord, String> USK_TYPE = createField("USK_TYPE", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>GET_USKA.USK_IP</code>.
     */
    public final TableField<GetUskaRecord, String> USK_IP = createField("USK_IP", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>GET_USKA.USK_KEY</code>.
     */
    public final TableField<GetUskaRecord, String> USK_KEY = createField("USK_KEY", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>GET_USKA.ADR_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> ADR_ID = createField("ADR_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.FLT_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> FLT_ID = createField("FLT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.HOME_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> HOME_ID = createField("HOME_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.STRT_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> STRT_ID = createField("STRT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.CITY_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> CITY_ID = createField("CITY_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.REGION_ID</code>.
     */
    public final TableField<GetUskaRecord, Integer> REGION_ID = createField("REGION_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_USKA.ADR_STR</code>.
     */
    public final TableField<GetUskaRecord, String> ADR_STR = createField("ADR_STR", org.jooq.impl.SQLDataType.VARCHAR(250), this, "");

    /**
     * The column <code>GET_USKA.STIME</code>.
     */
    public final TableField<GetUskaRecord, Timestamp> STIME = createField("STIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_USKA.UTIME</code>.
     */
    public final TableField<GetUskaRecord, Timestamp> UTIME = createField("UTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_USKA.ERR_STATE</code>.
     */
    public final TableField<GetUskaRecord, String> ERR_STATE = createField("ERR_STATE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>GET_USKA.SRV_TYPE</code>.
     */
    public final TableField<GetUskaRecord, String> SRV_TYPE = createField("SRV_TYPE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>GET_USKA.STATE</code>.
     */
    public final TableField<GetUskaRecord, String> STATE = createField("STATE", org.jooq.impl.SQLDataType.VARCHAR(14), this, "");

    /**
     * The column <code>GET_USKA.LINE1</code>.
     */
    public final TableField<GetUskaRecord, String> LINE1 = createField("LINE1", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>GET_USKA.LINE2</code>.
     */
    public final TableField<GetUskaRecord, String> LINE2 = createField("LINE2", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>GET_USKA.LINE3</code>.
     */
    public final TableField<GetUskaRecord, String> LINE3 = createField("LINE3", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>GET_USKA.LINE4</code>.
     */
    public final TableField<GetUskaRecord, String> LINE4 = createField("LINE4", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>GET_USKA.EVENT_DESCRIPTION</code>.
     */
    public final TableField<GetUskaRecord, String> EVENT_DESCRIPTION = createField("EVENT_DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>GET_USKA.VERS</code>.
     */
    public final TableField<GetUskaRecord, String> VERS = createField("VERS", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>GET_USKA.VERDATE</code>.
     */
    public final TableField<GetUskaRecord, String> VERDATE = createField("VERDATE", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * Create a <code>GET_USKA</code> table reference
     */
    public GetUska() {
        this(DSL.name("GET_USKA"), null);
    }

    /**
     * Create an aliased <code>GET_USKA</code> table reference
     */
    public GetUska(String alias) {
        this(DSL.name(alias), GET_USKA);
    }

    /**
     * Create an aliased <code>GET_USKA</code> table reference
     */
    public GetUska(Name alias) {
        this(alias, GET_USKA);
    }

    private GetUska(Name alias, Table<GetUskaRecord> aliased) {
        this(alias, aliased, new Field[5]);
    }

    private GetUska(Name alias, Table<GetUskaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetUska(Table<O> child, ForeignKey<O, GetUskaRecord> key) {
        super(child, key, GET_USKA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetUska as(String alias) {
        return new GetUska(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetUska as(Name alias) {
        return new GetUska(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetUska rename(String name) {
        return new GetUska(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetUska rename(Name name) {
        return new GetUska(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetUska call(String login, String pass, Integer uid, Timestamp fromDate, Timestamp toDate) {
        return new GetUska(DSL.name(getName()), null, new Field[] { 
              DSL.val(login, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(pass, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(uid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(fromDate, org.jooq.impl.SQLDataType.TIMESTAMP)
            , DSL.val(toDate, org.jooq.impl.SQLDataType.TIMESTAMP)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetUska call(Field<String> login, Field<String> pass, Field<Integer> uid, Field<Timestamp> fromDate, Field<Timestamp> toDate) {
        return new GetUska(DSL.name(getName()), null, new Field[] { 
              login
            , pass
            , uid
            , fromDate
            , toDate
        });
    }
}
