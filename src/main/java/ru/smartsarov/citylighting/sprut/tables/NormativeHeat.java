/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.NormativeHeatRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NormativeHeat extends TableImpl<NormativeHeatRecord> {

    private static final long serialVersionUID = 1987551792;

    /**
     * The reference instance of <code>NORMATIVE_HEAT</code>
     */
    public static final NormativeHeat NORMATIVE_HEAT = new NormativeHeat();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<NormativeHeatRecord> getRecordType() {
        return NormativeHeatRecord.class;
    }

    /**
     * The column <code>NORMATIVE_HEAT.ID</code>.
     */
    public final TableField<NormativeHeatRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NORMATIVE_HEAT.NORM_ID</code>.
     */
    public final TableField<NormativeHeatRecord, Integer> NORM_ID = createField("NORM_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>NORMATIVE_HEAT.TYPE1</code>.
     */
    public final TableField<NormativeHeatRecord, Short> TYPE1 = createField("TYPE1", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.TYPE2</code>.
     */
    public final TableField<NormativeHeatRecord, Short> TYPE2 = createField("TYPE2", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.TYPE3</code>.
     */
    public final TableField<NormativeHeatRecord, Short> TYPE3 = createField("TYPE3", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.TYPE4</code>.
     */
    public final TableField<NormativeHeatRecord, Short> TYPE4 = createField("TYPE4", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.Q1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> Q1 = createField("Q1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.Q2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> Q2 = createField("Q2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.W1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> W1 = createField("W1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.W2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> W2 = createField("W2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.M1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> M1 = createField("M1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.M2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> M2 = createField("M2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.M3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> M3 = createField("M3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.M4</code>.
     */
    public final TableField<NormativeHeatRecord, Double> M4 = createField("M4", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GM1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GM1 = createField("GM1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GM2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GM2 = createField("GM2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GM3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GM3 = createField("GM3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GM4</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GM4 = createField("GM4", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.V1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> V1 = createField("V1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.V2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> V2 = createField("V2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.V3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> V3 = createField("V3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.V4</code>.
     */
    public final TableField<NormativeHeatRecord, Double> V4 = createField("V4", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GV1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GV1 = createField("GV1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GV2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GV2 = createField("GV2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GV3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GV3 = createField("GV3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.GV4</code>.
     */
    public final TableField<NormativeHeatRecord, Double> GV4 = createField("GV4", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.T1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> T1 = createField("T1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.T2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> T2 = createField("T2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.T3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> T3 = createField("T3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.T4</code>.
     */
    public final TableField<NormativeHeatRecord, Double> T4 = createField("T4", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.P1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> P1 = createField("P1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.P2</code>.
     */
    public final TableField<NormativeHeatRecord, Double> P2 = createField("P2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.P3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> P3 = createField("P3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.P4</code>.
     */
    public final TableField<NormativeHeatRecord, Double> P4 = createField("P4", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.L1</code>.
     */
    public final TableField<NormativeHeatRecord, Double> L1 = createField("L1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>NORMATIVE_HEAT.L3</code>.
     */
    public final TableField<NormativeHeatRecord, Double> L3 = createField("L3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>NORMATIVE_HEAT</code> table reference
     */
    public NormativeHeat() {
        this(DSL.name("NORMATIVE_HEAT"), null);
    }

    /**
     * Create an aliased <code>NORMATIVE_HEAT</code> table reference
     */
    public NormativeHeat(String alias) {
        this(DSL.name(alias), NORMATIVE_HEAT);
    }

    /**
     * Create an aliased <code>NORMATIVE_HEAT</code> table reference
     */
    public NormativeHeat(Name alias) {
        this(alias, NORMATIVE_HEAT);
    }

    private NormativeHeat(Name alias, Table<NormativeHeatRecord> aliased) {
        this(alias, aliased, null);
    }

    private NormativeHeat(Name alias, Table<NormativeHeatRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> NormativeHeat(Table<O> child, ForeignKey<O, NormativeHeatRecord> key) {
        super(child, key, NORMATIVE_HEAT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<NormativeHeatRecord> getPrimaryKey() {
        return Keys.NORMATIVE_HEAT_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<NormativeHeatRecord>> getKeys() {
        return Arrays.<UniqueKey<NormativeHeatRecord>>asList(Keys.NORMATIVE_HEAT_KEY, Keys.NORMATIVE_HEAT_UNQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeHeat as(String alias) {
        return new NormativeHeat(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public NormativeHeat as(Name alias) {
        return new NormativeHeat(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public NormativeHeat rename(String name) {
        return new NormativeHeat(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public NormativeHeat rename(Name name) {
        return new NormativeHeat(name, null);
    }
}
