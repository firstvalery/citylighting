/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.UpdXgroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UpdXgroup extends TableImpl<UpdXgroupRecord> {

    private static final long serialVersionUID = -2135221198;

    /**
     * The reference instance of <code>UPD_XGROUP</code>
     */
    public static final UpdXgroup UPD_XGROUP = new UpdXgroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UpdXgroupRecord> getRecordType() {
        return UpdXgroupRecord.class;
    }

    /**
     * The column <code>UPD_XGROUP.RESULT</code>.
     */
    public final TableField<UpdXgroupRecord, Integer> RESULT = createField("RESULT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>UPD_XGROUP</code> table reference
     */
    public UpdXgroup() {
        this(DSL.name("UPD_XGROUP"), null);
    }

    /**
     * Create an aliased <code>UPD_XGROUP</code> table reference
     */
    public UpdXgroup(String alias) {
        this(DSL.name(alias), UPD_XGROUP);
    }

    /**
     * Create an aliased <code>UPD_XGROUP</code> table reference
     */
    public UpdXgroup(Name alias) {
        this(alias, UPD_XGROUP);
    }

    private UpdXgroup(Name alias, Table<UpdXgroupRecord> aliased) {
        this(alias, aliased, new Field[7]);
    }

    private UpdXgroup(Name alias, Table<UpdXgroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UpdXgroup(Table<O> child, ForeignKey<O, UpdXgroupRecord> key) {
        super(child, key, UPD_XGROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UpdXgroup as(String alias) {
        return new UpdXgroup(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UpdXgroup as(Name alias) {
        return new UpdXgroup(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public UpdXgroup rename(String name) {
        return new UpdXgroup(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public UpdXgroup rename(Name name) {
        return new UpdXgroup(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public UpdXgroup call(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return new UpdXgroup(DSL.name(getName()), null, new Field[] { 
              DSL.val(grpId, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(grpName, org.jooq.impl.SQLDataType.VARCHAR(30))
            , DSL.val(grpDescription, org.jooq.impl.SQLDataType.VARCHAR(30))
            , DSL.val(grpType, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(grpAccess, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(grpDbUname, org.jooq.impl.SQLDataType.VARCHAR(30))
            , DSL.val(grpDbPassword, org.jooq.impl.SQLDataType.VARCHAR(16))
        });
    }

    /**
     * Call this table-valued function
     */
    public UpdXgroup call(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return new UpdXgroup(DSL.name(getName()), null, new Field[] { 
              grpId
            , grpName
            , grpDescription
            , grpType
            , grpAccess
            , grpDbUname
            , grpDbPassword
        });
    }
}
