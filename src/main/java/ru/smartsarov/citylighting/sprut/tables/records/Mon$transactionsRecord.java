/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Mon$transactions;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mon$transactionsRecord extends TableRecordImpl<Mon$transactionsRecord> implements Record13<Integer, Integer, Short, Timestamp, Integer, Integer, Integer, Short, Short, Short, Short, Short, Integer> {

    private static final long serialVersionUID = -1119151561;

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$TRANSACTION_ID</code>.
     */
    public void setMon$transactionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$TRANSACTION_ID</code>.
     */
    public Integer getMon$transactionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$ATTACHMENT_ID</code>.
     */
    public void setMon$attachmentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$ATTACHMENT_ID</code>.
     */
    public Integer getMon$attachmentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$STATE</code>.
     */
    public void setMon$state(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$STATE</code>.
     */
    public Short getMon$state() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$TIMESTAMP</code>.
     */
    public void setMon$timestamp(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$TIMESTAMP</code>.
     */
    public Timestamp getMon$timestamp() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$TOP_TRANSACTION</code>.
     */
    public void setMon$topTransaction(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$TOP_TRANSACTION</code>.
     */
    public Integer getMon$topTransaction() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$OLDEST_TRANSACTION</code>.
     */
    public void setMon$oldestTransaction(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$OLDEST_TRANSACTION</code>.
     */
    public Integer getMon$oldestTransaction() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$OLDEST_ACTIVE</code>.
     */
    public void setMon$oldestActive(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$OLDEST_ACTIVE</code>.
     */
    public Integer getMon$oldestActive() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$ISOLATION_MODE</code>.
     */
    public void setMon$isolationMode(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$ISOLATION_MODE</code>.
     */
    public Short getMon$isolationMode() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$LOCK_TIMEOUT</code>.
     */
    public void setMon$lockTimeout(Short value) {
        set(8, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$LOCK_TIMEOUT</code>.
     */
    public Short getMon$lockTimeout() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$READ_ONLY</code>.
     */
    public void setMon$readOnly(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$READ_ONLY</code>.
     */
    public Short getMon$readOnly() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$AUTO_COMMIT</code>.
     */
    public void setMon$autoCommit(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$AUTO_COMMIT</code>.
     */
    public Short getMon$autoCommit() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$AUTO_UNDO</code>.
     */
    public void setMon$autoUndo(Short value) {
        set(11, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$AUTO_UNDO</code>.
     */
    public Short getMon$autoUndo() {
        return (Short) get(11);
    }

    /**
     * Setter for <code>MON$TRANSACTIONS.MON$STAT_ID</code>.
     */
    public void setMon$statId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>MON$TRANSACTIONS.MON$STAT_ID</code>.
     */
    public Integer getMon$statId() {
        return (Integer) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Integer, Short, Timestamp, Integer, Integer, Integer, Short, Short, Short, Short, Short, Integer> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Integer, Integer, Short, Timestamp, Integer, Integer, Integer, Short, Short, Short, Short, Short, Integer> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Mon$transactions.MON$TRANSACTIONS.MON$TRANSACTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Mon$transactions.MON$TRANSACTIONS.MON$ATTACHMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Mon$transactions.MON$TRANSACTIONS.MON$STATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Mon$transactions.MON$TRANSACTIONS.MON$TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Mon$transactions.MON$TRANSACTIONS.MON$TOP_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Mon$transactions.MON$TRANSACTIONS.MON$OLDEST_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Mon$transactions.MON$TRANSACTIONS.MON$OLDEST_ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field8() {
        return Mon$transactions.MON$TRANSACTIONS.MON$ISOLATION_MODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field9() {
        return Mon$transactions.MON$TRANSACTIONS.MON$LOCK_TIMEOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field10() {
        return Mon$transactions.MON$TRANSACTIONS.MON$READ_ONLY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field11() {
        return Mon$transactions.MON$TRANSACTIONS.MON$AUTO_COMMIT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field12() {
        return Mon$transactions.MON$TRANSACTIONS.MON$AUTO_UNDO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Mon$transactions.MON$TRANSACTIONS.MON$STAT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getMon$transactionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getMon$attachmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getMon$state();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getMon$timestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getMon$topTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getMon$oldestTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getMon$oldestActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component8() {
        return getMon$isolationMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component9() {
        return getMon$lockTimeout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component10() {
        return getMon$readOnly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component11() {
        return getMon$autoCommit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component12() {
        return getMon$autoUndo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getMon$statId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getMon$transactionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getMon$attachmentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getMon$state();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getMon$timestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getMon$topTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getMon$oldestTransaction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getMon$oldestActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value8() {
        return getMon$isolationMode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value9() {
        return getMon$lockTimeout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value10() {
        return getMon$readOnly();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value11() {
        return getMon$autoCommit();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value12() {
        return getMon$autoUndo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getMon$statId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value1(Integer value) {
        setMon$transactionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value2(Integer value) {
        setMon$attachmentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value3(Short value) {
        setMon$state(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value4(Timestamp value) {
        setMon$timestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value5(Integer value) {
        setMon$topTransaction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value6(Integer value) {
        setMon$oldestTransaction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value7(Integer value) {
        setMon$oldestActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value8(Short value) {
        setMon$isolationMode(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value9(Short value) {
        setMon$lockTimeout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value10(Short value) {
        setMon$readOnly(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value11(Short value) {
        setMon$autoCommit(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value12(Short value) {
        setMon$autoUndo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord value13(Integer value) {
        setMon$statId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$transactionsRecord values(Integer value1, Integer value2, Short value3, Timestamp value4, Integer value5, Integer value6, Integer value7, Short value8, Short value9, Short value10, Short value11, Short value12, Integer value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Mon$transactionsRecord
     */
    public Mon$transactionsRecord() {
        super(Mon$transactions.MON$TRANSACTIONS);
    }

    /**
     * Create a detached, initialised Mon$transactionsRecord
     */
    public Mon$transactionsRecord(Integer mon$transactionId, Integer mon$attachmentId, Short mon$state, Timestamp mon$timestamp, Integer mon$topTransaction, Integer mon$oldestTransaction, Integer mon$oldestActive, Short mon$isolationMode, Short mon$lockTimeout, Short mon$readOnly, Short mon$autoCommit, Short mon$autoUndo, Integer mon$statId) {
        super(Mon$transactions.MON$TRANSACTIONS);

        set(0, mon$transactionId);
        set(1, mon$attachmentId);
        set(2, mon$state);
        set(3, mon$timestamp);
        set(4, mon$topTransaction);
        set(5, mon$oldestTransaction);
        set(6, mon$oldestActive);
        set(7, mon$isolationMode);
        set(8, mon$lockTimeout);
        set(9, mon$readOnly);
        set(10, mon$autoCommit);
        set(11, mon$autoUndo);
        set(12, mon$statId);
    }
}
