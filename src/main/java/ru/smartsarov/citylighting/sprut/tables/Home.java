/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.HomeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Home extends TableImpl<HomeRecord> {

    private static final long serialVersionUID = 111917206;

    /**
     * The reference instance of <code>HOME</code>
     */
    public static final Home HOME = new Home();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HomeRecord> getRecordType() {
        return HomeRecord.class;
    }

    /**
     * The column <code>HOME.HOME_ID</code>.
     */
    public final TableField<HomeRecord, Integer> HOME_ID = createField("HOME_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>HOME.HOME_STRT_ID</code>.
     */
    public final TableField<HomeRecord, Integer> HOME_STRT_ID = createField("HOME_STRT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>HOME.HOME_NUMBER</code>.
     */
    public final TableField<HomeRecord, String> HOME_NUMBER = createField("HOME_NUMBER", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>HOME.HOME_STR</code>.
     */
    public final TableField<HomeRecord, String> HOME_STR = createField("HOME_STR", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>HOME.HOME_KORP</code>.
     */
    public final TableField<HomeRecord, String> HOME_KORP = createField("HOME_KORP", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>HOME.HOME_TYPE</code>.
     */
    public final TableField<HomeRecord, Integer> HOME_TYPE = createField("HOME_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>HOME.HOME_ETNUM</code>.
     */
    public final TableField<HomeRecord, Integer> HOME_ETNUM = createField("HOME_ETNUM", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>HOME.HOME_POST_CODE</code>.
     */
    public final TableField<HomeRecord, String> HOME_POST_CODE = createField("HOME_POST_CODE", org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>HOME.HOME_SQUARE</code>.
     */
    public final TableField<HomeRecord, Double> HOME_SQUARE = createField("HOME_SQUARE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>HOME.HOME_NUM_PERSONS</code>.
     */
    public final TableField<HomeRecord, Integer> HOME_NUM_PERSONS = createField("HOME_NUM_PERSONS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>HOME</code> table reference
     */
    public Home() {
        this(DSL.name("HOME"), null);
    }

    /**
     * Create an aliased <code>HOME</code> table reference
     */
    public Home(String alias) {
        this(DSL.name(alias), HOME);
    }

    /**
     * Create an aliased <code>HOME</code> table reference
     */
    public Home(Name alias) {
        this(alias, HOME);
    }

    private Home(Name alias, Table<HomeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Home(Name alias, Table<HomeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Home(Table<O> child, ForeignKey<O, HomeRecord> key) {
        super(child, key, HOME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HomeRecord> getPrimaryKey() {
        return Keys.INTEG_4;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HomeRecord>> getKeys() {
        return Arrays.<UniqueKey<HomeRecord>>asList(Keys.INTEG_4);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<HomeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<HomeRecord, ?>>asList(Keys.INTEG_9);
    }

    public Street street() {
        return new Street(this, Keys.INTEG_9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Home as(String alias) {
        return new Home(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Home as(Name alias) {
        return new Home(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Home rename(String name) {
        return new Home(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Home rename(Name name) {
        return new Home(name, null);
    }
}
