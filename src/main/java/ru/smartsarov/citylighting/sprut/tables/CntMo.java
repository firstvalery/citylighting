/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntMoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntMo extends TableImpl<CntMoRecord> {

    private static final long serialVersionUID = -466561620;

    /**
     * The reference instance of <code>CNT_MO</code>
     */
    public static final CntMo CNT_MO = new CntMo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntMoRecord> getRecordType() {
        return CntMoRecord.class;
    }

    /**
     * The column <code>CNT_MO.ID</code>.
     */
    public final TableField<CntMoRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_MO.CNT_ID</code>.
     */
    public final TableField<CntMoRecord, Integer> CNT_ID = createField("CNT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_MO.CNT_TS_NUM</code>.
     */
    public final TableField<CntMoRecord, Integer> CNT_TS_NUM = createField("CNT_TS_NUM", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_MO.ENABLED</code>.
     */
    public final TableField<CntMoRecord, Short> ENABLED = createField("ENABLED", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CNT_MO.CNT_MO_TYPE</code>.
     */
    public final TableField<CntMoRecord, Integer> CNT_MO_TYPE = createField("CNT_MO_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CNT_MO.CNT_MO_CODE</code>.
     */
    public final TableField<CntMoRecord, String> CNT_MO_CODE = createField("CNT_MO_CODE", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>CNT_MO.CNT_MO_ALG_VERSION</code>.
     */
    public final TableField<CntMoRecord, Integer> CNT_MO_ALG_VERSION = createField("CNT_MO_ALG_VERSION", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CNT_MO.BALANCE_ENABLED</code>.
     */
    public final TableField<CntMoRecord, Short> BALANCE_ENABLED = createField("BALANCE_ENABLED", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CNT_MO.CNT_MO_CODE_FROM</code>.
     */
    public final TableField<CntMoRecord, String> CNT_MO_CODE_FROM = createField("CNT_MO_CODE_FROM", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>CNT_MO.CNT_MO_CODE_TO</code>.
     */
    public final TableField<CntMoRecord, String> CNT_MO_CODE_TO = createField("CNT_MO_CODE_TO", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>CNT_MO</code> table reference
     */
    public CntMo() {
        this(DSL.name("CNT_MO"), null);
    }

    /**
     * Create an aliased <code>CNT_MO</code> table reference
     */
    public CntMo(String alias) {
        this(DSL.name(alias), CNT_MO);
    }

    /**
     * Create an aliased <code>CNT_MO</code> table reference
     */
    public CntMo(Name alias) {
        this(alias, CNT_MO);
    }

    private CntMo(Name alias, Table<CntMoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntMo(Name alias, Table<CntMoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntMo(Table<O> child, ForeignKey<O, CntMoRecord> key) {
        super(child, key, CNT_MO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntMoRecord> getPrimaryKey() {
        return Keys.PK_CNT_MO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntMoRecord>> getKeys() {
        return Arrays.<UniqueKey<CntMoRecord>>asList(Keys.PK_CNT_MO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntMo as(String alias) {
        return new CntMo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntMo as(Name alias) {
        return new CntMo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntMo rename(String name) {
        return new CntMo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntMo rename(Name name) {
        return new CntMo(name, null);
    }
}
