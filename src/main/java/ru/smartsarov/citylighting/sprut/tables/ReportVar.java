/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.ReportVarRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportVar extends TableImpl<ReportVarRecord> {

    private static final long serialVersionUID = -1326228426;

    /**
     * The reference instance of <code>REPORT_VAR</code>
     */
    public static final ReportVar REPORT_VAR = new ReportVar();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportVarRecord> getRecordType() {
        return ReportVarRecord.class;
    }

    /**
     * The column <code>REPORT_VAR.RPTV_ID</code>.
     */
    public final TableField<ReportVarRecord, Integer> RPTV_ID = createField("RPTV_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>REPORT_VAR.RPTV_RPT_ID</code>.
     */
    public final TableField<ReportVarRecord, Integer> RPTV_RPT_ID = createField("RPTV_RPT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>REPORT_VAR.RPTV_USR_ID</code>.
     */
    public final TableField<ReportVarRecord, Integer> RPTV_USR_ID = createField("RPTV_USR_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>REPORT_VAR.RPTV_DATA</code>.
     */
    public final TableField<ReportVarRecord, String> RPTV_DATA = createField("RPTV_DATA", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>REPORT_VAR.RPTV_DATE</code>.
     */
    public final TableField<ReportVarRecord, Timestamp> RPTV_DATE = createField("RPTV_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>REPORT_VAR</code> table reference
     */
    public ReportVar() {
        this(DSL.name("REPORT_VAR"), null);
    }

    /**
     * Create an aliased <code>REPORT_VAR</code> table reference
     */
    public ReportVar(String alias) {
        this(DSL.name(alias), REPORT_VAR);
    }

    /**
     * Create an aliased <code>REPORT_VAR</code> table reference
     */
    public ReportVar(Name alias) {
        this(alias, REPORT_VAR);
    }

    private ReportVar(Name alias, Table<ReportVarRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportVar(Name alias, Table<ReportVarRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ReportVar(Table<O> child, ForeignKey<O, ReportVarRecord> key) {
        super(child, key, REPORT_VAR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ReportVarRecord> getPrimaryKey() {
        return Keys.INTEG_122;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ReportVarRecord>> getKeys() {
        return Arrays.<UniqueKey<ReportVarRecord>>asList(Keys.INTEG_122);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportVar as(String alias) {
        return new ReportVar(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportVar as(Name alias) {
        return new ReportVar(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportVar rename(String name) {
        return new ReportVar(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportVar rename(Name name) {
        return new ReportVar(name, null);
    }
}
