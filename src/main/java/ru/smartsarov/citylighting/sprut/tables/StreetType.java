/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.StreetTypeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StreetType extends TableImpl<StreetTypeRecord> {

    private static final long serialVersionUID = 1625297366;

    /**
     * The reference instance of <code>STREET_TYPE</code>
     */
    public static final StreetType STREET_TYPE = new StreetType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StreetTypeRecord> getRecordType() {
        return StreetTypeRecord.class;
    }

    /**
     * The column <code>STREET_TYPE.STREETT_ID</code>.
     */
    public final TableField<StreetTypeRecord, Integer> STREETT_ID = createField("STREETT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>STREET_TYPE.STREETT_NAME</code>.
     */
    public final TableField<StreetTypeRecord, String> STREETT_NAME = createField("STREETT_NAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>STREET_TYPE.STREETT_SNAME</code>.
     */
    public final TableField<StreetTypeRecord, String> STREETT_SNAME = createField("STREETT_SNAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * Create a <code>STREET_TYPE</code> table reference
     */
    public StreetType() {
        this(DSL.name("STREET_TYPE"), null);
    }

    /**
     * Create an aliased <code>STREET_TYPE</code> table reference
     */
    public StreetType(String alias) {
        this(DSL.name(alias), STREET_TYPE);
    }

    /**
     * Create an aliased <code>STREET_TYPE</code> table reference
     */
    public StreetType(Name alias) {
        this(alias, STREET_TYPE);
    }

    private StreetType(Name alias, Table<StreetTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private StreetType(Name alias, Table<StreetTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> StreetType(Table<O> child, ForeignKey<O, StreetTypeRecord> key) {
        super(child, key, STREET_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StreetTypeRecord> getPrimaryKey() {
        return Keys.INTEG_13;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StreetTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<StreetTypeRecord>>asList(Keys.INTEG_13);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreetType as(String alias) {
        return new StreetType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StreetType as(Name alias) {
        return new StreetType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StreetType rename(String name) {
        return new StreetType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public StreetType rename(Name name) {
        return new StreetType(name, null);
    }
}
