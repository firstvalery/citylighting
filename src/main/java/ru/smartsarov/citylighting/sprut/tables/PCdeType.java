/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.PCdeTypeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PCdeType extends TableImpl<PCdeTypeRecord> {

    private static final long serialVersionUID = -1830594971;

    /**
     * The reference instance of <code>P_CDE_TYPE</code>
     */
    public static final PCdeType P_CDE_TYPE = new PCdeType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PCdeTypeRecord> getRecordType() {
        return PCdeTypeRecord.class;
    }

    /**
     * The column <code>P_CDE_TYPE.PCT_ID</code>.
     */
    public final TableField<PCdeTypeRecord, Integer> PCT_ID = createField("PCT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>P_CDE_TYPE.PCT_NAME</code>.
     */
    public final TableField<PCdeTypeRecord, String> PCT_NAME = createField("PCT_NAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>P_CDE_TYPE.PCT_SNAME</code>.
     */
    public final TableField<PCdeTypeRecord, String> PCT_SNAME = createField("PCT_SNAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>P_CDE_TYPE.PCT_IK</code>.
     */
    public final TableField<PCdeTypeRecord, String> PCT_IK = createField("PCT_IK", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * Create a <code>P_CDE_TYPE</code> table reference
     */
    public PCdeType() {
        this(DSL.name("P_CDE_TYPE"), null);
    }

    /**
     * Create an aliased <code>P_CDE_TYPE</code> table reference
     */
    public PCdeType(String alias) {
        this(DSL.name(alias), P_CDE_TYPE);
    }

    /**
     * Create an aliased <code>P_CDE_TYPE</code> table reference
     */
    public PCdeType(Name alias) {
        this(alias, P_CDE_TYPE);
    }

    private PCdeType(Name alias, Table<PCdeTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private PCdeType(Name alias, Table<PCdeTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PCdeType(Table<O> child, ForeignKey<O, PCdeTypeRecord> key) {
        super(child, key, P_CDE_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PCdeTypeRecord> getPrimaryKey() {
        return Keys.INTEG_92;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PCdeTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<PCdeTypeRecord>>asList(Keys.INTEG_92);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeType as(String alias) {
        return new PCdeType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCdeType as(Name alias) {
        return new PCdeType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PCdeType rename(String name) {
        return new PCdeType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PCdeType rename(Name name) {
        return new PCdeType(name, null);
    }
}
