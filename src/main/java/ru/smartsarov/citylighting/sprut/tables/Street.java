/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.StreetRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Street extends TableImpl<StreetRecord> {

    private static final long serialVersionUID = -885334873;

    /**
     * The reference instance of <code>STREET</code>
     */
    public static final Street STREET = new Street();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StreetRecord> getRecordType() {
        return StreetRecord.class;
    }

    /**
     * The column <code>STREET.STRT_ID</code>.
     */
    public final TableField<StreetRecord, Integer> STRT_ID = createField("STRT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>STREET.STRT_CITY_ID</code>.
     */
    public final TableField<StreetRecord, Integer> STRT_CITY_ID = createField("STRT_CITY_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>STREET.STRT_NAME</code>.
     */
    public final TableField<StreetRecord, String> STRT_NAME = createField("STRT_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>STREET.STRT_TYPE</code>.
     */
    public final TableField<StreetRecord, Integer> STRT_TYPE = createField("STRT_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>STREET</code> table reference
     */
    public Street() {
        this(DSL.name("STREET"), null);
    }

    /**
     * Create an aliased <code>STREET</code> table reference
     */
    public Street(String alias) {
        this(DSL.name(alias), STREET);
    }

    /**
     * Create an aliased <code>STREET</code> table reference
     */
    public Street(Name alias) {
        this(alias, STREET);
    }

    private Street(Name alias, Table<StreetRecord> aliased) {
        this(alias, aliased, null);
    }

    private Street(Name alias, Table<StreetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Street(Table<O> child, ForeignKey<O, StreetRecord> key) {
        super(child, key, STREET);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StreetRecord> getPrimaryKey() {
        return Keys.INTEG_5;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StreetRecord>> getKeys() {
        return Arrays.<UniqueKey<StreetRecord>>asList(Keys.INTEG_5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StreetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StreetRecord, ?>>asList(Keys.INTEG_10);
    }

    public City city() {
        return new City(this, Keys.INTEG_10);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Street as(String alias) {
        return new Street(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Street as(Name alias) {
        return new Street(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Street rename(String name) {
        return new Street(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Street rename(Name name) {
        return new Street(name, null);
    }
}
