/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$formats;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$formatsRecord extends TableRecordImpl<Rdb$formatsRecord> implements Record3<Short, Short, byte[]> {

    private static final long serialVersionUID = -516399671;

    /**
     * Setter for <code>RDB$FORMATS.RDB$RELATION_ID</code>.
     */
    public void setRdb$relationId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$FORMATS.RDB$RELATION_ID</code>.
     */
    public Short getRdb$relationId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>RDB$FORMATS.RDB$FORMAT</code>.
     */
    public void setRdb$format(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$FORMATS.RDB$FORMAT</code>.
     */
    public Short getRdb$format() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>RDB$FORMATS.RDB$DESCRIPTOR</code>.
     */
    public void setRdb$descriptor(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$FORMATS.RDB$DESCRIPTOR</code>.
     */
    public byte[] getRdb$descriptor() {
        return (byte[]) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Short, Short, byte[]> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Short, Short, byte[]> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return Rdb$formats.RDB$FORMATS.RDB$RELATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return Rdb$formats.RDB$FORMATS.RDB$FORMAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field3() {
        return Rdb$formats.RDB$FORMATS.RDB$DESCRIPTOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component1() {
        return getRdb$relationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getRdb$format();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component3() {
        return getRdb$descriptor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getRdb$relationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getRdb$format();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value3() {
        return getRdb$descriptor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$formatsRecord value1(Short value) {
        setRdb$relationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$formatsRecord value2(Short value) {
        setRdb$format(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$formatsRecord value3(byte... value) {
        setRdb$descriptor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$formatsRecord values(Short value1, Short value2, byte[] value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$formatsRecord
     */
    public Rdb$formatsRecord() {
        super(Rdb$formats.RDB$FORMATS);
    }

    /**
     * Create a detached, initialised Rdb$formatsRecord
     */
    public Rdb$formatsRecord(Short rdb$relationId, Short rdb$format, byte[] rdb$descriptor) {
        super(Rdb$formats.RDB$FORMATS);

        set(0, rdb$relationId);
        set(1, rdb$format);
        set(2, rdb$descriptor);
    }
}
