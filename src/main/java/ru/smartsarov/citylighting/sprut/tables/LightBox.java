/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.LightBoxRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LightBox extends TableImpl<LightBoxRecord> {

    private static final long serialVersionUID = -1767386481;

    /**
     * The reference instance of <code>LIGHT_BOX</code>
     */
    public static final LightBox LIGHT_BOX = new LightBox();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LightBoxRecord> getRecordType() {
        return LightBoxRecord.class;
    }

    /**
     * The column <code>LIGHT_BOX.ID</code>.
     */
    public final TableField<LightBoxRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>LIGHT_BOX.ZID</code>.
     */
    public final TableField<LightBoxRecord, Integer> ZID = createField("ZID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>LIGHT_BOX.USK_ID</code>.
     */
    public final TableField<LightBoxRecord, Integer> USK_ID = createField("USK_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>LIGHT_BOX.BOX_TYPE</code>.
     */
    public final TableField<LightBoxRecord, Integer> BOX_TYPE = createField("BOX_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>LIGHT_BOX.BOX_NAME</code>.
     */
    public final TableField<LightBoxRecord, String> BOX_NAME = createField("BOX_NAME", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>LIGHT_BOX</code> table reference
     */
    public LightBox() {
        this(DSL.name("LIGHT_BOX"), null);
    }

    /**
     * Create an aliased <code>LIGHT_BOX</code> table reference
     */
    public LightBox(String alias) {
        this(DSL.name(alias), LIGHT_BOX);
    }

    /**
     * Create an aliased <code>LIGHT_BOX</code> table reference
     */
    public LightBox(Name alias) {
        this(alias, LIGHT_BOX);
    }

    private LightBox(Name alias, Table<LightBoxRecord> aliased) {
        this(alias, aliased, null);
    }

    private LightBox(Name alias, Table<LightBoxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> LightBox(Table<O> child, ForeignKey<O, LightBoxRecord> key) {
        super(child, key, LIGHT_BOX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LightBoxRecord> getPrimaryKey() {
        return Keys.LIGHT_BOX_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LightBoxRecord>> getKeys() {
        return Arrays.<UniqueKey<LightBoxRecord>>asList(Keys.LIGHT_BOX_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LightBox as(String alias) {
        return new LightBox(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LightBox as(Name alias) {
        return new LightBox(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LightBox rename(String name) {
        return new LightBox(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public LightBox rename(Name name) {
        return new LightBox(name, null);
    }
}
