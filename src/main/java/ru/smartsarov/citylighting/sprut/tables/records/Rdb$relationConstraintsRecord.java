/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$relationConstraints;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$relationConstraintsRecord extends TableRecordImpl<Rdb$relationConstraintsRecord> implements Record6<String, String, String, String, String, String> {

    private static final long serialVersionUID = -1825500766;

    /**
     * Setter for <code>RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_NAME</code>.
     */
    public void setRdb$constraintName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_NAME</code>.
     */
    public String getRdb$constraintName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_TYPE</code>.
     */
    public void setRdb$constraintType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_TYPE</code>.
     */
    public String getRdb$constraintType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>RDB$RELATION_CONSTRAINTS.RDB$RELATION_NAME</code>.
     */
    public void setRdb$relationName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$RELATION_CONSTRAINTS.RDB$RELATION_NAME</code>.
     */
    public String getRdb$relationName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>RDB$RELATION_CONSTRAINTS.RDB$DEFERRABLE</code>.
     */
    public void setRdb$deferrable(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$RELATION_CONSTRAINTS.RDB$DEFERRABLE</code>.
     */
    public String getRdb$deferrable() {
        return (String) get(3);
    }

    /**
     * Setter for <code>RDB$RELATION_CONSTRAINTS.RDB$INITIALLY_DEFERRED</code>.
     */
    public void setRdb$initiallyDeferred(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>RDB$RELATION_CONSTRAINTS.RDB$INITIALLY_DEFERRED</code>.
     */
    public String getRdb$initiallyDeferred() {
        return (String) get(4);
    }

    /**
     * Setter for <code>RDB$RELATION_CONSTRAINTS.RDB$INDEX_NAME</code>.
     */
    public void setRdb$indexName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>RDB$RELATION_CONSTRAINTS.RDB$INDEX_NAME</code>.
     */
    public String getRdb$indexName() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS.RDB$CONSTRAINT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS.RDB$RELATION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS.RDB$DEFERRABLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS.RDB$INITIALLY_DEFERRED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS.RDB$INDEX_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getRdb$constraintName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRdb$constraintType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRdb$relationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getRdb$deferrable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRdb$initiallyDeferred();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getRdb$indexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRdb$constraintName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRdb$constraintType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRdb$relationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRdb$deferrable();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRdb$initiallyDeferred();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getRdb$indexName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord value1(String value) {
        setRdb$constraintName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord value2(String value) {
        setRdb$constraintType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord value3(String value) {
        setRdb$relationName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord value4(String value) {
        setRdb$deferrable(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord value5(String value) {
        setRdb$initiallyDeferred(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord value6(String value) {
        setRdb$indexName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$relationConstraintsRecord values(String value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$relationConstraintsRecord
     */
    public Rdb$relationConstraintsRecord() {
        super(Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS);
    }

    /**
     * Create a detached, initialised Rdb$relationConstraintsRecord
     */
    public Rdb$relationConstraintsRecord(String rdb$constraintName, String rdb$constraintType, String rdb$relationName, String rdb$deferrable, String rdb$initiallyDeferred, String rdb$indexName) {
        super(Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS);

        set(0, rdb$constraintName);
        set(1, rdb$constraintType);
        set(2, rdb$relationName);
        set(3, rdb$deferrable);
        set(4, rdb$initiallyDeferred);
        set(5, rdb$indexName);
    }
}
