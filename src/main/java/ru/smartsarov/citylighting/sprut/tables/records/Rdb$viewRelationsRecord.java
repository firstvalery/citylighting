/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$viewRelations;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$viewRelationsRecord extends TableRecordImpl<Rdb$viewRelationsRecord> implements Record4<String, String, Short, String> {

    private static final long serialVersionUID = -1041705929;

    /**
     * Setter for <code>RDB$VIEW_RELATIONS.RDB$VIEW_NAME</code>.
     */
    public void setRdb$viewName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$VIEW_RELATIONS.RDB$VIEW_NAME</code>.
     */
    public String getRdb$viewName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>RDB$VIEW_RELATIONS.RDB$RELATION_NAME</code>.
     */
    public void setRdb$relationName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$VIEW_RELATIONS.RDB$RELATION_NAME</code>.
     */
    public String getRdb$relationName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>RDB$VIEW_RELATIONS.RDB$VIEW_CONTEXT</code>.
     */
    public void setRdb$viewContext(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$VIEW_RELATIONS.RDB$VIEW_CONTEXT</code>.
     */
    public Short getRdb$viewContext() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>RDB$VIEW_RELATIONS.RDB$CONTEXT_NAME</code>.
     */
    public void setRdb$contextName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$VIEW_RELATIONS.RDB$CONTEXT_NAME</code>.
     */
    public String getRdb$contextName() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Short, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, Short, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Rdb$viewRelations.RDB$VIEW_RELATIONS.RDB$VIEW_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Rdb$viewRelations.RDB$VIEW_RELATIONS.RDB$RELATION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Rdb$viewRelations.RDB$VIEW_RELATIONS.RDB$VIEW_CONTEXT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Rdb$viewRelations.RDB$VIEW_RELATIONS.RDB$CONTEXT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getRdb$viewName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRdb$relationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getRdb$viewContext();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getRdb$contextName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRdb$viewName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRdb$relationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getRdb$viewContext();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRdb$contextName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$viewRelationsRecord value1(String value) {
        setRdb$viewName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$viewRelationsRecord value2(String value) {
        setRdb$relationName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$viewRelationsRecord value3(Short value) {
        setRdb$viewContext(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$viewRelationsRecord value4(String value) {
        setRdb$contextName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$viewRelationsRecord values(String value1, String value2, Short value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$viewRelationsRecord
     */
    public Rdb$viewRelationsRecord() {
        super(Rdb$viewRelations.RDB$VIEW_RELATIONS);
    }

    /**
     * Create a detached, initialised Rdb$viewRelationsRecord
     */
    public Rdb$viewRelationsRecord(String rdb$viewName, String rdb$relationName, Short rdb$viewContext, String rdb$contextName) {
        super(Rdb$viewRelations.RDB$VIEW_RELATIONS);

        set(0, rdb$viewName);
        set(1, rdb$relationName);
        set(2, rdb$viewContext);
        set(3, rdb$contextName);
    }
}
