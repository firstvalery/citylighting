/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$fields;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$fieldsRecord extends TableRecordImpl<Rdb$fieldsRecord> {

    private static final long serialVersionUID = 822987251;

    /**
     * Setter for <code>RDB$FIELDS.RDB$FIELD_NAME</code>.
     */
    public void setRdb$fieldName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$FIELD_NAME</code>.
     */
    public String getRdb$fieldName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$QUERY_NAME</code>.
     */
    public void setRdb$queryName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$QUERY_NAME</code>.
     */
    public String getRdb$queryName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$VALIDATION_BLR</code>.
     */
    public void setRdb$validationBlr(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$VALIDATION_BLR</code>.
     */
    public byte[] getRdb$validationBlr() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$VALIDATION_SOURCE</code>.
     */
    public void setRdb$validationSource(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$VALIDATION_SOURCE</code>.
     */
    public String getRdb$validationSource() {
        return (String) get(3);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$COMPUTED_BLR</code>.
     */
    public void setRdb$computedBlr(byte... value) {
        set(4, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$COMPUTED_BLR</code>.
     */
    public byte[] getRdb$computedBlr() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$COMPUTED_SOURCE</code>.
     */
    public void setRdb$computedSource(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$COMPUTED_SOURCE</code>.
     */
    public String getRdb$computedSource() {
        return (String) get(5);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$DEFAULT_VALUE</code>.
     */
    public void setRdb$defaultValue(byte... value) {
        set(6, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$DEFAULT_VALUE</code>.
     */
    public byte[] getRdb$defaultValue() {
        return (byte[]) get(6);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$DEFAULT_SOURCE</code>.
     */
    public void setRdb$defaultSource(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$DEFAULT_SOURCE</code>.
     */
    public String getRdb$defaultSource() {
        return (String) get(7);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$FIELD_LENGTH</code>.
     */
    public void setRdb$fieldLength(Short value) {
        set(8, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$FIELD_LENGTH</code>.
     */
    public Short getRdb$fieldLength() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$FIELD_SCALE</code>.
     */
    public void setRdb$fieldScale(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$FIELD_SCALE</code>.
     */
    public Short getRdb$fieldScale() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$FIELD_TYPE</code>.
     */
    public void setRdb$fieldType(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$FIELD_TYPE</code>.
     */
    public Short getRdb$fieldType() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$FIELD_SUB_TYPE</code>.
     */
    public void setRdb$fieldSubType(Short value) {
        set(11, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$FIELD_SUB_TYPE</code>.
     */
    public Short getRdb$fieldSubType() {
        return (Short) get(11);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$MISSING_VALUE</code>.
     */
    public void setRdb$missingValue(byte... value) {
        set(12, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$MISSING_VALUE</code>.
     */
    public byte[] getRdb$missingValue() {
        return (byte[]) get(12);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$MISSING_SOURCE</code>.
     */
    public void setRdb$missingSource(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$MISSING_SOURCE</code>.
     */
    public String getRdb$missingSource() {
        return (String) get(13);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$DESCRIPTION</code>.
     */
    public void setRdb$description(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$DESCRIPTION</code>.
     */
    public String getRdb$description() {
        return (String) get(14);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$SYSTEM_FLAG</code>.
     */
    public void setRdb$systemFlag(Short value) {
        set(15, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$SYSTEM_FLAG</code>.
     */
    public Short getRdb$systemFlag() {
        return (Short) get(15);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$QUERY_HEADER</code>.
     */
    public void setRdb$queryHeader(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$QUERY_HEADER</code>.
     */
    public String getRdb$queryHeader() {
        return (String) get(16);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$SEGMENT_LENGTH</code>.
     */
    public void setRdb$segmentLength(Short value) {
        set(17, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$SEGMENT_LENGTH</code>.
     */
    public Short getRdb$segmentLength() {
        return (Short) get(17);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$EDIT_STRING</code>.
     */
    public void setRdb$editString(String value) {
        set(18, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$EDIT_STRING</code>.
     */
    public String getRdb$editString() {
        return (String) get(18);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$EXTERNAL_LENGTH</code>.
     */
    public void setRdb$externalLength(Short value) {
        set(19, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$EXTERNAL_LENGTH</code>.
     */
    public Short getRdb$externalLength() {
        return (Short) get(19);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$EXTERNAL_SCALE</code>.
     */
    public void setRdb$externalScale(Short value) {
        set(20, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$EXTERNAL_SCALE</code>.
     */
    public Short getRdb$externalScale() {
        return (Short) get(20);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$EXTERNAL_TYPE</code>.
     */
    public void setRdb$externalType(Short value) {
        set(21, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$EXTERNAL_TYPE</code>.
     */
    public Short getRdb$externalType() {
        return (Short) get(21);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$DIMENSIONS</code>.
     */
    public void setRdb$dimensions(Short value) {
        set(22, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$DIMENSIONS</code>.
     */
    public Short getRdb$dimensions() {
        return (Short) get(22);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$NULL_FLAG</code>.
     */
    public void setRdb$nullFlag(Short value) {
        set(23, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$NULL_FLAG</code>.
     */
    public Short getRdb$nullFlag() {
        return (Short) get(23);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$CHARACTER_LENGTH</code>.
     */
    public void setRdb$characterLength(Short value) {
        set(24, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$CHARACTER_LENGTH</code>.
     */
    public Short getRdb$characterLength() {
        return (Short) get(24);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$COLLATION_ID</code>.
     */
    public void setRdb$collationId(Short value) {
        set(25, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$COLLATION_ID</code>.
     */
    public Short getRdb$collationId() {
        return (Short) get(25);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$CHARACTER_SET_ID</code>.
     */
    public void setRdb$characterSetId(Short value) {
        set(26, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$CHARACTER_SET_ID</code>.
     */
    public Short getRdb$characterSetId() {
        return (Short) get(26);
    }

    /**
     * Setter for <code>RDB$FIELDS.RDB$FIELD_PRECISION</code>.
     */
    public void setRdb$fieldPrecision(Short value) {
        set(27, value);
    }

    /**
     * Getter for <code>RDB$FIELDS.RDB$FIELD_PRECISION</code>.
     */
    public Short getRdb$fieldPrecision() {
        return (Short) get(27);
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$fieldsRecord
     */
    public Rdb$fieldsRecord() {
        super(Rdb$fields.RDB$FIELDS);
    }

    /**
     * Create a detached, initialised Rdb$fieldsRecord
     */
    public Rdb$fieldsRecord(String rdb$fieldName, String rdb$queryName, byte[] rdb$validationBlr, String rdb$validationSource, byte[] rdb$computedBlr, String rdb$computedSource, byte[] rdb$defaultValue, String rdb$defaultSource, Short rdb$fieldLength, Short rdb$fieldScale, Short rdb$fieldType, Short rdb$fieldSubType, byte[] rdb$missingValue, String rdb$missingSource, String rdb$description, Short rdb$systemFlag, String rdb$queryHeader, Short rdb$segmentLength, String rdb$editString, Short rdb$externalLength, Short rdb$externalScale, Short rdb$externalType, Short rdb$dimensions, Short rdb$nullFlag, Short rdb$characterLength, Short rdb$collationId, Short rdb$characterSetId, Short rdb$fieldPrecision) {
        super(Rdb$fields.RDB$FIELDS);

        set(0, rdb$fieldName);
        set(1, rdb$queryName);
        set(2, rdb$validationBlr);
        set(3, rdb$validationSource);
        set(4, rdb$computedBlr);
        set(5, rdb$computedSource);
        set(6, rdb$defaultValue);
        set(7, rdb$defaultSource);
        set(8, rdb$fieldLength);
        set(9, rdb$fieldScale);
        set(10, rdb$fieldType);
        set(11, rdb$fieldSubType);
        set(12, rdb$missingValue);
        set(13, rdb$missingSource);
        set(14, rdb$description);
        set(15, rdb$systemFlag);
        set(16, rdb$queryHeader);
        set(17, rdb$segmentLength);
        set(18, rdb$editString);
        set(19, rdb$externalLength);
        set(20, rdb$externalScale);
        set(21, rdb$externalType);
        set(22, rdb$dimensions);
        set(23, rdb$nullFlag);
        set(24, rdb$characterLength);
        set(25, rdb$collationId);
        set(26, rdb$characterSetId);
        set(27, rdb$fieldPrecision);
    }
}
