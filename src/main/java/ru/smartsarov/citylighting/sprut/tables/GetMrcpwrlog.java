/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetMrcpwrlogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetMrcpwrlog extends TableImpl<GetMrcpwrlogRecord> {

    private static final long serialVersionUID = -662676991;

    /**
     * The reference instance of <code>GET_MRCPWRLOG</code>
     */
    public static final GetMrcpwrlog GET_MRCPWRLOG = new GetMrcpwrlog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetMrcpwrlogRecord> getRecordType() {
        return GetMrcpwrlogRecord.class;
    }

    /**
     * The column <code>GET_MRCPWRLOG.MPL_DATE</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Timestamp> MPL_DATE = createField("MPL_DATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_PP</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_PP = createField("MPL_PP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_PM</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_PM = createField("MPL_PM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_QP</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_QP = createField("MPL_QP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_QM</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_QM = createField("MPL_QM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_AP</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_AP = createField("MPL_AP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_AM</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_AM = createField("MPL_AM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_RP</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_RP = createField("MPL_RP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_RM</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Double> MPL_RM = createField("MPL_RM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_ERR</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Integer> MPL_ERR = createField("MPL_ERR", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_DT</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Integer> MPL_DT = createField("MPL_DT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_MRCPWRLOG.MPL_RTIME</code>.
     */
    public final TableField<GetMrcpwrlogRecord, Timestamp> MPL_RTIME = createField("MPL_RTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>GET_MRCPWRLOG</code> table reference
     */
    public GetMrcpwrlog() {
        this(DSL.name("GET_MRCPWRLOG"), null);
    }

    /**
     * Create an aliased <code>GET_MRCPWRLOG</code> table reference
     */
    public GetMrcpwrlog(String alias) {
        this(DSL.name(alias), GET_MRCPWRLOG);
    }

    /**
     * Create an aliased <code>GET_MRCPWRLOG</code> table reference
     */
    public GetMrcpwrlog(Name alias) {
        this(alias, GET_MRCPWRLOG);
    }

    private GetMrcpwrlog(Name alias, Table<GetMrcpwrlogRecord> aliased) {
        this(alias, aliased, new Field[3]);
    }

    private GetMrcpwrlog(Name alias, Table<GetMrcpwrlogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetMrcpwrlog(Table<O> child, ForeignKey<O, GetMrcpwrlogRecord> key) {
        super(child, key, GET_MRCPWRLOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetMrcpwrlog as(String alias) {
        return new GetMrcpwrlog(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetMrcpwrlog as(Name alias) {
        return new GetMrcpwrlog(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetMrcpwrlog rename(String name) {
        return new GetMrcpwrlog(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetMrcpwrlog rename(Name name) {
        return new GetMrcpwrlog(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetMrcpwrlog call(Integer cid, Timestamp sdate, Timestamp edate) {
        return new GetMrcpwrlog(DSL.name(getName()), null, new Field[] { 
              DSL.val(cid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(sdate, org.jooq.impl.SQLDataType.TIMESTAMP)
            , DSL.val(edate, org.jooq.impl.SQLDataType.TIMESTAMP)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetMrcpwrlog call(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return new GetMrcpwrlog(DSL.name(getName()), null, new Field[] { 
              cid
            , sdate
            , edate
        });
    }
}
