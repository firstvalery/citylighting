/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.Mon$ioStatsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Mon$ioStats extends TableImpl<Mon$ioStatsRecord> {

    private static final long serialVersionUID = 142860706;

    /**
     * The reference instance of <code>MON$IO_STATS</code>
     */
    public static final Mon$ioStats MON$IO_STATS = new Mon$ioStats();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Mon$ioStatsRecord> getRecordType() {
        return Mon$ioStatsRecord.class;
    }

    /**
     * The column <code>MON$IO_STATS.MON$STAT_ID</code>.
     */
    public final TableField<Mon$ioStatsRecord, Integer> MON$STAT_ID = createField("MON$STAT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>MON$IO_STATS.MON$STAT_GROUP</code>.
     */
    public final TableField<Mon$ioStatsRecord, Short> MON$STAT_GROUP = createField("MON$STAT_GROUP", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>MON$IO_STATS.MON$PAGE_READS</code>.
     */
    public final TableField<Mon$ioStatsRecord, Long> MON$PAGE_READS = createField("MON$PAGE_READS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MON$IO_STATS.MON$PAGE_WRITES</code>.
     */
    public final TableField<Mon$ioStatsRecord, Long> MON$PAGE_WRITES = createField("MON$PAGE_WRITES", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MON$IO_STATS.MON$PAGE_FETCHES</code>.
     */
    public final TableField<Mon$ioStatsRecord, Long> MON$PAGE_FETCHES = createField("MON$PAGE_FETCHES", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>MON$IO_STATS.MON$PAGE_MARKS</code>.
     */
    public final TableField<Mon$ioStatsRecord, Long> MON$PAGE_MARKS = createField("MON$PAGE_MARKS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>MON$IO_STATS</code> table reference
     */
    public Mon$ioStats() {
        this(DSL.name("MON$IO_STATS"), null);
    }

    /**
     * Create an aliased <code>MON$IO_STATS</code> table reference
     */
    public Mon$ioStats(String alias) {
        this(DSL.name(alias), MON$IO_STATS);
    }

    /**
     * Create an aliased <code>MON$IO_STATS</code> table reference
     */
    public Mon$ioStats(Name alias) {
        this(alias, MON$IO_STATS);
    }

    private Mon$ioStats(Name alias, Table<Mon$ioStatsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Mon$ioStats(Name alias, Table<Mon$ioStatsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Mon$ioStats(Table<O> child, ForeignKey<O, Mon$ioStatsRecord> key) {
        super(child, key, MON$IO_STATS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$ioStats as(String alias) {
        return new Mon$ioStats(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Mon$ioStats as(Name alias) {
        return new Mon$ioStats(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Mon$ioStats rename(String name) {
        return new Mon$ioStats(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Mon$ioStats rename(Name name) {
        return new Mon$ioStats(name, null);
    }
}
