/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.GprsTrafficRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GprsTraffic extends TableImpl<GprsTrafficRecord> {

    private static final long serialVersionUID = -1756736144;

    /**
     * The reference instance of <code>GPRS_TRAFFIC</code>
     */
    public static final GprsTraffic GPRS_TRAFFIC = new GprsTraffic();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GprsTrafficRecord> getRecordType() {
        return GprsTrafficRecord.class;
    }

    /**
     * The column <code>GPRS_TRAFFIC.USK_ID</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> USK_ID = createField("USK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>GPRS_TRAFFIC.LOG_TIME</code>.
     */
    public final TableField<GprsTrafficRecord, Timestamp> LOG_TIME = createField("LOG_TIME", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>GPRS_TRAFFIC.PROXY_TX</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> PROXY_TX = createField("PROXY_TX", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_RX_TCP</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> USK_RX_TCP = createField("USK_RX_TCP", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_RX_RAW</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> USK_RX_RAW = createField("USK_RX_RAW", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.PROXY_RX</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> PROXY_RX = createField("PROXY_RX", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_TX_TCP</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> USK_TX_TCP = createField("USK_TX_TCP", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_TX_RAW</code>.
     */
    public final TableField<GprsTrafficRecord, Integer> USK_TX_RAW = createField("USK_TX_RAW", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_RX_TCP_TOT</code>.
     */
    public final TableField<GprsTrafficRecord, Long> USK_RX_TCP_TOT = createField("USK_RX_TCP_TOT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_RX_RAW_TOT</code>.
     */
    public final TableField<GprsTrafficRecord, Long> USK_RX_RAW_TOT = createField("USK_RX_RAW_TOT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_TX_TCP_TOT</code>.
     */
    public final TableField<GprsTrafficRecord, Long> USK_TX_TCP_TOT = createField("USK_TX_TCP_TOT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.USK_TX_RAW_TOT</code>.
     */
    public final TableField<GprsTrafficRecord, Long> USK_TX_RAW_TOT = createField("USK_TX_RAW_TOT", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.INCOMPLETE</code>.
     */
    public final TableField<GprsTrafficRecord, Short> INCOMPLETE = createField("INCOMPLETE", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>GPRS_TRAFFIC.SIGNAL_LEVEL</code>.
     */
    public final TableField<GprsTrafficRecord, BigDecimal> SIGNAL_LEVEL = createField("SIGNAL_LEVEL", org.jooq.impl.SQLDataType.DECIMAL(3, 1), this, "");

    /**
     * The column <code>GPRS_TRAFFIC.RESET_COUNT</code>.
     */
    public final TableField<GprsTrafficRecord, Short> RESET_COUNT = createField("RESET_COUNT", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * Create a <code>GPRS_TRAFFIC</code> table reference
     */
    public GprsTraffic() {
        this(DSL.name("GPRS_TRAFFIC"), null);
    }

    /**
     * Create an aliased <code>GPRS_TRAFFIC</code> table reference
     */
    public GprsTraffic(String alias) {
        this(DSL.name(alias), GPRS_TRAFFIC);
    }

    /**
     * Create an aliased <code>GPRS_TRAFFIC</code> table reference
     */
    public GprsTraffic(Name alias) {
        this(alias, GPRS_TRAFFIC);
    }

    private GprsTraffic(Name alias, Table<GprsTrafficRecord> aliased) {
        this(alias, aliased, null);
    }

    private GprsTraffic(Name alias, Table<GprsTrafficRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GprsTraffic(Table<O> child, ForeignKey<O, GprsTrafficRecord> key) {
        super(child, key, GPRS_TRAFFIC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GprsTrafficRecord> getPrimaryKey() {
        return Keys.PK_GPRS_TRAFFIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GprsTrafficRecord>> getKeys() {
        return Arrays.<UniqueKey<GprsTrafficRecord>>asList(Keys.PK_GPRS_TRAFFIC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTraffic as(String alias) {
        return new GprsTraffic(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GprsTraffic as(Name alias) {
        return new GprsTraffic(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GprsTraffic rename(String name) {
        return new GprsTraffic(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GprsTraffic rename(Name name) {
        return new GprsTraffic(name, null);
    }
}
