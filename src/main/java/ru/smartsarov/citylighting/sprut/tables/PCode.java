/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.PCodeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PCode extends TableImpl<PCodeRecord> {

    private static final long serialVersionUID = 117313964;

    /**
     * The reference instance of <code>P_CODE</code>
     */
    public static final PCode P_CODE = new PCode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PCodeRecord> getRecordType() {
        return PCodeRecord.class;
    }

    /**
     * The column <code>P_CODE.PCS_ID</code>.
     */
    public final TableField<PCodeRecord, Integer> PCS_ID = createField("PCS_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>P_CODE.PCS_PRS_ID</code>.
     */
    public final TableField<PCodeRecord, Integer> PCS_PRS_ID = createField("PCS_PRS_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>P_CODE.PCS_PCT_ID</code>.
     */
    public final TableField<PCodeRecord, Integer> PCS_PCT_ID = createField("PCS_PCT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>P_CODE.PCS_CODE</code>.
     */
    public final TableField<PCodeRecord, byte[]> PCS_CODE = createField("PCS_CODE", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>P_CODE.PCS_MEMO</code>.
     */
    public final TableField<PCodeRecord, String> PCS_MEMO = createField("PCS_MEMO", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>P_CODE.PCS_CODE2</code>.
     */
    public final TableField<PCodeRecord, String> PCS_CODE2 = createField("PCS_CODE2", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * Create a <code>P_CODE</code> table reference
     */
    public PCode() {
        this(DSL.name("P_CODE"), null);
    }

    /**
     * Create an aliased <code>P_CODE</code> table reference
     */
    public PCode(String alias) {
        this(DSL.name(alias), P_CODE);
    }

    /**
     * Create an aliased <code>P_CODE</code> table reference
     */
    public PCode(Name alias) {
        this(alias, P_CODE);
    }

    private PCode(Name alias, Table<PCodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private PCode(Name alias, Table<PCodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PCode(Table<O> child, ForeignKey<O, PCodeRecord> key) {
        super(child, key, P_CODE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PCodeRecord> getPrimaryKey() {
        return Keys.INTEG_93;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PCodeRecord>> getKeys() {
        return Arrays.<UniqueKey<PCodeRecord>>asList(Keys.INTEG_93);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCode as(String alias) {
        return new PCode(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PCode as(Name alias) {
        return new PCode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PCode rename(String name) {
        return new PCode(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PCode rename(Name name) {
        return new PCode(name, null);
    }
}
