/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntModbusRegistersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetCntModbusRegisters extends TableImpl<GetCntModbusRegistersRecord> {

    private static final long serialVersionUID = -447702821;

    /**
     * The reference instance of <code>GET_CNT_MODBUS_REGISTERS</code>
     */
    public static final GetCntModbusRegisters GET_CNT_MODBUS_REGISTERS = new GetCntModbusRegisters();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetCntModbusRegistersRecord> getRecordType() {
        return GetCntModbusRegistersRecord.class;
    }

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.CNT_ID</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, Integer> CNT_ID = createField("CNT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_ID</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, Integer> REGISTER_ID = createField("REGISTER_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_ADDRESS</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, Long> REGISTER_ADDRESS = createField("REGISTER_ADDRESS", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_TYPE</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, Integer> REGISTER_TYPE = createField("REGISTER_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_ACCESS_FLAG</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, Integer> REGISTER_ACCESS_FLAG = createField("REGISTER_ACCESS_FLAG", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_NAME</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, String> REGISTER_NAME = createField("REGISTER_NAME", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_VALUE</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, String> REGISTER_VALUE = createField("REGISTER_VALUE", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_GROUP_NAME</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, String> REGISTER_GROUP_NAME = createField("REGISTER_GROUP_NAME", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>GET_CNT_MODBUS_REGISTERS.REGISTER_MEMO</code>.
     */
    public final TableField<GetCntModbusRegistersRecord, String> REGISTER_MEMO = createField("REGISTER_MEMO", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * Create a <code>GET_CNT_MODBUS_REGISTERS</code> table reference
     */
    public GetCntModbusRegisters() {
        this(DSL.name("GET_CNT_MODBUS_REGISTERS"), null);
    }

    /**
     * Create an aliased <code>GET_CNT_MODBUS_REGISTERS</code> table reference
     */
    public GetCntModbusRegisters(String alias) {
        this(DSL.name(alias), GET_CNT_MODBUS_REGISTERS);
    }

    /**
     * Create an aliased <code>GET_CNT_MODBUS_REGISTERS</code> table reference
     */
    public GetCntModbusRegisters(Name alias) {
        this(alias, GET_CNT_MODBUS_REGISTERS);
    }

    private GetCntModbusRegisters(Name alias, Table<GetCntModbusRegistersRecord> aliased) {
        this(alias, aliased, new Field[3]);
    }

    private GetCntModbusRegisters(Name alias, Table<GetCntModbusRegistersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetCntModbusRegisters(Table<O> child, ForeignKey<O, GetCntModbusRegistersRecord> key) {
        super(child, key, GET_CNT_MODBUS_REGISTERS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetCntModbusRegisters as(String alias) {
        return new GetCntModbusRegisters(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetCntModbusRegisters as(Name alias) {
        return new GetCntModbusRegisters(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetCntModbusRegisters rename(String name) {
        return new GetCntModbusRegisters(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetCntModbusRegisters rename(Name name) {
        return new GetCntModbusRegisters(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetCntModbusRegisters call(String login, String pass, Integer inCntId) {
        return new GetCntModbusRegisters(DSL.name(getName()), null, new Field[] { 
              DSL.val(login, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(pass, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(inCntId, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetCntModbusRegisters call(Field<String> login, Field<String> pass, Field<Integer> inCntId) {
        return new GetCntModbusRegisters(DSL.name(getName()), null, new Field[] { 
              login
            , pass
            , inCntId
        });
    }
}
