/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cnta extends TableImpl<CntaRecord> {

    private static final long serialVersionUID = -167174890;

    /**
     * The reference instance of <code>CNTA</code>
     */
    public static final Cnta CNTA = new Cnta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntaRecord> getRecordType() {
        return CntaRecord.class;
    }

    /**
     * The column <code>CNTA.CNTA_ID</code>.
     */
    public final TableField<CntaRecord, Integer> CNTA_ID = createField("CNTA_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNTA.CNTA_NAME</code>.
     */
    public final TableField<CntaRecord, String> CNTA_NAME = createField("CNTA_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>CNTA.CNTA_PARAM1</code>.
     */
    public final TableField<CntaRecord, Double> CNTA_PARAM1 = createField("CNTA_PARAM1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>CNTA.CNTA_PARAM2</code>.
     */
    public final TableField<CntaRecord, Double> CNTA_PARAM2 = createField("CNTA_PARAM2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>CNTA.CNTA_PARAM3</code>.
     */
    public final TableField<CntaRecord, Double> CNTA_PARAM3 = createField("CNTA_PARAM3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>CNTA</code> table reference
     */
    public Cnta() {
        this(DSL.name("CNTA"), null);
    }

    /**
     * Create an aliased <code>CNTA</code> table reference
     */
    public Cnta(String alias) {
        this(DSL.name(alias), CNTA);
    }

    /**
     * Create an aliased <code>CNTA</code> table reference
     */
    public Cnta(Name alias) {
        this(alias, CNTA);
    }

    private Cnta(Name alias, Table<CntaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cnta(Name alias, Table<CntaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Cnta(Table<O> child, ForeignKey<O, CntaRecord> key) {
        super(child, key, CNTA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntaRecord> getPrimaryKey() {
        return Keys.INTEG_23;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntaRecord>> getKeys() {
        return Arrays.<UniqueKey<CntaRecord>>asList(Keys.INTEG_23);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cnta as(String alias) {
        return new Cnta(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cnta as(Name alias) {
        return new Cnta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cnta rename(String name) {
        return new Cnta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cnta rename(Name name) {
        return new Cnta(name, null);
    }
}
