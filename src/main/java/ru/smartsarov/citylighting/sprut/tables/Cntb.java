/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntbRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Cntb extends TableImpl<CntbRecord> {

    private static final long serialVersionUID = -1438779893;

    /**
     * The reference instance of <code>CNTB</code>
     */
    public static final Cntb CNTB = new Cntb();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntbRecord> getRecordType() {
        return CntbRecord.class;
    }

    /**
     * The column <code>CNTB.CNTB_ID</code>.
     */
    public final TableField<CntbRecord, Integer> CNTB_ID = createField("CNTB_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNTB.CNTB_CNTA_ID</code>.
     */
    public final TableField<CntbRecord, Integer> CNTB_CNTA_ID = createField("CNTB_CNTA_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNTB.CNTB_NAME</code>.
     */
    public final TableField<CntbRecord, String> CNTB_NAME = createField("CNTB_NAME", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>CNTB.CNTB_TYPE</code>.
     */
    public final TableField<CntbRecord, Integer> CNTB_TYPE = createField("CNTB_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNTB.CNTB_PARAM1</code>.
     */
    public final TableField<CntbRecord, Double> CNTB_PARAM1 = createField("CNTB_PARAM1", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>CNTB.CNTB_PARAM2</code>.
     */
    public final TableField<CntbRecord, Double> CNTB_PARAM2 = createField("CNTB_PARAM2", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>CNTB.CNTB_PARAM3</code>.
     */
    public final TableField<CntbRecord, Double> CNTB_PARAM3 = createField("CNTB_PARAM3", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>CNTB</code> table reference
     */
    public Cntb() {
        this(DSL.name("CNTB"), null);
    }

    /**
     * Create an aliased <code>CNTB</code> table reference
     */
    public Cntb(String alias) {
        this(DSL.name(alias), CNTB);
    }

    /**
     * Create an aliased <code>CNTB</code> table reference
     */
    public Cntb(Name alias) {
        this(alias, CNTB);
    }

    private Cntb(Name alias, Table<CntbRecord> aliased) {
        this(alias, aliased, null);
    }

    private Cntb(Name alias, Table<CntbRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Cntb(Table<O> child, ForeignKey<O, CntbRecord> key) {
        super(child, key, CNTB);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntbRecord> getPrimaryKey() {
        return Keys.INTEG_24;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntbRecord>> getKeys() {
        return Arrays.<UniqueKey<CntbRecord>>asList(Keys.INTEG_24);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cntb as(String alias) {
        return new Cntb(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Cntb as(Name alias) {
        return new Cntb(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Cntb rename(String name) {
        return new Cntb(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Cntb rename(Name name) {
        return new Cntb(name, null);
    }
}
