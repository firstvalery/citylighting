/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.ServiceCurRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ServiceCur extends TableImpl<ServiceCurRecord> {

    private static final long serialVersionUID = -1674193218;

    /**
     * The reference instance of <code>SERVICE_CUR</code>
     */
    public static final ServiceCur SERVICE_CUR = new ServiceCur();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ServiceCurRecord> getRecordType() {
        return ServiceCurRecord.class;
    }

    /**
     * The column <code>SERVICE_CUR.SERVICE_ID</code>.
     */
    public final TableField<ServiceCurRecord, Integer> SERVICE_ID = createField("SERVICE_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>SERVICE_CUR.NAME</code>.
     */
    public final TableField<ServiceCurRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>SERVICE_CUR.TIMEOUT_SEC</code>.
     */
    public final TableField<ServiceCurRecord, Integer> TIMEOUT_SEC = createField("TIMEOUT_SEC", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>SERVICE_CUR.STIME</code>.
     */
    public final TableField<ServiceCurRecord, Timestamp> STIME = createField("STIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>SERVICE_CUR.STATE</code>.
     */
    public final TableField<ServiceCurRecord, Integer> STATE = createField("STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>SERVICE_CUR.COMMENTARY</code>.
     */
    public final TableField<ServiceCurRecord, String> COMMENTARY = createField("COMMENTARY", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>SERVICE_CUR</code> table reference
     */
    public ServiceCur() {
        this(DSL.name("SERVICE_CUR"), null);
    }

    /**
     * Create an aliased <code>SERVICE_CUR</code> table reference
     */
    public ServiceCur(String alias) {
        this(DSL.name(alias), SERVICE_CUR);
    }

    /**
     * Create an aliased <code>SERVICE_CUR</code> table reference
     */
    public ServiceCur(Name alias) {
        this(alias, SERVICE_CUR);
    }

    private ServiceCur(Name alias, Table<ServiceCurRecord> aliased) {
        this(alias, aliased, null);
    }

    private ServiceCur(Name alias, Table<ServiceCurRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ServiceCur(Table<O> child, ForeignKey<O, ServiceCurRecord> key) {
        super(child, key, SERVICE_CUR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ServiceCurRecord> getPrimaryKey() {
        return Keys.INTEG_124;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ServiceCurRecord>> getKeys() {
        return Arrays.<UniqueKey<ServiceCurRecord>>asList(Keys.INTEG_124);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceCur as(String alias) {
        return new ServiceCur(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ServiceCur as(Name alias) {
        return new ServiceCur(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceCur rename(String name) {
        return new ServiceCur(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ServiceCur rename(Name name) {
        return new ServiceCur(name, null);
    }
}
