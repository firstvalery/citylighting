/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetIcntdlRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetIcntdl extends TableImpl<GetIcntdlRecord> {

    private static final long serialVersionUID = -497563848;

    /**
     * The reference instance of <code>GET_ICNTDL</code>
     */
    public static final GetIcntdl GET_ICNTDL = new GetIcntdl();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetIcntdlRecord> getRecordType() {
        return GetIcntdlRecord.class;
    }

    /**
     * The column <code>GET_ICNTDL.GID_CID</code>.
     */
    public final TableField<GetIcntdlRecord, Integer> GID_CID = createField("GID_CID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_LTIME</code>.
     */
    public final TableField<GetIcntdlRecord, Timestamp> GID_LTIME = createField("GID_LTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_TIME</code>.
     */
    public final TableField<GetIcntdlRecord, Timestamp> GID_TIME = createField("GID_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_PULSE</code>.
     */
    public final TableField<GetIcntdlRecord, Float> GID_PULSE = createField("GID_PULSE", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_ENRGY</code>.
     */
    public final TableField<GetIcntdlRecord, Float> GID_ENRGY = createField("GID_ENRGY", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_POWER</code>.
     */
    public final TableField<GetIcntdlRecord, Float> GID_POWER = createField("GID_POWER", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_TWORK</code>.
     */
    public final TableField<GetIcntdlRecord, Float> GID_TWORK = createField("GID_TWORK", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_TERROR</code>.
     */
    public final TableField<GetIcntdlRecord, Float> GID_TERROR = createField("GID_TERROR", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>GET_ICNTDL.GID_ERRCNT</code>.
     */
    public final TableField<GetIcntdlRecord, Integer> GID_ERRCNT = createField("GID_ERRCNT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>GET_ICNTDL</code> table reference
     */
    public GetIcntdl() {
        this(DSL.name("GET_ICNTDL"), null);
    }

    /**
     * Create an aliased <code>GET_ICNTDL</code> table reference
     */
    public GetIcntdl(String alias) {
        this(DSL.name(alias), GET_ICNTDL);
    }

    /**
     * Create an aliased <code>GET_ICNTDL</code> table reference
     */
    public GetIcntdl(Name alias) {
        this(alias, GET_ICNTDL);
    }

    private GetIcntdl(Name alias, Table<GetIcntdlRecord> aliased) {
        this(alias, aliased, new Field[3]);
    }

    private GetIcntdl(Name alias, Table<GetIcntdlRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetIcntdl(Table<O> child, ForeignKey<O, GetIcntdlRecord> key) {
        super(child, key, GET_ICNTDL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetIcntdl as(String alias) {
        return new GetIcntdl(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetIcntdl as(Name alias) {
        return new GetIcntdl(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetIcntdl rename(String name) {
        return new GetIcntdl(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetIcntdl rename(Name name) {
        return new GetIcntdl(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetIcntdl call(Integer cid, Timestamp sdate, Timestamp edate) {
        return new GetIcntdl(DSL.name(getName()), null, new Field[] { 
              DSL.val(cid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(sdate, org.jooq.impl.SQLDataType.TIMESTAMP)
            , DSL.val(edate, org.jooq.impl.SQLDataType.TIMESTAMP)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetIcntdl call(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return new GetIcntdl(DSL.name(getName()), null, new Field[] { 
              cid
            , sdate
            , edate
        });
    }
}
