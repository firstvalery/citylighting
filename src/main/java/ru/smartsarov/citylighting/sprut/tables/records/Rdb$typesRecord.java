/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$types;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$typesRecord extends TableRecordImpl<Rdb$typesRecord> implements Record5<String, Short, String, String, Short> {

    private static final long serialVersionUID = -1511193368;

    /**
     * Setter for <code>RDB$TYPES.RDB$FIELD_NAME</code>.
     */
    public void setRdb$fieldName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$TYPES.RDB$FIELD_NAME</code>.
     */
    public String getRdb$fieldName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>RDB$TYPES.RDB$TYPE</code>.
     */
    public void setRdb$type(Short value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$TYPES.RDB$TYPE</code>.
     */
    public Short getRdb$type() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>RDB$TYPES.RDB$TYPE_NAME</code>.
     */
    public void setRdb$typeName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$TYPES.RDB$TYPE_NAME</code>.
     */
    public String getRdb$typeName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>RDB$TYPES.RDB$DESCRIPTION</code>.
     */
    public void setRdb$description(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$TYPES.RDB$DESCRIPTION</code>.
     */
    public String getRdb$description() {
        return (String) get(3);
    }

    /**
     * Setter for <code>RDB$TYPES.RDB$SYSTEM_FLAG</code>.
     */
    public void setRdb$systemFlag(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>RDB$TYPES.RDB$SYSTEM_FLAG</code>.
     */
    public Short getRdb$systemFlag() {
        return (Short) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Short, String, String, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<String, Short, String, String, Short> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Rdb$types.RDB$TYPES.RDB$FIELD_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return Rdb$types.RDB$TYPES.RDB$TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Rdb$types.RDB$TYPES.RDB$TYPE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Rdb$types.RDB$TYPES.RDB$DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return Rdb$types.RDB$TYPES.RDB$SYSTEM_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getRdb$fieldName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getRdb$type();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getRdb$typeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getRdb$description();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getRdb$systemFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRdb$fieldName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getRdb$type();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getRdb$typeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getRdb$description();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getRdb$systemFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$typesRecord value1(String value) {
        setRdb$fieldName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$typesRecord value2(Short value) {
        setRdb$type(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$typesRecord value3(String value) {
        setRdb$typeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$typesRecord value4(String value) {
        setRdb$description(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$typesRecord value5(Short value) {
        setRdb$systemFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$typesRecord values(String value1, Short value2, String value3, String value4, Short value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$typesRecord
     */
    public Rdb$typesRecord() {
        super(Rdb$types.RDB$TYPES);
    }

    /**
     * Create a detached, initialised Rdb$typesRecord
     */
    public Rdb$typesRecord(String rdb$fieldName, Short rdb$type, String rdb$typeName, String rdb$description, Short rdb$systemFlag) {
        super(Rdb$types.RDB$TYPES);

        set(0, rdb$fieldName);
        set(1, rdb$type);
        set(2, rdb$typeName);
        set(3, rdb$description);
        set(4, rdb$systemFlag);
    }
}
