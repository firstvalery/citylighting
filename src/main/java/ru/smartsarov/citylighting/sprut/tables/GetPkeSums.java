/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.math.BigDecimal;
import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetPkeSumsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetPkeSums extends TableImpl<GetPkeSumsRecord> {

    private static final long serialVersionUID = -1689310664;

    /**
     * The reference instance of <code>GET_PKE_SUMS</code>
     */
    public static final GetPkeSums GET_PKE_SUMS = new GetPkeSums();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetPkeSumsRecord> getRecordType() {
        return GetPkeSumsRecord.class;
    }

    /**
     * The column <code>GET_PKE_SUMS.TIME_DATE</code>.
     */
    public final TableField<GetPkeSumsRecord, Date> TIME_DATE = createField("TIME_DATE", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>GET_PKE_SUMS.TIME_TOTAL</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> TIME_TOTAL = createField("TIME_TOTAL", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.TIME_MIN_CRIT</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> TIME_MIN_CRIT = createField("TIME_MIN_CRIT", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.TIME_MIN_NORM</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> TIME_MIN_NORM = createField("TIME_MIN_NORM", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.TIME_NORM</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> TIME_NORM = createField("TIME_NORM", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.TIME_MAX_NORM</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> TIME_MAX_NORM = createField("TIME_MAX_NORM", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.TIME_MAX_CRIT</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> TIME_MAX_CRIT = createField("TIME_MAX_CRIT", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.PERC_OUT_CRIT</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> PERC_OUT_CRIT = createField("PERC_OUT_CRIT", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.PERC_OUT_NORM</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> PERC_OUT_NORM = createField("PERC_OUT_NORM", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * The column <code>GET_PKE_SUMS.PERC_NORM</code>.
     */
    public final TableField<GetPkeSumsRecord, BigDecimal> PERC_NORM = createField("PERC_NORM", org.jooq.impl.SQLDataType.DECIMAL(6, 2), this, "");

    /**
     * Create a <code>GET_PKE_SUMS</code> table reference
     */
    public GetPkeSums() {
        this(DSL.name("GET_PKE_SUMS"), null);
    }

    /**
     * Create an aliased <code>GET_PKE_SUMS</code> table reference
     */
    public GetPkeSums(String alias) {
        this(DSL.name(alias), GET_PKE_SUMS);
    }

    /**
     * Create an aliased <code>GET_PKE_SUMS</code> table reference
     */
    public GetPkeSums(Name alias) {
        this(alias, GET_PKE_SUMS);
    }

    private GetPkeSums(Name alias, Table<GetPkeSumsRecord> aliased) {
        this(alias, aliased, new Field[5]);
    }

    private GetPkeSums(Name alias, Table<GetPkeSumsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetPkeSums(Table<O> child, ForeignKey<O, GetPkeSumsRecord> key) {
        super(child, key, GET_PKE_SUMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetPkeSums as(String alias) {
        return new GetPkeSums(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetPkeSums as(Name alias) {
        return new GetPkeSums(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetPkeSums rename(String name) {
        return new GetPkeSums(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetPkeSums rename(Name name) {
        return new GetPkeSums(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetPkeSums call(Integer cid, Integer phase, Date sdate, Date edate, Integer byDay) {
        return new GetPkeSums(DSL.name(getName()), null, new Field[] { 
              DSL.val(cid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(phase, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(sdate, org.jooq.impl.SQLDataType.DATE)
            , DSL.val(edate, org.jooq.impl.SQLDataType.DATE)
            , DSL.val(byDay, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetPkeSums call(Field<Integer> cid, Field<Integer> phase, Field<Date> sdate, Field<Date> edate, Field<Integer> byDay) {
        return new GetPkeSums(DSL.name(getName()), null, new Field[] { 
              cid
            , phase
            , sdate
            , edate
            , byDay
        });
    }
}
