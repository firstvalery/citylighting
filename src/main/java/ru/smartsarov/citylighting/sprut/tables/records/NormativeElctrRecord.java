/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.NormativeElctr;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NormativeElctrRecord extends UpdatableRecordImpl<NormativeElctrRecord> {

    private static final long serialVersionUID = 1536188105;

    /**
     * Setter for <code>NORMATIVE_ELCTR.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.NORM_ID</code>.
     */
    public void setNormId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.NORM_ID</code>.
     */
    public Integer getNormId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.TYPE1</code>.
     */
    public void setType1(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.TYPE1</code>.
     */
    public Short getType1() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.TYPE2</code>.
     */
    public void setType2(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.TYPE2</code>.
     */
    public Short getType2() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.TYPE3</code>.
     */
    public void setType3(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.TYPE3</code>.
     */
    public Short getType3() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.TYPE4</code>.
     */
    public void setType4(Short value) {
        set(5, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.TYPE4</code>.
     */
    public Short getType4() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.AP</code>.
     */
    public void setAp(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.AP</code>.
     */
    public Double getAp() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.AM</code>.
     */
    public void setAm(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.AM</code>.
     */
    public Double getAm() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.RP</code>.
     */
    public void setRp(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.RP</code>.
     */
    public Double getRp() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.RM</code>.
     */
    public void setRm(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.RM</code>.
     */
    public Double getRm() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.P</code>.
     */
    public void setP(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.P</code>.
     */
    public Double getP() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.PA</code>.
     */
    public void setPa(Double value) {
        set(11, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.PA</code>.
     */
    public Double getPa() {
        return (Double) get(11);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.PB</code>.
     */
    public void setPb(Double value) {
        set(12, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.PB</code>.
     */
    public Double getPb() {
        return (Double) get(12);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.PC</code>.
     */
    public void setPc(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.PC</code>.
     */
    public Double getPc() {
        return (Double) get(13);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.Q</code>.
     */
    public void setQ(Double value) {
        set(14, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.Q</code>.
     */
    public Double getQ() {
        return (Double) get(14);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.QA</code>.
     */
    public void setQa(Double value) {
        set(15, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.QA</code>.
     */
    public Double getQa() {
        return (Double) get(15);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.QB</code>.
     */
    public void setQb(Double value) {
        set(16, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.QB</code>.
     */
    public Double getQb() {
        return (Double) get(16);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.QC</code>.
     */
    public void setQc(Double value) {
        set(17, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.QC</code>.
     */
    public Double getQc() {
        return (Double) get(17);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.QP</code>.
     */
    public void setQp(Double value) {
        set(18, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.QP</code>.
     */
    public Double getQp() {
        return (Double) get(18);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.UA</code>.
     */
    public void setUa(Double value) {
        set(19, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.UA</code>.
     */
    public Double getUa() {
        return (Double) get(19);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.UB</code>.
     */
    public void setUb(Double value) {
        set(20, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.UB</code>.
     */
    public Double getUb() {
        return (Double) get(20);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.UC</code>.
     */
    public void setUc(Double value) {
        set(21, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.UC</code>.
     */
    public Double getUc() {
        return (Double) get(21);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.IA</code>.
     */
    public void setIa(Double value) {
        set(22, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.IA</code>.
     */
    public Double getIa() {
        return (Double) get(22);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.IB</code>.
     */
    public void setIb(Double value) {
        set(23, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.IB</code>.
     */
    public Double getIb() {
        return (Double) get(23);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.IC</code>.
     */
    public void setIc(Double value) {
        set(24, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.IC</code>.
     */
    public Double getIc() {
        return (Double) get(24);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.F</code>.
     */
    public void setF(Double value) {
        set(25, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.F</code>.
     */
    public Double getF() {
        return (Double) get(25);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.COS_F</code>.
     */
    public void setCosF(Double value) {
        set(26, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.COS_F</code>.
     */
    public Double getCosF() {
        return (Double) get(26);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.COS_FA</code>.
     */
    public void setCosFa(Double value) {
        set(27, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.COS_FA</code>.
     */
    public Double getCosFa() {
        return (Double) get(27);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.COS_FB</code>.
     */
    public void setCosFb(Double value) {
        set(28, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.COS_FB</code>.
     */
    public Double getCosFb() {
        return (Double) get(28);
    }

    /**
     * Setter for <code>NORMATIVE_ELCTR.COS_FC</code>.
     */
    public void setCosFc(Double value) {
        set(29, value);
    }

    /**
     * Getter for <code>NORMATIVE_ELCTR.COS_FC</code>.
     */
    public Double getCosFc() {
        return (Double) get(29);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NormativeElctrRecord
     */
    public NormativeElctrRecord() {
        super(NormativeElctr.NORMATIVE_ELCTR);
    }

    /**
     * Create a detached, initialised NormativeElctrRecord
     */
    public NormativeElctrRecord(Integer id, Integer normId, Short type1, Short type2, Short type3, Short type4, Double ap, Double am, Double rp, Double rm, Double p, Double pa, Double pb, Double pc, Double q, Double qa, Double qb, Double qc, Double qp, Double ua, Double ub, Double uc, Double ia, Double ib, Double ic, Double f, Double cosF, Double cosFa, Double cosFb, Double cosFc) {
        super(NormativeElctr.NORMATIVE_ELCTR);

        set(0, id);
        set(1, normId);
        set(2, type1);
        set(3, type2);
        set(4, type3);
        set(5, type4);
        set(6, ap);
        set(7, am);
        set(8, rp);
        set(9, rm);
        set(10, p);
        set(11, pa);
        set(12, pb);
        set(13, pc);
        set(14, q);
        set(15, qa);
        set(16, qb);
        set(17, qc);
        set(18, qp);
        set(19, ua);
        set(20, ub);
        set(21, uc);
        set(22, ia);
        set(23, ib);
        set(24, ic);
        set(25, f);
        set(26, cosF);
        set(27, cosFa);
        set(28, cosFb);
        set(29, cosFc);
    }
}
