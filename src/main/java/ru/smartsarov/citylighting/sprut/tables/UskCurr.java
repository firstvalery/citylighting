/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.UskCurrRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UskCurr extends TableImpl<UskCurrRecord> {

    private static final long serialVersionUID = -374774838;

    /**
     * The reference instance of <code>USK_CURR</code>
     */
    public static final UskCurr USK_CURR = new UskCurr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UskCurrRecord> getRecordType() {
        return UskCurrRecord.class;
    }

    /**
     * The column <code>USK_CURR.USKC_ID</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_ID = createField("USKC_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>USK_CURR.USKC_STIME</code>.
     */
    public final TableField<UskCurrRecord, Timestamp> USKC_STIME = createField("USKC_STIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>USK_CURR.USKC_STATE</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_STATE = createField("USKC_STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_V</code>.
     */
    public final TableField<UskCurrRecord, Double> USKC_V = createField("USKC_V", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>USK_CURR.USKC_T</code>.
     */
    public final TableField<UskCurrRecord, Double> USKC_T = createField("USKC_T", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>USK_CURR.USKC_VADC</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_VADC = createField("USKC_VADC", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_TADC</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_TADC = createField("USKC_TADC", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_UPTIME_SEC</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_UPTIME_SEC = createField("USKC_UPTIME_SEC", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_SENSOR</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_SENSOR = createField("USKC_SENSOR", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_SIGNAL_LEVEL</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_SIGNAL_LEVEL = createField("USKC_SIGNAL_LEVEL", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_MODEM_STAT</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_MODEM_STAT = createField("USKC_MODEM_STAT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_FTIME</code>.
     */
    public final TableField<UskCurrRecord, Timestamp> USKC_FTIME = createField("USKC_FTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>USK_CURR.USKC_LTIME</code>.
     */
    public final TableField<UskCurrRecord, Timestamp> USKC_LTIME = createField("USKC_LTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>USK_CURR.USKC_JRNL_FTIME</code>.
     */
    public final TableField<UskCurrRecord, Timestamp> USKC_JRNL_FTIME = createField("USKC_JRNL_FTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>USK_CURR.USKC_JRNL_LTIME</code>.
     */
    public final TableField<UskCurrRecord, Timestamp> USKC_JRNL_LTIME = createField("USKC_JRNL_LTIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>USK_CURR.USKC_VERSION</code>.
     */
    public final TableField<UskCurrRecord, Integer> USKC_VERSION = createField("USKC_VERSION", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_CURR.USKC_VERDATE</code>.
     */
    public final TableField<UskCurrRecord, String> USKC_VERDATE = createField("USKC_VERDATE", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * Create a <code>USK_CURR</code> table reference
     */
    public UskCurr() {
        this(DSL.name("USK_CURR"), null);
    }

    /**
     * Create an aliased <code>USK_CURR</code> table reference
     */
    public UskCurr(String alias) {
        this(DSL.name(alias), USK_CURR);
    }

    /**
     * Create an aliased <code>USK_CURR</code> table reference
     */
    public UskCurr(Name alias) {
        this(alias, USK_CURR);
    }

    private UskCurr(Name alias, Table<UskCurrRecord> aliased) {
        this(alias, aliased, null);
    }

    private UskCurr(Name alias, Table<UskCurrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UskCurr(Table<O> child, ForeignKey<O, UskCurrRecord> key) {
        super(child, key, USK_CURR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UskCurrRecord> getPrimaryKey() {
        return Keys.USK_CURR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UskCurrRecord>> getKeys() {
        return Arrays.<UniqueKey<UskCurrRecord>>asList(Keys.USK_CURR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UskCurr as(String alias) {
        return new UskCurr(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UskCurr as(Name alias) {
        return new UskCurr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UskCurr rename(String name) {
        return new UskCurr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UskCurr rename(Name name) {
        return new UskCurr(name, null);
    }
}
