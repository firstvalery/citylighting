/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GetArchElctrIntel_15Record;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetArchElctrIntel_15 extends TableImpl<GetArchElctrIntel_15Record> {

    private static final long serialVersionUID = -360686234;

    /**
     * The reference instance of <code>GET_ARCH_ELCTR_INTEL_15</code>
     */
    public static final GetArchElctrIntel_15 GET_ARCH_ELCTR_INTEL_15 = new GetArchElctrIntel_15();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GetArchElctrIntel_15Record> getRecordType() {
        return GetArchElctrIntel_15Record.class;
    }

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.ID</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.TARIFF</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Integer> TARIFF = createField("TARIFF", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.AP</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> AP = createField("AP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.AM</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> AM = createField("AM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.RP</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> RP = createField("RP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.RM</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> RM = createField("RM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IAP</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IAP = createField("IAP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IAM</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IAM = createField("IAM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IRP</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IRP = createField("IRP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IRM</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IRM = createField("IRM", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.P</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> P = createField("P", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.PA</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> PA = createField("PA", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.PB</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> PB = createField("PB", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.PC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> PC = createField("PC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.Q</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> Q = createField("Q", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.QA</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> QA = createField("QA", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.QB</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> QB = createField("QB", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.QC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> QC = createField("QC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.QP</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> QP = createField("QP", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.UA</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> UA = createField("UA", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.UB</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> UB = createField("UB", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.UC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> UC = createField("UC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IA</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IA = createField("IA", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IB</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IB = createField("IB", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.IC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> IC = createField("IC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.F</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> F = createField("F", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.ALFA_AB</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> ALFA_AB = createField("ALFA_AB", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.ALFA_AC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> ALFA_AC = createField("ALFA_AC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.ALFA_BC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> ALFA_BC = createField("ALFA_BC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.COS_F</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> COS_F = createField("COS_F", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.COS_FA</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> COS_FA = createField("COS_FA", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.COS_FB</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> COS_FB = createField("COS_FB", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.COS_FC</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> COS_FC = createField("COS_FC", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.LDATE</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Timestamp> LDATE = createField("LDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.TDELTA</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> TDELTA = createField("TDELTA", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.ITRANS</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> ITRANS = createField("ITRANS", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GET_ARCH_ELCTR_INTEL_15.UTRANS</code>.
     */
    public final TableField<GetArchElctrIntel_15Record, Double> UTRANS = createField("UTRANS", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * Create a <code>GET_ARCH_ELCTR_INTEL_15</code> table reference
     */
    public GetArchElctrIntel_15() {
        this(DSL.name("GET_ARCH_ELCTR_INTEL_15"), null);
    }

    /**
     * Create an aliased <code>GET_ARCH_ELCTR_INTEL_15</code> table reference
     */
    public GetArchElctrIntel_15(String alias) {
        this(DSL.name(alias), GET_ARCH_ELCTR_INTEL_15);
    }

    /**
     * Create an aliased <code>GET_ARCH_ELCTR_INTEL_15</code> table reference
     */
    public GetArchElctrIntel_15(Name alias) {
        this(alias, GET_ARCH_ELCTR_INTEL_15);
    }

    private GetArchElctrIntel_15(Name alias, Table<GetArchElctrIntel_15Record> aliased) {
        this(alias, aliased, new Field[6]);
    }

    private GetArchElctrIntel_15(Name alias, Table<GetArchElctrIntel_15Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GetArchElctrIntel_15(Table<O> child, ForeignKey<O, GetArchElctrIntel_15Record> key) {
        super(child, key, GET_ARCH_ELCTR_INTEL_15);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetArchElctrIntel_15 as(String alias) {
        return new GetArchElctrIntel_15(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetArchElctrIntel_15 as(Name alias) {
        return new GetArchElctrIntel_15(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetArchElctrIntel_15 rename(String name) {
        return new GetArchElctrIntel_15(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GetArchElctrIntel_15 rename(Name name) {
        return new GetArchElctrIntel_15(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public GetArchElctrIntel_15 call(String login, String pass, Integer cid, Date fromDate, Date toDate, Integer transConsider) {
        return new GetArchElctrIntel_15(DSL.name(getName()), null, new Field[] { 
              DSL.val(login, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(pass, org.jooq.impl.SQLDataType.VARCHAR(32))
            , DSL.val(cid, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(fromDate, org.jooq.impl.SQLDataType.DATE)
            , DSL.val(toDate, org.jooq.impl.SQLDataType.DATE)
            , DSL.val(transConsider, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public GetArchElctrIntel_15 call(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate, Field<Integer> transConsider) {
        return new GetArchElctrIntel_15(DSL.name(getName()), null, new Field[] { 
              login
            , pass
            , cid
            , fromDate
            , toDate
            , transConsider
        });
    }
}
