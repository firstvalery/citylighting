/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntPkelastRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntPkelast extends TableImpl<CntPkelastRecord> {

    private static final long serialVersionUID = 1202033972;

    /**
     * The reference instance of <code>CNT_PKELAST</code>
     */
    public static final CntPkelast CNT_PKELAST = new CntPkelast();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntPkelastRecord> getRecordType() {
        return CntPkelastRecord.class;
    }

    /**
     * The column <code>CNT_PKELAST.PKE_CID</code>.
     */
    public final TableField<CntPkelastRecord, Integer> PKE_CID = createField("PKE_CID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_KIND</code>.
     */
    public final TableField<CntPkelastRecord, Short> PKE_KIND = createField("PKE_KIND", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_INDEX</code>.
     */
    public final TableField<CntPkelastRecord, Short> PKE_INDEX = createField("PKE_INDEX", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_IN</code>.
     */
    public final TableField<CntPkelastRecord, Timestamp> PKE_IN = createField("PKE_IN", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_OUT</code>.
     */
    public final TableField<CntPkelastRecord, Timestamp> PKE_OUT = createField("PKE_OUT", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_START</code>.
     */
    public final TableField<CntPkelastRecord, Timestamp> PKE_START = createField("PKE_START", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_STIME</code>.
     */
    public final TableField<CntPkelastRecord, Timestamp> PKE_STIME = createField("PKE_STIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_PKELAST.PKE_LOGID</code>.
     */
    public final TableField<CntPkelastRecord, Integer> PKE_LOGID = createField("PKE_LOGID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>CNT_PKELAST</code> table reference
     */
    public CntPkelast() {
        this(DSL.name("CNT_PKELAST"), null);
    }

    /**
     * Create an aliased <code>CNT_PKELAST</code> table reference
     */
    public CntPkelast(String alias) {
        this(DSL.name(alias), CNT_PKELAST);
    }

    /**
     * Create an aliased <code>CNT_PKELAST</code> table reference
     */
    public CntPkelast(Name alias) {
        this(alias, CNT_PKELAST);
    }

    private CntPkelast(Name alias, Table<CntPkelastRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntPkelast(Name alias, Table<CntPkelastRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntPkelast(Table<O> child, ForeignKey<O, CntPkelastRecord> key) {
        super(child, key, CNT_PKELAST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntPkelastRecord> getPrimaryKey() {
        return Keys.PK_CNT_PKELAST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntPkelastRecord>> getKeys() {
        return Arrays.<UniqueKey<CntPkelastRecord>>asList(Keys.PK_CNT_PKELAST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntPkelast as(String alias) {
        return new CntPkelast(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntPkelast as(Name alias) {
        return new CntPkelast(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntPkelast rename(String name) {
        return new CntPkelast(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntPkelast rename(Name name) {
        return new CntPkelast(name, null);
    }
}
