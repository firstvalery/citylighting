/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.GrdlSyncRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GrdlSync extends TableImpl<GrdlSyncRecord> {

    private static final long serialVersionUID = 796922338;

    /**
     * The reference instance of <code>GRDL_SYNC</code>
     */
    public static final GrdlSync GRDL_SYNC = new GrdlSync();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GrdlSyncRecord> getRecordType() {
        return GrdlSyncRecord.class;
    }

    /**
     * The column <code>GRDL_SYNC.GRDL_ZID</code>.
     */
    public final TableField<GrdlSyncRecord, Integer> GRDL_ZID = createField("GRDL_ZID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>GRDL_SYNC.GRDL_LAST_EXT_ID</code>.
     */
    public final TableField<GrdlSyncRecord, Integer> GRDL_LAST_EXT_ID = createField("GRDL_LAST_EXT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>GRDL_SYNC</code> table reference
     */
    public GrdlSync() {
        this(DSL.name("GRDL_SYNC"), null);
    }

    /**
     * Create an aliased <code>GRDL_SYNC</code> table reference
     */
    public GrdlSync(String alias) {
        this(DSL.name(alias), GRDL_SYNC);
    }

    /**
     * Create an aliased <code>GRDL_SYNC</code> table reference
     */
    public GrdlSync(Name alias) {
        this(alias, GRDL_SYNC);
    }

    private GrdlSync(Name alias, Table<GrdlSyncRecord> aliased) {
        this(alias, aliased, null);
    }

    private GrdlSync(Name alias, Table<GrdlSyncRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GrdlSync(Table<O> child, ForeignKey<O, GrdlSyncRecord> key) {
        super(child, key, GRDL_SYNC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GrdlSync as(String alias) {
        return new GrdlSync(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GrdlSync as(Name alias) {
        return new GrdlSync(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GrdlSync rename(String name) {
        return new GrdlSync(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GrdlSync rename(Name name) {
        return new GrdlSync(name, null);
    }
}
