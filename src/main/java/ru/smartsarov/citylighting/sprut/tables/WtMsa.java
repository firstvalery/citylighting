/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.WtMsaRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WtMsa extends TableImpl<WtMsaRecord> {

    private static final long serialVersionUID = 103023755;

    /**
     * The reference instance of <code>WT_MSA</code>
     */
    public static final WtMsa WT_MSA = new WtMsa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WtMsaRecord> getRecordType() {
        return WtMsaRecord.class;
    }

    /**
     * The column <code>WT_MSA.MSA_ID</code>.
     */
    public final TableField<WtMsaRecord, Integer> MSA_ID = createField("MSA_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>WT_MSA.MSA_MASTER_ID</code>.
     */
    public final TableField<WtMsaRecord, Integer> MSA_MASTER_ID = createField("MSA_MASTER_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>WT_MSA.MSA_SLAVE_ID</code>.
     */
    public final TableField<WtMsaRecord, Integer> MSA_SLAVE_ID = createField("MSA_SLAVE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>WT_MSA.MSA_ACCESS</code>.
     */
    public final TableField<WtMsaRecord, Integer> MSA_ACCESS = createField("MSA_ACCESS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>WT_MSA</code> table reference
     */
    public WtMsa() {
        this(DSL.name("WT_MSA"), null);
    }

    /**
     * Create an aliased <code>WT_MSA</code> table reference
     */
    public WtMsa(String alias) {
        this(DSL.name(alias), WT_MSA);
    }

    /**
     * Create an aliased <code>WT_MSA</code> table reference
     */
    public WtMsa(Name alias) {
        this(alias, WT_MSA);
    }

    private WtMsa(Name alias, Table<WtMsaRecord> aliased) {
        this(alias, aliased, null);
    }

    private WtMsa(Name alias, Table<WtMsaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> WtMsa(Table<O> child, ForeignKey<O, WtMsaRecord> key) {
        super(child, key, WT_MSA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<WtMsaRecord> getPrimaryKey() {
        return Keys.INTEG_146;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<WtMsaRecord>> getKeys() {
        return Arrays.<UniqueKey<WtMsaRecord>>asList(Keys.INTEG_146);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtMsa as(String alias) {
        return new WtMsa(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public WtMsa as(Name alias) {
        return new WtMsa(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WtMsa rename(String name) {
        return new WtMsa(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WtMsa rename(Name name) {
        return new WtMsa(name, null);
    }
}
