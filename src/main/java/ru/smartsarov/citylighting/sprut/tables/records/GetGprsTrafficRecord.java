/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.GetGprsTraffic;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetGprsTrafficRecord extends TableRecordImpl<GetGprsTrafficRecord> implements Record10<Date, Double, Double, Double, Double, Double, Double, Double, Double, Integer> {

    private static final long serialVersionUID = 1376872766;

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.LOG_DATE</code>.
     */
    public void setLogDate(Date value) {
        set(0, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.LOG_DATE</code>.
     */
    public Date getLogDate() {
        return (Date) get(0);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.GPRS_RX</code>.
     */
    public void setGprsRx(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.GPRS_RX</code>.
     */
    public Double getGprsRx() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.GPRS_TX</code>.
     */
    public void setGprsTx(Double value) {
        set(2, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.GPRS_TX</code>.
     */
    public Double getGprsTx() {
        return (Double) get(2);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.GPRS_TOTAL</code>.
     */
    public void setGprsTotal(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.GPRS_TOTAL</code>.
     */
    public Double getGprsTotal() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.PROX_TX_TCP</code>.
     */
    public void setProxTxTcp(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.PROX_TX_TCP</code>.
     */
    public Double getProxTxTcp() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.USK_RX_TCP</code>.
     */
    public void setUskRxTcp(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.USK_RX_TCP</code>.
     */
    public Double getUskRxTcp() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.PROX_RX_TCP</code>.
     */
    public void setProxRxTcp(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.PROX_RX_TCP</code>.
     */
    public Double getProxRxTcp() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.USK_TX_TCP</code>.
     */
    public void setUskTxTcp(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.USK_TX_TCP</code>.
     */
    public Double getUskTxTcp() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.SIGNAL_LEVEL</code>.
     */
    public void setSignalLevel(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.SIGNAL_LEVEL</code>.
     */
    public Double getSignalLevel() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>GET_GPRS_TRAFFIC.RESET_COUNT</code>.
     */
    public void setResetCount(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>GET_GPRS_TRAFFIC.RESET_COUNT</code>.
     */
    public Integer getResetCount() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Date, Double, Double, Double, Double, Double, Double, Double, Double, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Date, Double, Double, Double, Double, Double, Double, Double, Double, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field1() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.LOG_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.GPRS_RX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field3() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.GPRS_TX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.GPRS_TOTAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.PROX_TX_TCP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field6() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.USK_RX_TCP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field7() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.PROX_RX_TCP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.USK_TX_TCP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.SIGNAL_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return GetGprsTraffic.GET_GPRS_TRAFFIC.RESET_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component1() {
        return getLogDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component2() {
        return getGprsRx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component3() {
        return getGprsTx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component4() {
        return getGprsTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component5() {
        return getProxTxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component6() {
        return getUskRxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component7() {
        return getProxRxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getUskTxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getSignalLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component10() {
        return getResetCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value1() {
        return getLogDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getGprsRx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value3() {
        return getGprsTx();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getGprsTotal();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getProxTxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getUskRxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value7() {
        return getProxRxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getUskTxTcp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getSignalLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getResetCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value1(Date value) {
        setLogDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value2(Double value) {
        setGprsRx(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value3(Double value) {
        setGprsTx(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value4(Double value) {
        setGprsTotal(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value5(Double value) {
        setProxTxTcp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value6(Double value) {
        setUskRxTcp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value7(Double value) {
        setProxRxTcp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value8(Double value) {
        setUskTxTcp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value9(Double value) {
        setSignalLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord value10(Integer value) {
        setResetCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GetGprsTrafficRecord values(Date value1, Double value2, Double value3, Double value4, Double value5, Double value6, Double value7, Double value8, Double value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GetGprsTrafficRecord
     */
    public GetGprsTrafficRecord() {
        super(GetGprsTraffic.GET_GPRS_TRAFFIC);
    }

    /**
     * Create a detached, initialised GetGprsTrafficRecord
     */
    public GetGprsTrafficRecord(Date logDate, Double gprsRx, Double gprsTx, Double gprsTotal, Double proxTxTcp, Double uskRxTcp, Double proxRxTcp, Double uskTxTcp, Double signalLevel, Integer resetCount) {
        super(GetGprsTraffic.GET_GPRS_TRAFFIC);

        set(0, logDate);
        set(1, gprsRx);
        set(2, gprsTx);
        set(3, gprsTotal);
        set(4, proxTxTcp);
        set(5, uskRxTcp);
        set(6, proxRxTcp);
        set(7, uskTxTcp);
        set(8, signalLevel);
        set(9, resetCount);
    }
}
