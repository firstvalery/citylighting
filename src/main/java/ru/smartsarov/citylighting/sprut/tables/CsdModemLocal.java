/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CsdModemLocalRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CsdModemLocal extends TableImpl<CsdModemLocalRecord> {

    private static final long serialVersionUID = 1730770755;

    /**
     * The reference instance of <code>CSD_MODEM_LOCAL</code>
     */
    public static final CsdModemLocal CSD_MODEM_LOCAL = new CsdModemLocal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CsdModemLocalRecord> getRecordType() {
        return CsdModemLocalRecord.class;
    }

    /**
     * The column <code>CSD_MODEM_LOCAL.MODEM_ID</code>.
     */
    public final TableField<CsdModemLocalRecord, Integer> MODEM_ID = createField("MODEM_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.MDM_TYPE_ID</code>.
     */
    public final TableField<CsdModemLocalRecord, Integer> MDM_TYPE_ID = createField("MDM_TYPE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.COM_PORT</code>.
     */
    public final TableField<CsdModemLocalRecord, String> COM_PORT = createField("COM_PORT", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.COM_SPEED</code>.
     */
    public final TableField<CsdModemLocalRecord, Integer> COM_SPEED = createField("COM_SPEED", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.COM_DATA_BITS</code>.
     */
    public final TableField<CsdModemLocalRecord, Integer> COM_DATA_BITS = createField("COM_DATA_BITS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.COM_PARITY</code>.
     */
    public final TableField<CsdModemLocalRecord, String> COM_PARITY = createField("COM_PARITY", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.COM_STOP_BITS</code>.
     */
    public final TableField<CsdModemLocalRecord, Float> COM_STOP_BITS = createField("COM_STOP_BITS", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.AT_TIMEOUT</code>.
     */
    public final TableField<CsdModemLocalRecord, Short> AT_TIMEOUT = createField("AT_TIMEOUT", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.AT_MAX_RETRIES</code>.
     */
    public final TableField<CsdModemLocalRecord, Short> AT_MAX_RETRIES = createField("AT_MAX_RETRIES", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.DIAL_TIMEOUT</code>.
     */
    public final TableField<CsdModemLocalRecord, Short> DIAL_TIMEOUT = createField("DIAL_TIMEOUT", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.LINE_HOLD_TIME</code>.
     */
    public final TableField<CsdModemLocalRecord, Short> LINE_HOLD_TIME = createField("LINE_HOLD_TIME", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.ENABLED</code>.
     */
    public final TableField<CsdModemLocalRecord, Short> ENABLED = createField("ENABLED", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.PHONE</code>.
     */
    public final TableField<CsdModemLocalRecord, String> PHONE = createField("PHONE", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>CSD_MODEM_LOCAL.DESCRIPTION</code>.
     */
    public final TableField<CsdModemLocalRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>CSD_MODEM_LOCAL</code> table reference
     */
    public CsdModemLocal() {
        this(DSL.name("CSD_MODEM_LOCAL"), null);
    }

    /**
     * Create an aliased <code>CSD_MODEM_LOCAL</code> table reference
     */
    public CsdModemLocal(String alias) {
        this(DSL.name(alias), CSD_MODEM_LOCAL);
    }

    /**
     * Create an aliased <code>CSD_MODEM_LOCAL</code> table reference
     */
    public CsdModemLocal(Name alias) {
        this(alias, CSD_MODEM_LOCAL);
    }

    private CsdModemLocal(Name alias, Table<CsdModemLocalRecord> aliased) {
        this(alias, aliased, null);
    }

    private CsdModemLocal(Name alias, Table<CsdModemLocalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CsdModemLocal(Table<O> child, ForeignKey<O, CsdModemLocalRecord> key) {
        super(child, key, CSD_MODEM_LOCAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CsdModemLocalRecord> getPrimaryKey() {
        return Keys.PK_CSD_MODEM_LOCAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CsdModemLocalRecord>> getKeys() {
        return Arrays.<UniqueKey<CsdModemLocalRecord>>asList(Keys.PK_CSD_MODEM_LOCAL, Keys.UNIQ_CSD_MODEM_LOCAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CsdModemLocalRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CsdModemLocalRecord, ?>>asList(Keys.FK_CSD_MODEM_LOCAL);
    }

    public CsdModemLocalType csdModemLocalType() {
        return new CsdModemLocalType(this, Keys.FK_CSD_MODEM_LOCAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocal as(String alias) {
        return new CsdModemLocal(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CsdModemLocal as(Name alias) {
        return new CsdModemLocal(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CsdModemLocal rename(String name) {
        return new CsdModemLocal(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CsdModemLocal rename(Name name) {
        return new CsdModemLocal(name, null);
    }
}
