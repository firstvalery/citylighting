/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntExtValuesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntExtValues extends TableImpl<CntExtValuesRecord> {

    private static final long serialVersionUID = -1502269803;

    /**
     * The reference instance of <code>CNT_EXT_VALUES</code>
     */
    public static final CntExtValues CNT_EXT_VALUES = new CntExtValues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntExtValuesRecord> getRecordType() {
        return CntExtValuesRecord.class;
    }

    /**
     * The column <code>CNT_EXT_VALUES.CNT_ID</code>.
     */
    public final TableField<CntExtValuesRecord, Integer> CNT_ID = createField("CNT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_EXT_VALUES.PARAM_ID</code>.
     */
    public final TableField<CntExtValuesRecord, Integer> PARAM_ID = createField("PARAM_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_EXT_VALUES.PARAM_VALUE</code>.
     */
    public final TableField<CntExtValuesRecord, String> PARAM_VALUE = createField("PARAM_VALUE", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>CNT_EXT_VALUES</code> table reference
     */
    public CntExtValues() {
        this(DSL.name("CNT_EXT_VALUES"), null);
    }

    /**
     * Create an aliased <code>CNT_EXT_VALUES</code> table reference
     */
    public CntExtValues(String alias) {
        this(DSL.name(alias), CNT_EXT_VALUES);
    }

    /**
     * Create an aliased <code>CNT_EXT_VALUES</code> table reference
     */
    public CntExtValues(Name alias) {
        this(alias, CNT_EXT_VALUES);
    }

    private CntExtValues(Name alias, Table<CntExtValuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntExtValues(Name alias, Table<CntExtValuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntExtValues(Table<O> child, ForeignKey<O, CntExtValuesRecord> key) {
        super(child, key, CNT_EXT_VALUES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntExtValuesRecord> getPrimaryKey() {
        return Keys.CNT_EV_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntExtValuesRecord>> getKeys() {
        return Arrays.<UniqueKey<CntExtValuesRecord>>asList(Keys.CNT_EV_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntExtValues as(String alias) {
        return new CntExtValues(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntExtValues as(Name alias) {
        return new CntExtValues(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntExtValues rename(String name) {
        return new CntExtValues(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntExtValues rename(Name name) {
        return new CntExtValues(name, null);
    }
}
