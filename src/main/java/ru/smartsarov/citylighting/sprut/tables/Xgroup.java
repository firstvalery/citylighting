/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.XgroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Xgroup extends TableImpl<XgroupRecord> {

    private static final long serialVersionUID = -355190204;

    /**
     * The reference instance of <code>XGROUP</code>
     */
    public static final Xgroup XGROUP = new Xgroup();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<XgroupRecord> getRecordType() {
        return XgroupRecord.class;
    }

    /**
     * The column <code>XGROUP.GRP_ID</code>.
     */
    public final TableField<XgroupRecord, Integer> GRP_ID = createField("GRP_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>XGROUP.GRP_NAME</code>.
     */
    public final TableField<XgroupRecord, String> GRP_NAME = createField("GRP_NAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>XGROUP.GRP_DESCRIPTION</code>.
     */
    public final TableField<XgroupRecord, String> GRP_DESCRIPTION = createField("GRP_DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>XGROUP.GRP_TYPE</code>.
     */
    public final TableField<XgroupRecord, Integer> GRP_TYPE = createField("GRP_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>XGROUP.GRP_ACCESS</code>.
     */
    public final TableField<XgroupRecord, Integer> GRP_ACCESS = createField("GRP_ACCESS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>XGROUP.GRP_DB_UNAME</code>.
     */
    public final TableField<XgroupRecord, String> GRP_DB_UNAME = createField("GRP_DB_UNAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>XGROUP.GRP_DB_PASSWORD</code>.
     */
    public final TableField<XgroupRecord, byte[]> GRP_DB_PASSWORD = createField("GRP_DB_PASSWORD", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * Create a <code>XGROUP</code> table reference
     */
    public Xgroup() {
        this(DSL.name("XGROUP"), null);
    }

    /**
     * Create an aliased <code>XGROUP</code> table reference
     */
    public Xgroup(String alias) {
        this(DSL.name(alias), XGROUP);
    }

    /**
     * Create an aliased <code>XGROUP</code> table reference
     */
    public Xgroup(Name alias) {
        this(alias, XGROUP);
    }

    private Xgroup(Name alias, Table<XgroupRecord> aliased) {
        this(alias, aliased, null);
    }

    private Xgroup(Name alias, Table<XgroupRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Xgroup(Table<O> child, ForeignKey<O, XgroupRecord> key) {
        super(child, key, XGROUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<XgroupRecord> getPrimaryKey() {
        return Keys.INTEG_103;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<XgroupRecord>> getKeys() {
        return Arrays.<UniqueKey<XgroupRecord>>asList(Keys.INTEG_103);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Xgroup as(String alias) {
        return new Xgroup(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Xgroup as(Name alias) {
        return new Xgroup(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Xgroup rename(String name) {
        return new Xgroup(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Xgroup rename(Name name) {
        return new Xgroup(name, null);
    }
}
