/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntInfo extends TableImpl<CntInfoRecord> {

    private static final long serialVersionUID = 517008106;

    /**
     * The reference instance of <code>CNT_INFO</code>
     */
    public static final CntInfo CNT_INFO = new CntInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntInfoRecord> getRecordType() {
        return CntInfoRecord.class;
    }

    /**
     * The column <code>CNT_INFO.CNTI_CID</code>.
     */
    public final TableField<CntInfoRecord, Integer> CNTI_CID = createField("CNTI_CID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_INFO.CNTI_TS_NUM</code>.
     */
    public final TableField<CntInfoRecord, Integer> CNTI_TS_NUM = createField("CNTI_TS_NUM", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("default 0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>CNT_INFO.CNTI_TS</code>.
     */
    public final TableField<CntInfoRecord, Integer> CNTI_TS = createField("CNTI_TS", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("DEFAULT 0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>CNT_INFO.CNTI_MLOG_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Date> CNTI_MLOG_FIRST = createField("CNTI_MLOG_FIRST", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_MLOG_LAST</code>.
     */
    public final TableField<CntInfoRecord, Date> CNTI_MLOG_LAST = createField("CNTI_MLOG_LAST", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_DLOG_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Date> CNTI_DLOG_FIRST = createField("CNTI_DLOG_FIRST", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_DLOG_LAST</code>.
     */
    public final TableField<CntInfoRecord, Date> CNTI_DLOG_LAST = createField("CNTI_DLOG_LAST", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_CLOG_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_CLOG_FIRST = createField("CNTI_CLOG_FIRST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_CLOG_LAST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_CLOG_LAST = createField("CNTI_CLOG_LAST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_PLOG_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_PLOG_FIRST = createField("CNTI_PLOG_FIRST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_PLOG_LAST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_PLOG_LAST = createField("CNTI_PLOG_LAST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_PLOG_SIZE</code>.
     */
    public final TableField<CntInfoRecord, Integer> CNTI_PLOG_SIZE = createField("CNTI_PLOG_SIZE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_VERSION</code>.
     */
    public final TableField<CntInfoRecord, String> CNTI_VERSION = createField("CNTI_VERSION", org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>CNT_INFO.CNTI_CURR_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_CURR_FIRST = createField("CNTI_CURR_FIRST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_CURR_LAST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_CURR_LAST = createField("CNTI_CURR_LAST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_DI_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_DI_FIRST = createField("CNTI_DI_FIRST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_DI_LAST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_DI_LAST = createField("CNTI_DI_LAST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_MI_FIRST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_MI_FIRST = createField("CNTI_MI_FIRST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CNT_INFO.CNTI_MI_LAST</code>.
     */
    public final TableField<CntInfoRecord, Timestamp> CNTI_MI_LAST = createField("CNTI_MI_LAST", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>CNT_INFO</code> table reference
     */
    public CntInfo() {
        this(DSL.name("CNT_INFO"), null);
    }

    /**
     * Create an aliased <code>CNT_INFO</code> table reference
     */
    public CntInfo(String alias) {
        this(DSL.name(alias), CNT_INFO);
    }

    /**
     * Create an aliased <code>CNT_INFO</code> table reference
     */
    public CntInfo(Name alias) {
        this(alias, CNT_INFO);
    }

    private CntInfo(Name alias, Table<CntInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntInfo(Name alias, Table<CntInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntInfo(Table<O> child, ForeignKey<O, CntInfoRecord> key) {
        super(child, key, CNT_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntInfoRecord> getPrimaryKey() {
        return Keys.CNTI_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CntInfoRecord>>asList(Keys.CNTI_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CntInfoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CntInfoRecord, ?>>asList(Keys.CNT_LINK);
    }

    public Cnt cnt() {
        return new Cnt(this, Keys.CNT_LINK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntInfo as(String alias) {
        return new CntInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntInfo as(Name alias) {
        return new CntInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntInfo rename(String name) {
        return new CntInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntInfo rename(Name name) {
        return new CntInfo(name, null);
    }
}
