/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.TableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.Rdb$triggers;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rdb$triggersRecord extends TableRecordImpl<Rdb$triggersRecord> implements Record12<String, String, Short, Short, String, byte[], String, Short, Short, Short, Short, byte[]> {

    private static final long serialVersionUID = -1290565654;

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$TRIGGER_NAME</code>.
     */
    public void setRdb$triggerName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$TRIGGER_NAME</code>.
     */
    public String getRdb$triggerName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$RELATION_NAME</code>.
     */
    public void setRdb$relationName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$RELATION_NAME</code>.
     */
    public String getRdb$relationName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$TRIGGER_SEQUENCE</code>.
     */
    public void setRdb$triggerSequence(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$TRIGGER_SEQUENCE</code>.
     */
    public Short getRdb$triggerSequence() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$TRIGGER_TYPE</code>.
     */
    public void setRdb$triggerType(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$TRIGGER_TYPE</code>.
     */
    public Short getRdb$triggerType() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$TRIGGER_SOURCE</code>.
     */
    public void setRdb$triggerSource(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$TRIGGER_SOURCE</code>.
     */
    public String getRdb$triggerSource() {
        return (String) get(4);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$TRIGGER_BLR</code>.
     */
    public void setRdb$triggerBlr(byte... value) {
        set(5, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$TRIGGER_BLR</code>.
     */
    public byte[] getRdb$triggerBlr() {
        return (byte[]) get(5);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$DESCRIPTION</code>.
     */
    public void setRdb$description(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$DESCRIPTION</code>.
     */
    public String getRdb$description() {
        return (String) get(6);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$TRIGGER_INACTIVE</code>.
     */
    public void setRdb$triggerInactive(Short value) {
        set(7, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$TRIGGER_INACTIVE</code>.
     */
    public Short getRdb$triggerInactive() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$SYSTEM_FLAG</code>.
     */
    public void setRdb$systemFlag(Short value) {
        set(8, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$SYSTEM_FLAG</code>.
     */
    public Short getRdb$systemFlag() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$FLAGS</code>.
     */
    public void setRdb$flags(Short value) {
        set(9, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$FLAGS</code>.
     */
    public Short getRdb$flags() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$VALID_BLR</code>.
     */
    public void setRdb$validBlr(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$VALID_BLR</code>.
     */
    public Short getRdb$validBlr() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>RDB$TRIGGERS.RDB$DEBUG_INFO</code>.
     */
    public void setRdb$debugInfo(byte... value) {
        set(11, value);
    }

    /**
     * Getter for <code>RDB$TRIGGERS.RDB$DEBUG_INFO</code>.
     */
    public byte[] getRdb$debugInfo() {
        return (byte[]) get(11);
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<String, String, Short, Short, String, byte[], String, Short, Short, Short, Short, byte[]> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row12<String, String, Short, Short, String, byte[], String, Short, Short, Short, Short, byte[]> valuesRow() {
        return (Row12) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$TRIGGER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$RELATION_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$TRIGGER_SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$TRIGGER_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$TRIGGER_SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field6() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$TRIGGER_BLR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field8() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$TRIGGER_INACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field9() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$SYSTEM_FLAG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field10() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$FLAGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field11() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$VALID_BLR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field12() {
        return Rdb$triggers.RDB$TRIGGERS.RDB$DEBUG_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getRdb$triggerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getRdb$relationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getRdb$triggerSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getRdb$triggerType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getRdb$triggerSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component6() {
        return getRdb$triggerBlr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getRdb$description();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component8() {
        return getRdb$triggerInactive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component9() {
        return getRdb$systemFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component10() {
        return getRdb$flags();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component11() {
        return getRdb$validBlr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component12() {
        return getRdb$debugInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRdb$triggerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getRdb$relationName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getRdb$triggerSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getRdb$triggerType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getRdb$triggerSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value6() {
        return getRdb$triggerBlr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getRdb$description();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value8() {
        return getRdb$triggerInactive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value9() {
        return getRdb$systemFlag();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value10() {
        return getRdb$flags();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value11() {
        return getRdb$validBlr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value12() {
        return getRdb$debugInfo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value1(String value) {
        setRdb$triggerName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value2(String value) {
        setRdb$relationName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value3(Short value) {
        setRdb$triggerSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value4(Short value) {
        setRdb$triggerType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value5(String value) {
        setRdb$triggerSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value6(byte... value) {
        setRdb$triggerBlr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value7(String value) {
        setRdb$description(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value8(Short value) {
        setRdb$triggerInactive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value9(Short value) {
        setRdb$systemFlag(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value10(Short value) {
        setRdb$flags(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value11(Short value) {
        setRdb$validBlr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord value12(byte... value) {
        setRdb$debugInfo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rdb$triggersRecord values(String value1, String value2, Short value3, Short value4, String value5, byte[] value6, String value7, Short value8, Short value9, Short value10, Short value11, byte[] value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Rdb$triggersRecord
     */
    public Rdb$triggersRecord() {
        super(Rdb$triggers.RDB$TRIGGERS);
    }

    /**
     * Create a detached, initialised Rdb$triggersRecord
     */
    public Rdb$triggersRecord(String rdb$triggerName, String rdb$relationName, Short rdb$triggerSequence, Short rdb$triggerType, String rdb$triggerSource, byte[] rdb$triggerBlr, String rdb$description, Short rdb$triggerInactive, Short rdb$systemFlag, Short rdb$flags, Short rdb$validBlr, byte[] rdb$debugInfo) {
        super(Rdb$triggers.RDB$TRIGGERS);

        set(0, rdb$triggerName);
        set(1, rdb$relationName);
        set(2, rdb$triggerSequence);
        set(3, rdb$triggerType);
        set(4, rdb$triggerSource);
        set(5, rdb$triggerBlr);
        set(6, rdb$description);
        set(7, rdb$triggerInactive);
        set(8, rdb$systemFlag);
        set(9, rdb$flags);
        set(10, rdb$validBlr);
        set(11, rdb$debugInfo);
    }
}
