/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.UskCoorRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UskCoor extends TableImpl<UskCoorRecord> {

    private static final long serialVersionUID = 953873662;

    /**
     * The reference instance of <code>USK_COOR</code>
     */
    public static final UskCoor USK_COOR = new UskCoor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UskCoorRecord> getRecordType() {
        return UskCoorRecord.class;
    }

    /**
     * The column <code>USK_COOR.ID</code>.
     */
    public final TableField<UskCoorRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>USK_COOR.USK_ID</code>.
     */
    public final TableField<UskCoorRecord, Integer> USK_ID = createField("USK_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_COOR.FIGURE_ID</code>.
     */
    public final TableField<UskCoorRecord, Integer> FIGURE_ID = createField("FIGURE_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_COOR.INDEX_ID</code>.
     */
    public final TableField<UskCoorRecord, Integer> INDEX_ID = createField("INDEX_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USK_COOR.LON</code>.
     */
    public final TableField<UskCoorRecord, BigDecimal> LON = createField("LON", org.jooq.impl.SQLDataType.DECIMAL(13, 10), this, "");

    /**
     * The column <code>USK_COOR.LAT</code>.
     */
    public final TableField<UskCoorRecord, BigDecimal> LAT = createField("LAT", org.jooq.impl.SQLDataType.DECIMAL(13, 10), this, "");

    /**
     * The column <code>USK_COOR.REMOVED</code>.
     */
    public final TableField<UskCoorRecord, Integer> REMOVED = createField("REMOVED", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>USK_COOR</code> table reference
     */
    public UskCoor() {
        this(DSL.name("USK_COOR"), null);
    }

    /**
     * Create an aliased <code>USK_COOR</code> table reference
     */
    public UskCoor(String alias) {
        this(DSL.name(alias), USK_COOR);
    }

    /**
     * Create an aliased <code>USK_COOR</code> table reference
     */
    public UskCoor(Name alias) {
        this(alias, USK_COOR);
    }

    private UskCoor(Name alias, Table<UskCoorRecord> aliased) {
        this(alias, aliased, null);
    }

    private UskCoor(Name alias, Table<UskCoorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UskCoor(Table<O> child, ForeignKey<O, UskCoorRecord> key) {
        super(child, key, USK_COOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UskCoorRecord> getPrimaryKey() {
        return Keys.PK_USK_COOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UskCoorRecord>> getKeys() {
        return Arrays.<UniqueKey<UskCoorRecord>>asList(Keys.PK_USK_COOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UskCoor as(String alias) {
        return new UskCoor(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UskCoor as(Name alias) {
        return new UskCoor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UskCoor rename(String name) {
        return new UskCoor(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UskCoor rename(Name name) {
        return new UskCoor(name, null);
    }
}
