/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.ReportData;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportDataRecord extends UpdatableRecordImpl<ReportDataRecord> implements Record17<Integer, Integer, Integer, Integer, Timestamp, Timestamp, String, String, String, String, Long, byte[], Integer, Integer, String, Short, String> {

    private static final long serialVersionUID = 1819993778;

    /**
     * Setter for <code>REPORT_DATA.REPORT_ID</code>.
     */
    public void setReportId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_ID</code>.
     */
    public Integer getReportId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_PARENT_ID</code>.
     */
    public void setReportParentId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_PARENT_ID</code>.
     */
    public Integer getReportParentId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_VER</code>.
     */
    public void setReportVer(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_VER</code>.
     */
    public Integer getReportVer() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_PARENT_VER</code>.
     */
    public void setReportParentVer(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_PARENT_VER</code>.
     */
    public Integer getReportParentVer() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_CREATED</code>.
     */
    public void setReportCreated(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_CREATED</code>.
     */
    public Timestamp getReportCreated() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_EDITED</code>.
     */
    public void setReportEdited(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_EDITED</code>.
     */
    public Timestamp getReportEdited() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_NAME</code>.
     */
    public void setReportName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_NAME</code>.
     */
    public String getReportName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_DESC</code>.
     */
    public void setReportDesc(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_DESC</code>.
     */
    public String getReportDesc() {
        return (String) get(7);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_TYPE</code>.
     */
    public void setReportType(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_TYPE</code>.
     */
    public String getReportType() {
        return (String) get(8);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_DIALOG_TYPE</code>.
     */
    public void setReportDialogType(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_DIALOG_TYPE</code>.
     */
    public String getReportDialogType() {
        return (String) get(9);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_CRC</code>.
     */
    public void setReportCrc(Long value) {
        set(10, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_CRC</code>.
     */
    public Long getReportCrc() {
        return (Long) get(10);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_DATA</code>.
     */
    public void setReportData(byte... value) {
        set(11, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_DATA</code>.
     */
    public byte[] getReportData() {
        return (byte[]) get(11);
    }

    /**
     * Setter for <code>REPORT_DATA.AB_ID</code>.
     */
    public void setAbId(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>REPORT_DATA.AB_ID</code>.
     */
    public Integer getAbId() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>REPORT_DATA.ACCESS_TYPE</code>.
     */
    public void setAccessType(Integer value) {
        set(13, value);
    }

    /**
     * Getter for <code>REPORT_DATA.ACCESS_TYPE</code>.
     */
    public Integer getAccessType() {
        return (Integer) get(13);
    }

    /**
     * Setter for <code>REPORT_DATA.REPORT_FILTER_TYPES</code>.
     */
    public void setReportFilterTypes(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>REPORT_DATA.REPORT_FILTER_TYPES</code>.
     */
    public String getReportFilterTypes() {
        return (String) get(14);
    }

    /**
     * Setter for <code>REPORT_DATA.PROGTECH</code>.
     */
    public void setProgtech(Short value) {
        set(15, value);
    }

    /**
     * Getter for <code>REPORT_DATA.PROGTECH</code>.
     */
    public Short getProgtech() {
        return (Short) get(15);
    }

    /**
     * Setter for <code>REPORT_DATA.SUPPORTED_TYPES</code>.
     */
    public void setSupportedTypes(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>REPORT_DATA.SUPPORTED_TYPES</code>.
     */
    public String getSupportedTypes() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, Integer, Integer, Integer, Timestamp, Timestamp, String, String, String, String, Long, byte[], Integer, Integer, String, Short, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Integer, Integer, Integer, Integer, Timestamp, Timestamp, String, String, String, String, Long, byte[], Integer, Integer, String, Short, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ReportData.REPORT_DATA.REPORT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ReportData.REPORT_DATA.REPORT_PARENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ReportData.REPORT_DATA.REPORT_VER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return ReportData.REPORT_DATA.REPORT_PARENT_VER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return ReportData.REPORT_DATA.REPORT_CREATED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return ReportData.REPORT_DATA.REPORT_EDITED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ReportData.REPORT_DATA.REPORT_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ReportData.REPORT_DATA.REPORT_DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return ReportData.REPORT_DATA.REPORT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ReportData.REPORT_DATA.REPORT_DIALOG_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field11() {
        return ReportData.REPORT_DATA.REPORT_CRC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field12() {
        return ReportData.REPORT_DATA.REPORT_DATA_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return ReportData.REPORT_DATA.AB_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field14() {
        return ReportData.REPORT_DATA.ACCESS_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return ReportData.REPORT_DATA.REPORT_FILTER_TYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field16() {
        return ReportData.REPORT_DATA.PROGTECH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return ReportData.REPORT_DATA.SUPPORTED_TYPES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getReportId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getReportParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getReportVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getReportParentVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getReportCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getReportEdited();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getReportName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getReportDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getReportType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getReportDialogType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component11() {
        return getReportCrc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component12() {
        return getReportData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component13() {
        return getAbId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component14() {
        return getAccessType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component15() {
        return getReportFilterTypes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component16() {
        return getProgtech();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component17() {
        return getSupportedTypes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getReportId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getReportParentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getReportVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getReportParentVer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getReportCreated();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getReportEdited();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getReportName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getReportDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getReportType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getReportDialogType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value11() {
        return getReportCrc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value12() {
        return getReportData();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getAbId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value14() {
        return getAccessType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getReportFilterTypes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value16() {
        return getProgtech();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getSupportedTypes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value1(Integer value) {
        setReportId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value2(Integer value) {
        setReportParentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value3(Integer value) {
        setReportVer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value4(Integer value) {
        setReportParentVer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value5(Timestamp value) {
        setReportCreated(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value6(Timestamp value) {
        setReportEdited(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value7(String value) {
        setReportName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value8(String value) {
        setReportDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value9(String value) {
        setReportType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value10(String value) {
        setReportDialogType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value11(Long value) {
        setReportCrc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value12(byte... value) {
        setReportData(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value13(Integer value) {
        setAbId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value14(Integer value) {
        setAccessType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value15(String value) {
        setReportFilterTypes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value16(Short value) {
        setProgtech(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord value17(String value) {
        setSupportedTypes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportDataRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Timestamp value5, Timestamp value6, String value7, String value8, String value9, String value10, Long value11, byte[] value12, Integer value13, Integer value14, String value15, Short value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReportDataRecord
     */
    public ReportDataRecord() {
        super(ReportData.REPORT_DATA);
    }

    /**
     * Create a detached, initialised ReportDataRecord
     */
    public ReportDataRecord(Integer reportId, Integer reportParentId, Integer reportVer, Integer reportParentVer, Timestamp reportCreated, Timestamp reportEdited, String reportName, String reportDesc, String reportType, String reportDialogType, Long reportCrc, byte[] reportData, Integer abId, Integer accessType, String reportFilterTypes, Short progtech, String supportedTypes) {
        super(ReportData.REPORT_DATA);

        set(0, reportId);
        set(1, reportParentId);
        set(2, reportVer);
        set(3, reportParentVer);
        set(4, reportCreated);
        set(5, reportEdited);
        set(6, reportName);
        set(7, reportDesc);
        set(8, reportType);
        set(9, reportDialogType);
        set(10, reportCrc);
        set(11, reportData);
        set(12, abId);
        set(13, accessType);
        set(14, reportFilterTypes);
        set(15, progtech);
        set(16, supportedTypes);
    }
}
