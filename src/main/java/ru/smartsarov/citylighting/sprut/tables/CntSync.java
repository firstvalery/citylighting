/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.CntSyncRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntSync extends TableImpl<CntSyncRecord> {

    private static final long serialVersionUID = 1683368931;

    /**
     * The reference instance of <code>CNT_SYNC</code>
     */
    public static final CntSync CNT_SYNC = new CntSync();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntSyncRecord> getRecordType() {
        return CntSyncRecord.class;
    }

    /**
     * The column <code>CNT_SYNC.CNT_ID</code>.
     */
    public final TableField<CntSyncRecord, Integer> CNT_ID = createField("CNT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_SYNC.CNTB_TYPE</code>.
     */
    public final TableField<CntSyncRecord, Integer> CNTB_TYPE = createField("CNTB_TYPE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_SYNC.CNT_LAST_EXT_ID</code>.
     */
    public final TableField<CntSyncRecord, Integer> CNT_LAST_EXT_ID = createField("CNT_LAST_EXT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CNT_SYNC.CNT_LOG_SYNC</code>.
     */
    public final TableField<CntSyncRecord, Integer> CNT_LOG_SYNC = createField("CNT_LOG_SYNC", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>CNT_SYNC</code> table reference
     */
    public CntSync() {
        this(DSL.name("CNT_SYNC"), null);
    }

    /**
     * Create an aliased <code>CNT_SYNC</code> table reference
     */
    public CntSync(String alias) {
        this(DSL.name(alias), CNT_SYNC);
    }

    /**
     * Create an aliased <code>CNT_SYNC</code> table reference
     */
    public CntSync(Name alias) {
        this(alias, CNT_SYNC);
    }

    private CntSync(Name alias, Table<CntSyncRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntSync(Name alias, Table<CntSyncRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntSync(Table<O> child, ForeignKey<O, CntSyncRecord> key) {
        super(child, key, CNT_SYNC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntSync as(String alias) {
        return new CntSync(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntSync as(Name alias) {
        return new CntSync(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntSync rename(String name) {
        return new CntSync(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntSync rename(Name name) {
        return new CntSync(name, null);
    }
}
