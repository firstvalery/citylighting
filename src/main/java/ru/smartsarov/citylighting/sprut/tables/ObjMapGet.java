/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapGetRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ObjMapGet extends TableImpl<ObjMapGetRecord> {

    private static final long serialVersionUID = -488736314;

    /**
     * The reference instance of <code>OBJ_MAP_GET</code>
     */
    public static final ObjMapGet OBJ_MAP_GET = new ObjMapGet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ObjMapGetRecord> getRecordType() {
        return ObjMapGetRecord.class;
    }

    /**
     * The column <code>OBJ_MAP_GET.OBJ_ID</code>.
     */
    public final TableField<ObjMapGetRecord, Integer> OBJ_ID = createField("OBJ_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>OBJ_MAP_GET.OBJ_POS_X</code>.
     */
    public final TableField<ObjMapGetRecord, Double> OBJ_POS_X = createField("OBJ_POS_X", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>OBJ_MAP_GET.OBJ_POS_Y</code>.
     */
    public final TableField<ObjMapGetRecord, Double> OBJ_POS_Y = createField("OBJ_POS_Y", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>OBJ_MAP_GET.OBJ_POS_Z</code>.
     */
    public final TableField<ObjMapGetRecord, Double> OBJ_POS_Z = createField("OBJ_POS_Z", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>OBJ_MAP_GET.OBJ_PARAM</code>.
     */
    public final TableField<ObjMapGetRecord, String> OBJ_PARAM = createField("OBJ_PARAM", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * Create a <code>OBJ_MAP_GET</code> table reference
     */
    public ObjMapGet() {
        this(DSL.name("OBJ_MAP_GET"), null);
    }

    /**
     * Create an aliased <code>OBJ_MAP_GET</code> table reference
     */
    public ObjMapGet(String alias) {
        this(DSL.name(alias), OBJ_MAP_GET);
    }

    /**
     * Create an aliased <code>OBJ_MAP_GET</code> table reference
     */
    public ObjMapGet(Name alias) {
        this(alias, OBJ_MAP_GET);
    }

    private ObjMapGet(Name alias, Table<ObjMapGetRecord> aliased) {
        this(alias, aliased, new Field[2]);
    }

    private ObjMapGet(Name alias, Table<ObjMapGetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ObjMapGet(Table<O> child, ForeignKey<O, ObjMapGetRecord> key) {
        super(child, key, OBJ_MAP_GET);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ObjMapGet as(String alias) {
        return new ObjMapGet(DSL.name(alias), this, parameters);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ObjMapGet as(Name alias) {
        return new ObjMapGet(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public ObjMapGet rename(String name) {
        return new ObjMapGet(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public ObjMapGet rename(Name name) {
        return new ObjMapGet(name, null, parameters);
    }

    /**
     * Call this table-valued function
     */
    public ObjMapGet call(Integer inObjId, Integer inObjType) {
        return new ObjMapGet(DSL.name(getName()), null, new Field[] { 
              DSL.val(inObjId, org.jooq.impl.SQLDataType.INTEGER)
            , DSL.val(inObjType, org.jooq.impl.SQLDataType.INTEGER)
        });
    }

    /**
     * Call this table-valued function
     */
    public ObjMapGet call(Field<Integer> inObjId, Field<Integer> inObjType) {
        return new ObjMapGet(DSL.name(getName()), null, new Field[] { 
              inObjId
            , inObjType
        });
    }
}
