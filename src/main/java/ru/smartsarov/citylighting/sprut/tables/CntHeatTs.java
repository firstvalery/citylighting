/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.CntHeatTsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CntHeatTs extends TableImpl<CntHeatTsRecord> {

    private static final long serialVersionUID = -2051160883;

    /**
     * The reference instance of <code>CNT_HEAT_TS</code>
     */
    public static final CntHeatTs CNT_HEAT_TS = new CntHeatTs();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CntHeatTsRecord> getRecordType() {
        return CntHeatTsRecord.class;
    }

    /**
     * The column <code>CNT_HEAT_TS.ID</code>.
     */
    public final TableField<CntHeatTsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_HEAT_TS.CNT_ID</code>.
     */
    public final TableField<CntHeatTsRecord, Integer> CNT_ID = createField("CNT_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CNT_HEAT_TS.TS_NUM</code>.
     */
    public final TableField<CntHeatTsRecord, Integer> TS_NUM = createField("TS_NUM", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CNT_HEAT_TS.TS_ENABLED</code>.
     */
    public final TableField<CntHeatTsRecord, Integer> TS_ENABLED = createField("TS_ENABLED", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CNT_HEAT_TS.TS_NAME</code>.
     */
    public final TableField<CntHeatTsRecord, String> TS_NAME = createField("TS_NAME", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * Create a <code>CNT_HEAT_TS</code> table reference
     */
    public CntHeatTs() {
        this(DSL.name("CNT_HEAT_TS"), null);
    }

    /**
     * Create an aliased <code>CNT_HEAT_TS</code> table reference
     */
    public CntHeatTs(String alias) {
        this(DSL.name(alias), CNT_HEAT_TS);
    }

    /**
     * Create an aliased <code>CNT_HEAT_TS</code> table reference
     */
    public CntHeatTs(Name alias) {
        this(alias, CNT_HEAT_TS);
    }

    private CntHeatTs(Name alias, Table<CntHeatTsRecord> aliased) {
        this(alias, aliased, null);
    }

    private CntHeatTs(Name alias, Table<CntHeatTsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> CntHeatTs(Table<O> child, ForeignKey<O, CntHeatTsRecord> key) {
        super(child, key, CNT_HEAT_TS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CntHeatTsRecord> getPrimaryKey() {
        return Keys.INTEG_22;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CntHeatTsRecord>> getKeys() {
        return Arrays.<UniqueKey<CntHeatTsRecord>>asList(Keys.INTEG_22);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntHeatTs as(String alias) {
        return new CntHeatTs(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CntHeatTs as(Name alias) {
        return new CntHeatTs(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CntHeatTs rename(String name) {
        return new CntHeatTs(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CntHeatTs rename(Name name) {
        return new CntHeatTs(name, null);
    }
}
