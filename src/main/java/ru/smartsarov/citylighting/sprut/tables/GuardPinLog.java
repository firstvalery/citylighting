/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.GuardPinLogRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuardPinLog extends TableImpl<GuardPinLogRecord> {

    private static final long serialVersionUID = -1042658100;

    /**
     * The reference instance of <code>GUARD_PIN_LOG</code>
     */
    public static final GuardPinLog GUARD_PIN_LOG = new GuardPinLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuardPinLogRecord> getRecordType() {
        return GuardPinLogRecord.class;
    }

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_ID</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_ID = createField("GPLG_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_PIN_ID</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_PIN_ID = createField("GPLG_PIN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_TYPE</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_TYPE = createField("GPLG_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_AVALUE</code>.
     */
    public final TableField<GuardPinLogRecord, Double> GPLG_AVALUE = createField("GPLG_AVALUE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_DVALUE</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_DVALUE = createField("GPLG_DVALUE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_STATE</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_STATE = createField("GPLG_STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_LDATE</code>.
     */
    public final TableField<GuardPinLogRecord, Timestamp> GPLG_LDATE = createField("GPLG_LDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_SDATE</code>.
     */
    public final TableField<GuardPinLogRecord, Timestamp> GPLG_SDATE = createField("GPLG_SDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_USK_ID</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_USK_ID = createField("GPLG_USK_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_EVENT</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_EVENT = createField("GPLG_EVENT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_LOG.GPLG_ACTION</code>.
     */
    public final TableField<GuardPinLogRecord, Integer> GPLG_ACTION = createField("GPLG_ACTION", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>GUARD_PIN_LOG</code> table reference
     */
    public GuardPinLog() {
        this(DSL.name("GUARD_PIN_LOG"), null);
    }

    /**
     * Create an aliased <code>GUARD_PIN_LOG</code> table reference
     */
    public GuardPinLog(String alias) {
        this(DSL.name(alias), GUARD_PIN_LOG);
    }

    /**
     * Create an aliased <code>GUARD_PIN_LOG</code> table reference
     */
    public GuardPinLog(Name alias) {
        this(alias, GUARD_PIN_LOG);
    }

    private GuardPinLog(Name alias, Table<GuardPinLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private GuardPinLog(Name alias, Table<GuardPinLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GuardPinLog(Table<O> child, ForeignKey<O, GuardPinLogRecord> key) {
        super(child, key, GUARD_PIN_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GuardPinLogRecord> getPrimaryKey() {
        return Keys.INTEG_82;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GuardPinLogRecord>> getKeys() {
        return Arrays.<UniqueKey<GuardPinLogRecord>>asList(Keys.INTEG_82);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuardPinLog as(String alias) {
        return new GuardPinLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuardPinLog as(Name alias) {
        return new GuardPinLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GuardPinLog rename(String name) {
        return new GuardPinLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GuardPinLog rename(Name name) {
        return new GuardPinLog(name, null);
    }
}
