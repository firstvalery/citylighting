/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.citylighting.sprut.tables.ElementType;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ElementTypeRecord extends UpdatableRecordImpl<ElementTypeRecord> implements Record6<Integer, Integer, Integer, Short, String, String> {

    private static final long serialVersionUID = 1823341042;

    /**
     * Setter for <code>ELEMENT_TYPE.ETYPE</code>.
     */
    public void setEtype(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>ELEMENT_TYPE.ETYPE</code>.
     */
    public Integer getEtype() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ELEMENT_TYPE.ATYPE</code>.
     */
    public void setAtype(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>ELEMENT_TYPE.ATYPE</code>.
     */
    public Integer getAtype() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ELEMENT_TYPE.BTYPE</code>.
     */
    public void setBtype(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ELEMENT_TYPE.BTYPE</code>.
     */
    public Integer getBtype() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ELEMENT_TYPE.ENABLED</code>.
     */
    public void setEnabled(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>ELEMENT_TYPE.ENABLED</code>.
     */
    public Short getEnabled() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>ELEMENT_TYPE.NAME</code>.
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>ELEMENT_TYPE.NAME</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ELEMENT_TYPE.MEMO</code>.
     */
    public void setMemo(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>ELEMENT_TYPE.MEMO</code>.
     */
    public String getMemo() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<Integer, Integer, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Short, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, Integer, Integer, Short, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ElementType.ELEMENT_TYPE.ETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ElementType.ELEMENT_TYPE.ATYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ElementType.ELEMENT_TYPE.BTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return ElementType.ELEMENT_TYPE.ENABLED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return ElementType.ELEMENT_TYPE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ElementType.ELEMENT_TYPE.MEMO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getEtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getAtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getBtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component4() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getMemo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getAtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getBtype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMemo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord value1(Integer value) {
        setEtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord value2(Integer value) {
        setAtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord value3(Integer value) {
        setBtype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord value4(Short value) {
        setEnabled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord value5(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord value6(String value) {
        setMemo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ElementTypeRecord values(Integer value1, Integer value2, Integer value3, Short value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ElementTypeRecord
     */
    public ElementTypeRecord() {
        super(ElementType.ELEMENT_TYPE);
    }

    /**
     * Create a detached, initialised ElementTypeRecord
     */
    public ElementTypeRecord(Integer etype, Integer atype, Integer btype, Short enabled, String name, String memo) {
        super(ElementType.ELEMENT_TYPE);

        set(0, etype);
        set(1, atype);
        set(2, btype);
        set(3, enabled);
        set(4, name);
        set(5, memo);
    }
}
