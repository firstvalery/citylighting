/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.ChangesUskRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChangesUsk extends TableImpl<ChangesUskRecord> {

    private static final long serialVersionUID = 1465176050;

    /**
     * The reference instance of <code>CHANGES_USK</code>
     */
    public static final ChangesUsk CHANGES_USK = new ChangesUsk();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChangesUskRecord> getRecordType() {
        return ChangesUskRecord.class;
    }

    /**
     * The column <code>CHANGES_USK.ID</code>.
     */
    public final TableField<ChangesUskRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CHANGES_USK.LOGIN</code>.
     */
    public final TableField<ChangesUskRecord, String> LOGIN = createField("LOGIN", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>CHANGES_USK.CHANGE_TIME</code>.
     */
    public final TableField<ChangesUskRecord, Timestamp> CHANGE_TIME = createField("CHANGE_TIME", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CHANGES_USK.CHANGE_TYPE</code>.
     */
    public final TableField<ChangesUskRecord, Integer> CHANGE_TYPE = createField("CHANGE_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CHANGES_USK.USK_ID</code>.
     */
    public final TableField<ChangesUskRecord, Integer> USK_ID = createField("USK_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>CHANGES_USK.USK_AB_ID</code>.
     */
    public final TableField<ChangesUskRecord, Integer> USK_AB_ID = createField("USK_AB_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CHANGES_USK.USK_UID</code>.
     */
    public final TableField<ChangesUskRecord, Integer> USK_UID = createField("USK_UID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CHANGES_USK.USK_TYPE</code>.
     */
    public final TableField<ChangesUskRecord, Integer> USK_TYPE = createField("USK_TYPE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CHANGES_USK.USK_IP</code>.
     */
    public final TableField<ChangesUskRecord, String> USK_IP = createField("USK_IP", org.jooq.impl.SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>CHANGES_USK.USK_NAME</code>.
     */
    public final TableField<ChangesUskRecord, String> USK_NAME = createField("USK_NAME", org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>CHANGES_USK.USK_ADR_ID</code>.
     */
    public final TableField<ChangesUskRecord, Integer> USK_ADR_ID = createField("USK_ADR_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CHANGES_USK.USK_SDATE</code>.
     */
    public final TableField<ChangesUskRecord, Timestamp> USK_SDATE = createField("USK_SDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CHANGES_USK.USK_EDATE</code>.
     */
    public final TableField<ChangesUskRecord, Timestamp> USK_EDATE = createField("USK_EDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>CHANGES_USK.USK_SOST</code>.
     */
    public final TableField<ChangesUskRecord, Integer> USK_SOST = createField("USK_SOST", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>CHANGES_USK.USK_PASS2</code>.
     */
    public final TableField<ChangesUskRecord, String> USK_PASS2 = createField("USK_PASS2", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * Create a <code>CHANGES_USK</code> table reference
     */
    public ChangesUsk() {
        this(DSL.name("CHANGES_USK"), null);
    }

    /**
     * Create an aliased <code>CHANGES_USK</code> table reference
     */
    public ChangesUsk(String alias) {
        this(DSL.name(alias), CHANGES_USK);
    }

    /**
     * Create an aliased <code>CHANGES_USK</code> table reference
     */
    public ChangesUsk(Name alias) {
        this(alias, CHANGES_USK);
    }

    private ChangesUsk(Name alias, Table<ChangesUskRecord> aliased) {
        this(alias, aliased, null);
    }

    private ChangesUsk(Name alias, Table<ChangesUskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ChangesUsk(Table<O> child, ForeignKey<O, ChangesUskRecord> key) {
        super(child, key, CHANGES_USK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChangesUskRecord> getPrimaryKey() {
        return Keys.CHANGES_USK_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChangesUskRecord>> getKeys() {
        return Arrays.<UniqueKey<ChangesUskRecord>>asList(Keys.CHANGES_USK_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangesUsk as(String alias) {
        return new ChangesUsk(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChangesUsk as(Name alias) {
        return new ChangesUsk(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ChangesUsk rename(String name) {
        return new ChangesUsk(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ChangesUsk rename(Name name) {
        return new ChangesUsk(name, null);
    }
}
