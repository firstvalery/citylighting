/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.citylighting.sprut.DefaultSchema;
import ru.smartsarov.citylighting.sprut.Keys;
import ru.smartsarov.citylighting.sprut.tables.records.GuardPinCurrRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuardPinCurr extends TableImpl<GuardPinCurrRecord> {

    private static final long serialVersionUID = 1440949768;

    /**
     * The reference instance of <code>GUARD_PIN_CURR</code>
     */
    public static final GuardPinCurr GUARD_PIN_CURR = new GuardPinCurr();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GuardPinCurrRecord> getRecordType() {
        return GuardPinCurrRecord.class;
    }

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_PIN_ID</code>.
     */
    public final TableField<GuardPinCurrRecord, Integer> GPCR_PIN_ID = createField("GPCR_PIN_ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_AVALUE</code>.
     */
    public final TableField<GuardPinCurrRecord, Double> GPCR_AVALUE = createField("GPCR_AVALUE", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_DVALUE</code>.
     */
    public final TableField<GuardPinCurrRecord, Integer> GPCR_DVALUE = createField("GPCR_DVALUE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_STATE</code>.
     */
    public final TableField<GuardPinCurrRecord, Integer> GPCR_STATE = createField("GPCR_STATE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_SDATE</code>.
     */
    public final TableField<GuardPinCurrRecord, Timestamp> GPCR_SDATE = createField("GPCR_SDATE", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_EVENT</code>.
     */
    public final TableField<GuardPinCurrRecord, Integer> GPCR_EVENT = createField("GPCR_EVENT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>GUARD_PIN_CURR.GPCR_CHECKDVALUE</code>.
     */
    public final TableField<GuardPinCurrRecord, Integer> GPCR_CHECKDVALUE = createField("GPCR_CHECKDVALUE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>GUARD_PIN_CURR</code> table reference
     */
    public GuardPinCurr() {
        this(DSL.name("GUARD_PIN_CURR"), null);
    }

    /**
     * Create an aliased <code>GUARD_PIN_CURR</code> table reference
     */
    public GuardPinCurr(String alias) {
        this(DSL.name(alias), GUARD_PIN_CURR);
    }

    /**
     * Create an aliased <code>GUARD_PIN_CURR</code> table reference
     */
    public GuardPinCurr(Name alias) {
        this(alias, GUARD_PIN_CURR);
    }

    private GuardPinCurr(Name alias, Table<GuardPinCurrRecord> aliased) {
        this(alias, aliased, null);
    }

    private GuardPinCurr(Name alias, Table<GuardPinCurrRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GuardPinCurr(Table<O> child, ForeignKey<O, GuardPinCurrRecord> key) {
        super(child, key, GUARD_PIN_CURR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GuardPinCurrRecord> getPrimaryKey() {
        return Keys.INTEG_81;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GuardPinCurrRecord>> getKeys() {
        return Arrays.<UniqueKey<GuardPinCurrRecord>>asList(Keys.INTEG_81);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuardPinCurr as(String alias) {
        return new GuardPinCurr(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GuardPinCurr as(Name alias) {
        return new GuardPinCurr(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GuardPinCurr rename(String name) {
        return new GuardPinCurr(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GuardPinCurr rename(Name name) {
        return new GuardPinCurr(name, null);
    }
}
