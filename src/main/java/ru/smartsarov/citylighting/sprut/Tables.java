/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;

import ru.smartsarov.citylighting.sprut.tables.Abonent;
import ru.smartsarov.citylighting.sprut.tables.AbonentType;
import ru.smartsarov.citylighting.sprut.tables.Adress;
import ru.smartsarov.citylighting.sprut.tables.AiisAbnInfo;
import ru.smartsarov.citylighting.sprut.tables.CaptionField;
import ru.smartsarov.citylighting.sprut.tables.ChangesCnt;
import ru.smartsarov.citylighting.sprut.tables.ChangesGuardLine;
import ru.smartsarov.citylighting.sprut.tables.ChangesGuardPin;
import ru.smartsarov.citylighting.sprut.tables.ChangesGuardZone;
import ru.smartsarov.citylighting.sprut.tables.ChangesUsk;
import ru.smartsarov.citylighting.sprut.tables.CheckIp;
import ru.smartsarov.citylighting.sprut.tables.City;
import ru.smartsarov.citylighting.sprut.tables.CityType;
import ru.smartsarov.citylighting.sprut.tables.Cnt;
import ru.smartsarov.citylighting.sprut.tables.CntAlarm;
import ru.smartsarov.citylighting.sprut.tables.CntAlarmPar;
import ru.smartsarov.citylighting.sprut.tables.CntChange;
import ru.smartsarov.citylighting.sprut.tables.CntChannel;
import ru.smartsarov.citylighting.sprut.tables.CntChannelType;
import ru.smartsarov.citylighting.sprut.tables.CntControl;
import ru.smartsarov.citylighting.sprut.tables.CntEnergylog;
import ru.smartsarov.citylighting.sprut.tables.CntExtParam;
import ru.smartsarov.citylighting.sprut.tables.CntExtValues;
import ru.smartsarov.citylighting.sprut.tables.CntGroup;
import ru.smartsarov.citylighting.sprut.tables.CntGroupDepend;
import ru.smartsarov.citylighting.sprut.tables.CntHeatTs;
import ru.smartsarov.citylighting.sprut.tables.CntInfo;
import ru.smartsarov.citylighting.sprut.tables.CntLstate;
import ru.smartsarov.citylighting.sprut.tables.CntMc;
import ru.smartsarov.citylighting.sprut.tables.CntMo;
import ru.smartsarov.citylighting.sprut.tables.CntMoTypes;
import ru.smartsarov.citylighting.sprut.tables.CntModbusLink;
import ru.smartsarov.citylighting.sprut.tables.CntModbusType;
import ru.smartsarov.citylighting.sprut.tables.CntModbusValue;
import ru.smartsarov.citylighting.sprut.tables.CntMonth;
import ru.smartsarov.citylighting.sprut.tables.CntMrccurrvalue;
import ru.smartsarov.citylighting.sprut.tables.CntMrcenergylog;
import ru.smartsarov.citylighting.sprut.tables.CntMrcmaximumlog;
import ru.smartsarov.citylighting.sprut.tables.CntMrcpowerlog;
import ru.smartsarov.citylighting.sprut.tables.CntMrcvaluelog;
import ru.smartsarov.citylighting.sprut.tables.CntPhone;
import ru.smartsarov.citylighting.sprut.tables.CntPkeTmpJoined;
import ru.smartsarov.citylighting.sprut.tables.CntPkeinfo;
import ru.smartsarov.citylighting.sprut.tables.CntPkelast;
import ru.smartsarov.citylighting.sprut.tables.CntPkelog;
import ru.smartsarov.citylighting.sprut.tables.CntSync;
import ru.smartsarov.citylighting.sprut.tables.CntTableSync;
import ru.smartsarov.citylighting.sprut.tables.CntTariff;
import ru.smartsarov.citylighting.sprut.tables.CntUstate;
import ru.smartsarov.citylighting.sprut.tables.Cnta;
import ru.smartsarov.citylighting.sprut.tables.Cntb;
import ru.smartsarov.citylighting.sprut.tables.Cntl;
import ru.smartsarov.citylighting.sprut.tables.Cntv;
import ru.smartsarov.citylighting.sprut.tables.Config;
import ru.smartsarov.citylighting.sprut.tables.CsdModemLocal;
import ru.smartsarov.citylighting.sprut.tables.CsdModemLocalState;
import ru.smartsarov.citylighting.sprut.tables.CsdModemLocalType;
import ru.smartsarov.citylighting.sprut.tables.CsdModemUsk;
import ru.smartsarov.citylighting.sprut.tables.CsdModemUskState;
import ru.smartsarov.citylighting.sprut.tables.CsdSessionLog;
import ru.smartsarov.citylighting.sprut.tables.Dual;
import ru.smartsarov.citylighting.sprut.tables.EcntlDayly;
import ru.smartsarov.citylighting.sprut.tables.EcntlMonthly;
import ru.smartsarov.citylighting.sprut.tables.ElementLink;
import ru.smartsarov.citylighting.sprut.tables.ElementNotification;
import ru.smartsarov.citylighting.sprut.tables.ElementSlot;
import ru.smartsarov.citylighting.sprut.tables.ElementType;
import ru.smartsarov.citylighting.sprut.tables.Exmodule;
import ru.smartsarov.citylighting.sprut.tables.ExmoduleType;
import ru.smartsarov.citylighting.sprut.tables.Flat;
import ru.smartsarov.citylighting.sprut.tables.GetAdress;
import ru.smartsarov.citylighting.sprut.tables.GetAmrclog;
import ru.smartsarov.citylighting.sprut.tables.GetArchElctrImpls_15;
import ru.smartsarov.citylighting.sprut.tables.GetArchElctrIntel_15;
import ru.smartsarov.citylighting.sprut.tables.GetArchGasImpls_15;
import ru.smartsarov.citylighting.sprut.tables.GetArchWaterColdImpls_15;
import ru.smartsarov.citylighting.sprut.tables.GetArchWaterHotImpls_15;
import ru.smartsarov.citylighting.sprut.tables.GetCntChannel;
import ru.smartsarov.citylighting.sprut.tables.GetCntControl;
import ru.smartsarov.citylighting.sprut.tables.GetCntModbusRegisters;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_200;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_201;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_202;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_203;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_204;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_205;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_206;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_207;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_208;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_209;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_210;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_211;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_212;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_213;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_214;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_215;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_216;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_217;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_218;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_219;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_220;
import ru.smartsarov.citylighting.sprut.tables.GetCntc_299;
import ru.smartsarov.citylighting.sprut.tables.GetCntlForPeriod;
import ru.smartsarov.citylighting.sprut.tables.GetCntlOnCidDatetime;
import ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime;
import ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime_2;
import ru.smartsarov.citylighting.sprut.tables.GetCnttarch;
import ru.smartsarov.citylighting.sprut.tables.GetCnttcurr;
import ru.smartsarov.citylighting.sprut.tables.GetCnttcurrLook;
import ru.smartsarov.citylighting.sprut.tables.GetCnttcurrNew;
import ru.smartsarov.citylighting.sprut.tables.GetControlState;
import ru.smartsarov.citylighting.sprut.tables.GetGprsCurr;
import ru.smartsarov.citylighting.sprut.tables.GetGprsTraffic;
import ru.smartsarov.citylighting.sprut.tables.GetGrpType;
import ru.smartsarov.citylighting.sprut.tables.GetGuardLineCurr;
import ru.smartsarov.citylighting.sprut.tables.GetGuardLineLog;
import ru.smartsarov.citylighting.sprut.tables.GetGuardLogMonth;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurrOn;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr_2;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAll;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAllz;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogLastEvent;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect;
import ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect_1;
import ru.smartsarov.citylighting.sprut.tables.GetGuardUskLog;
import ru.smartsarov.citylighting.sprut.tables.GetGuardZoneLog;
import ru.smartsarov.citylighting.sprut.tables.GetIcntdl;
import ru.smartsarov.citylighting.sprut.tables.GetIcnthdl;
import ru.smartsarov.citylighting.sprut.tables.GetIcnthl;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseArchColdWater;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseArchElectro;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseArchHotWater;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseCntv;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvColdWater;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvElectro;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvGaz;
import ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvHotWater;
import ru.smartsarov.citylighting.sprut.tables.GetIntelligentArchElectro_15;
import ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectro;
import ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectroKoeff;
import ru.smartsarov.citylighting.sprut.tables.GetLedCurr;
import ru.smartsarov.citylighting.sprut.tables.GetMrclog;
import ru.smartsarov.citylighting.sprut.tables.GetMrcloglist;
import ru.smartsarov.citylighting.sprut.tables.GetMrcpwrlog;
import ru.smartsarov.citylighting.sprut.tables.GetOwenpr110Curr;
import ru.smartsarov.citylighting.sprut.tables.GetPcsId;
import ru.smartsarov.citylighting.sprut.tables.GetPkeLog;
import ru.smartsarov.citylighting.sprut.tables.GetPkeLogJoined;
import ru.smartsarov.citylighting.sprut.tables.GetPkeSums;
import ru.smartsarov.citylighting.sprut.tables.GetPkeTimes;
import ru.smartsarov.citylighting.sprut.tables.GetProcedureField;
import ru.smartsarov.citylighting.sprut.tables.GetTableField;
import ru.smartsarov.citylighting.sprut.tables.GetUska;
import ru.smartsarov.citylighting.sprut.tables.GetUskc;
import ru.smartsarov.citylighting.sprut.tables.GetUskcExt;
import ru.smartsarov.citylighting.sprut.tables.GetUsklLog;
import ru.smartsarov.citylighting.sprut.tables.GetUsklc;
import ru.smartsarov.citylighting.sprut.tables.GetUspduno;
import ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadNet;
import ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadState;
import ru.smartsarov.citylighting.sprut.tables.GetUspdunoExt;
import ru.smartsarov.citylighting.sprut.tables.GetXgrpType;
import ru.smartsarov.citylighting.sprut.tables.GetXinterfase;
import ru.smartsarov.citylighting.sprut.tables.GprsCurr;
import ru.smartsarov.citylighting.sprut.tables.GprsTelemetry;
import ru.smartsarov.citylighting.sprut.tables.GprsTraffic;
import ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport;
import ru.smartsarov.citylighting.sprut.tables.Graphics;
import ru.smartsarov.citylighting.sprut.tables.GraphicsPinManual;
import ru.smartsarov.citylighting.sprut.tables.GrdlChange;
import ru.smartsarov.citylighting.sprut.tables.GrdlSync;
import ru.smartsarov.citylighting.sprut.tables.GrdzChange;
import ru.smartsarov.citylighting.sprut.tables.GuardAlarmProcess;
import ru.smartsarov.citylighting.sprut.tables.GuardAtype;
import ru.smartsarov.citylighting.sprut.tables.GuardCam;
import ru.smartsarov.citylighting.sprut.tables.GuardCtype;
import ru.smartsarov.citylighting.sprut.tables.GuardEvent;
import ru.smartsarov.citylighting.sprut.tables.GuardExstate;
import ru.smartsarov.citylighting.sprut.tables.GuardGroup;
import ru.smartsarov.citylighting.sprut.tables.GuardInform;
import ru.smartsarov.citylighting.sprut.tables.GuardItype;
import ru.smartsarov.citylighting.sprut.tables.GuardKey;
import ru.smartsarov.citylighting.sprut.tables.GuardLine;
import ru.smartsarov.citylighting.sprut.tables.GuardLog;
import ru.smartsarov.citylighting.sprut.tables.GuardLsost;
import ru.smartsarov.citylighting.sprut.tables.GuardLstate;
import ru.smartsarov.citylighting.sprut.tables.GuardMail;
import ru.smartsarov.citylighting.sprut.tables.GuardPhone;
import ru.smartsarov.citylighting.sprut.tables.GuardPin;
import ru.smartsarov.citylighting.sprut.tables.GuardPinCurr;
import ru.smartsarov.citylighting.sprut.tables.GuardPinEventDesrc;
import ru.smartsarov.citylighting.sprut.tables.GuardPinLog;
import ru.smartsarov.citylighting.sprut.tables.GuardPinNetsost;
import ru.smartsarov.citylighting.sprut.tables.GuardPinStype;
import ru.smartsarov.citylighting.sprut.tables.GuardPindev;
import ru.smartsarov.citylighting.sprut.tables.GuardPintype;
import ru.smartsarov.citylighting.sprut.tables.GuardRelay;
import ru.smartsarov.citylighting.sprut.tables.GuardSms;
import ru.smartsarov.citylighting.sprut.tables.GuardSmsstat;
import ru.smartsarov.citylighting.sprut.tables.GuardSsost;
import ru.smartsarov.citylighting.sprut.tables.GuardUstate;
import ru.smartsarov.citylighting.sprut.tables.GuardValve;
import ru.smartsarov.citylighting.sprut.tables.GuardVtype;
import ru.smartsarov.citylighting.sprut.tables.GuardZone;
import ru.smartsarov.citylighting.sprut.tables.Home;
import ru.smartsarov.citylighting.sprut.tables.HomeType;
import ru.smartsarov.citylighting.sprut.tables.InsGuardLog;
import ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2;
import ru.smartsarov.citylighting.sprut.tables.InsXgroup;
import ru.smartsarov.citylighting.sprut.tables.InsXuser;
import ru.smartsarov.citylighting.sprut.tables.LedControlArch;
import ru.smartsarov.citylighting.sprut.tables.LedControlCurr;
import ru.smartsarov.citylighting.sprut.tables.LightAction;
import ru.smartsarov.citylighting.sprut.tables.LightBlock;
import ru.smartsarov.citylighting.sprut.tables.LightBox;
import ru.smartsarov.citylighting.sprut.tables.LightLine;
import ru.smartsarov.citylighting.sprut.tables.LightShedule;
import ru.smartsarov.citylighting.sprut.tables.LightShift;
import ru.smartsarov.citylighting.sprut.tables.ListHome;
import ru.smartsarov.citylighting.sprut.tables.ListStreet;
import ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro;
import ru.smartsarov.citylighting.sprut.tables.Mon$attachments;
import ru.smartsarov.citylighting.sprut.tables.Mon$callStack;
import ru.smartsarov.citylighting.sprut.tables.Mon$contextVariables;
import ru.smartsarov.citylighting.sprut.tables.Mon$database;
import ru.smartsarov.citylighting.sprut.tables.Mon$ioStats;
import ru.smartsarov.citylighting.sprut.tables.Mon$memoryUsage;
import ru.smartsarov.citylighting.sprut.tables.Mon$recordStats;
import ru.smartsarov.citylighting.sprut.tables.Mon$statements;
import ru.smartsarov.citylighting.sprut.tables.Mon$transactions;
import ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile;
import ru.smartsarov.citylighting.sprut.tables.Normative;
import ru.smartsarov.citylighting.sprut.tables.NormativeCntLink;
import ru.smartsarov.citylighting.sprut.tables.NormativeElctr;
import ru.smartsarov.citylighting.sprut.tables.NormativeGas;
import ru.smartsarov.citylighting.sprut.tables.NormativeHeat;
import ru.smartsarov.citylighting.sprut.tables.NormativeMeter;
import ru.smartsarov.citylighting.sprut.tables.NormativeWater;
import ru.smartsarov.citylighting.sprut.tables.ObjActionAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet;
import ru.smartsarov.citylighting.sprut.tables.ObjActionStateAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriod;
import ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriodAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjArchiveType;
import ru.smartsarov.citylighting.sprut.tables.ObjArchiveTypeAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjComment;
import ru.smartsarov.citylighting.sprut.tables.ObjControl;
import ru.smartsarov.citylighting.sprut.tables.ObjControlGet;
import ru.smartsarov.citylighting.sprut.tables.ObjControlLog;
import ru.smartsarov.citylighting.sprut.tables.ObjControlSet;
import ru.smartsarov.citylighting.sprut.tables.ObjMap;
import ru.smartsarov.citylighting.sprut.tables.ObjMapGet;
import ru.smartsarov.citylighting.sprut.tables.ObjMapSet;
import ru.smartsarov.citylighting.sprut.tables.ObjType;
import ru.smartsarov.citylighting.sprut.tables.PCdeType;
import ru.smartsarov.citylighting.sprut.tables.PCode;
import ru.smartsarov.citylighting.sprut.tables.PZone;
import ru.smartsarov.citylighting.sprut.tables.ParseCntList;
import ru.smartsarov.citylighting.sprut.tables.Persons;
import ru.smartsarov.citylighting.sprut.tables.Rdb$backupHistory;
import ru.smartsarov.citylighting.sprut.tables.Rdb$characterSets;
import ru.smartsarov.citylighting.sprut.tables.Rdb$checkConstraints;
import ru.smartsarov.citylighting.sprut.tables.Rdb$collations;
import ru.smartsarov.citylighting.sprut.tables.Rdb$database;
import ru.smartsarov.citylighting.sprut.tables.Rdb$dependencies;
import ru.smartsarov.citylighting.sprut.tables.Rdb$exceptions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$fieldDimensions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$fields;
import ru.smartsarov.citylighting.sprut.tables.Rdb$files;
import ru.smartsarov.citylighting.sprut.tables.Rdb$filters;
import ru.smartsarov.citylighting.sprut.tables.Rdb$formats;
import ru.smartsarov.citylighting.sprut.tables.Rdb$functionArguments;
import ru.smartsarov.citylighting.sprut.tables.Rdb$functions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$generators;
import ru.smartsarov.citylighting.sprut.tables.Rdb$indexSegments;
import ru.smartsarov.citylighting.sprut.tables.Rdb$indices;
import ru.smartsarov.citylighting.sprut.tables.Rdb$logFiles;
import ru.smartsarov.citylighting.sprut.tables.Rdb$pages;
import ru.smartsarov.citylighting.sprut.tables.Rdb$procedureParameters;
import ru.smartsarov.citylighting.sprut.tables.Rdb$procedures;
import ru.smartsarov.citylighting.sprut.tables.Rdb$refConstraints;
import ru.smartsarov.citylighting.sprut.tables.Rdb$relationConstraints;
import ru.smartsarov.citylighting.sprut.tables.Rdb$relationFields;
import ru.smartsarov.citylighting.sprut.tables.Rdb$relations;
import ru.smartsarov.citylighting.sprut.tables.Rdb$roles;
import ru.smartsarov.citylighting.sprut.tables.Rdb$securityClasses;
import ru.smartsarov.citylighting.sprut.tables.Rdb$transactions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$triggerMessages;
import ru.smartsarov.citylighting.sprut.tables.Rdb$triggers;
import ru.smartsarov.citylighting.sprut.tables.Rdb$types;
import ru.smartsarov.citylighting.sprut.tables.Rdb$userPrivileges;
import ru.smartsarov.citylighting.sprut.tables.Rdb$viewRelations;
import ru.smartsarov.citylighting.sprut.tables.Region;
import ru.smartsarov.citylighting.sprut.tables.RegionType;
import ru.smartsarov.citylighting.sprut.tables.Report;
import ru.smartsarov.citylighting.sprut.tables.ReportData;
import ru.smartsarov.citylighting.sprut.tables.ReportStruct;
import ru.smartsarov.citylighting.sprut.tables.ReportVar;
import ru.smartsarov.citylighting.sprut.tables.SecToText;
import ru.smartsarov.citylighting.sprut.tables.ServiceCur;
import ru.smartsarov.citylighting.sprut.tables.ServiceState;
import ru.smartsarov.citylighting.sprut.tables.SetCntControl;
import ru.smartsarov.citylighting.sprut.tables.SettingsGui;
import ru.smartsarov.citylighting.sprut.tables.Street;
import ru.smartsarov.citylighting.sprut.tables.StreetType;
import ru.smartsarov.citylighting.sprut.tables.UnoStates;
import ru.smartsarov.citylighting.sprut.tables.UpdXgroup;
import ru.smartsarov.citylighting.sprut.tables.Usk;
import ru.smartsarov.citylighting.sprut.tables.UskChange;
import ru.smartsarov.citylighting.sprut.tables.UskCoor;
import ru.smartsarov.citylighting.sprut.tables.UskCurr;
import ru.smartsarov.citylighting.sprut.tables.UskExtChange;
import ru.smartsarov.citylighting.sprut.tables.UskExtModule;
import ru.smartsarov.citylighting.sprut.tables.UskJournal;
import ru.smartsarov.citylighting.sprut.tables.UskLog;
import ru.smartsarov.citylighting.sprut.tables.UskSysEvent;
import ru.smartsarov.citylighting.sprut.tables.UskType;
import ru.smartsarov.citylighting.sprut.tables.UsklLog;
import ru.smartsarov.citylighting.sprut.tables.UsklShedule;
import ru.smartsarov.citylighting.sprut.tables.UsklSync;
import ru.smartsarov.citylighting.sprut.tables.UsklSysEventType;
import ru.smartsarov.citylighting.sprut.tables.Version;
import ru.smartsarov.citylighting.sprut.tables.ViewElectro;
import ru.smartsarov.citylighting.sprut.tables.WtAccess;
import ru.smartsarov.citylighting.sprut.tables.WtGroup;
import ru.smartsarov.citylighting.sprut.tables.WtMsa;
import ru.smartsarov.citylighting.sprut.tables.WtSchedule;
import ru.smartsarov.citylighting.sprut.tables.WtScheduleDepend;
import ru.smartsarov.citylighting.sprut.tables.WtUser;
import ru.smartsarov.citylighting.sprut.tables.Xgroup;
import ru.smartsarov.citylighting.sprut.tables.Xinterface;
import ru.smartsarov.citylighting.sprut.tables.Xrule;
import ru.smartsarov.citylighting.sprut.tables.Xuser;
import ru.smartsarov.citylighting.sprut.tables.records.CheckIpRecord;
import ru.smartsarov.citylighting.sprut.tables.records.DualRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetAdressRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetAmrclogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetArchElctrImpls_15Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetArchElctrIntel_15Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetArchGasImpls_15Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetArchWaterColdImpls_15Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetArchWaterHotImpls_15Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntChannelRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntControlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntModbusRegistersRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_200Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_201Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_202Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_203Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_204Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_205Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_206Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_207Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_208Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_209Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_210Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_211Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_212Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_213Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_214Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_215Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_216Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_217Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_218Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_219Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_220Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntc_299Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntlForPeriodRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntlOnCidDatetimeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntlOnDatetimeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCntlOnDatetime_2Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetCnttarchRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCnttcurrLookRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCnttcurrNewRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetCnttcurrRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetControlStateRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGprsCurrRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGprsTrafficRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGrpTypeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardLineCurrRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardLineLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardLogMonthRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinCurrOnRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinCurrRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinCurr_2Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinLastEventAllRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinLastEventAllzRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinLogLastEventRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinLogSelectRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardPinLogSelect_1Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardUskLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetGuardZoneLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetIcntdlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetIcnthdlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetIcnthlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseArchColdWaterRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseArchElectroRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseArchHotWaterRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseCntvColdWaterRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseCntvElectroRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseCntvGazRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseCntvHotWaterRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetImpulseCntvRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetIntelligentArchElectro_15Record;
import ru.smartsarov.citylighting.sprut.tables.records.GetIntelligentElectroKoeffRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetIntelligentElectroRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetLedCurrRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetMrclogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetMrcloglistRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetMrcpwrlogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetOwenpr110CurrRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetPcsIdRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetPkeLogJoinedRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetPkeLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetPkeSumsRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetPkeTimesRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetProcedureFieldRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetTableFieldRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUskaRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUskcExtRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUskcRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUsklLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUsklcRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUspdunoControlNoadNetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUspdunoControlNoadStateRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUspdunoExtRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetUspdunoRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetXgrpTypeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GetXinterfaseRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GprsTrafficReportRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsGuardLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsGuardLog_2Record;
import ru.smartsarov.citylighting.sprut.tables.records.InsXgroupRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsXuserRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ListHomeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ListStreetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.LookIntelligentElectroRecord;
import ru.smartsarov.citylighting.sprut.tables.records.MrcHourPwrProfileRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjActionAvailableGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlSetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapSetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ParseCntListRecord;
import ru.smartsarov.citylighting.sprut.tables.records.SecToTextRecord;
import ru.smartsarov.citylighting.sprut.tables.records.SetCntControlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.UpdXgroupRecord;


/**
 * Convenience access to all tables in 
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>ABONENT</code>.
     */
    public static final Abonent ABONENT = ru.smartsarov.citylighting.sprut.tables.Abonent.ABONENT;

    /**
     * The table <code>ABONENT_TYPE</code>.
     */
    public static final AbonentType ABONENT_TYPE = ru.smartsarov.citylighting.sprut.tables.AbonentType.ABONENT_TYPE;

    /**
     * The table <code>ADRESS</code>.
     */
    public static final Adress ADRESS = ru.smartsarov.citylighting.sprut.tables.Adress.ADRESS;

    /**
     * The table <code>AIIS_ABN_INFO</code>.
     */
    public static final AiisAbnInfo AIIS_ABN_INFO = ru.smartsarov.citylighting.sprut.tables.AiisAbnInfo.AIIS_ABN_INFO;

    /**
     * The table <code>CAPTION_FIELD</code>.
     */
    public static final CaptionField CAPTION_FIELD = ru.smartsarov.citylighting.sprut.tables.CaptionField.CAPTION_FIELD;

    /**
     * The table <code>CHANGES_CNT</code>.
     */
    public static final ChangesCnt CHANGES_CNT = ru.smartsarov.citylighting.sprut.tables.ChangesCnt.CHANGES_CNT;

    /**
     * The table <code>CHANGES_GUARD_LINE</code>.
     */
    public static final ChangesGuardLine CHANGES_GUARD_LINE = ru.smartsarov.citylighting.sprut.tables.ChangesGuardLine.CHANGES_GUARD_LINE;

    /**
     * The table <code>CHANGES_GUARD_PIN</code>.
     */
    public static final ChangesGuardPin CHANGES_GUARD_PIN = ru.smartsarov.citylighting.sprut.tables.ChangesGuardPin.CHANGES_GUARD_PIN;

    /**
     * The table <code>CHANGES_GUARD_ZONE</code>.
     */
    public static final ChangesGuardZone CHANGES_GUARD_ZONE = ru.smartsarov.citylighting.sprut.tables.ChangesGuardZone.CHANGES_GUARD_ZONE;

    /**
     * The table <code>CHANGES_USK</code>.
     */
    public static final ChangesUsk CHANGES_USK = ru.smartsarov.citylighting.sprut.tables.ChangesUsk.CHANGES_USK;

    /**
     * The table <code>CHECK_IP</code>.
     */
    public static final CheckIp CHECK_IP = ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP;

    /**
     * Call <code>CHECK_IP</code>.
     */
    public static Result<CheckIpRecord> CHECK_IP(Configuration configuration, String ip, Integer id, Timestamp fsdate, Timestamp fedate, Timestamp fndate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate)).fetch();
    }

    /**
     * Get <code>CHECK_IP</code> as a table.
     */
    public static CheckIp CHECK_IP(String ip, Integer id, Timestamp fsdate, Timestamp fedate, Timestamp fndate) {
        return ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate);
    }

    /**
     * Get <code>CHECK_IP</code> as a table.
     */
    public static CheckIp CHECK_IP(Field<String> ip, Field<Integer> id, Field<Timestamp> fsdate, Field<Timestamp> fedate, Field<Timestamp> fndate) {
        return ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate);
    }

    /**
     * The table <code>CITY</code>.
     */
    public static final City CITY = ru.smartsarov.citylighting.sprut.tables.City.CITY;

    /**
     * The table <code>CITY_TYPE</code>.
     */
    public static final CityType CITY_TYPE = ru.smartsarov.citylighting.sprut.tables.CityType.CITY_TYPE;

    /**
     * The table <code>CNT</code>.
     */
    public static final Cnt CNT = ru.smartsarov.citylighting.sprut.tables.Cnt.CNT;

    /**
     * The table <code>CNTA</code>.
     */
    public static final Cnta CNTA = ru.smartsarov.citylighting.sprut.tables.Cnta.CNTA;

    /**
     * The table <code>CNTB</code>.
     */
    public static final Cntb CNTB = ru.smartsarov.citylighting.sprut.tables.Cntb.CNTB;

    /**
     * The table <code>CNTL</code>.
     */
    public static final Cntl CNTL = ru.smartsarov.citylighting.sprut.tables.Cntl.CNTL;

    /**
     * The table <code>CNTV</code>.
     */
    public static final Cntv CNTV = ru.smartsarov.citylighting.sprut.tables.Cntv.CNTV;

    /**
     * The table <code>CNT_ALARM</code>.
     */
    public static final CntAlarm CNT_ALARM = ru.smartsarov.citylighting.sprut.tables.CntAlarm.CNT_ALARM;

    /**
     * The table <code>CNT_ALARM_PAR</code>.
     */
    public static final CntAlarmPar CNT_ALARM_PAR = ru.smartsarov.citylighting.sprut.tables.CntAlarmPar.CNT_ALARM_PAR;

    /**
     * The table <code>CNT_CHANGE</code>.
     */
    public static final CntChange CNT_CHANGE = ru.smartsarov.citylighting.sprut.tables.CntChange.CNT_CHANGE;

    /**
     * The table <code>CNT_CHANNEL</code>.
     */
    public static final CntChannel CNT_CHANNEL = ru.smartsarov.citylighting.sprut.tables.CntChannel.CNT_CHANNEL;

    /**
     * The table <code>CNT_CHANNEL_TYPE</code>.
     */
    public static final CntChannelType CNT_CHANNEL_TYPE = ru.smartsarov.citylighting.sprut.tables.CntChannelType.CNT_CHANNEL_TYPE;

    /**
     * The table <code>CNT_CONTROL</code>.
     */
    public static final CntControl CNT_CONTROL = ru.smartsarov.citylighting.sprut.tables.CntControl.CNT_CONTROL;

    /**
     * The table <code>CNT_ENERGYLOG</code>.
     */
    public static final CntEnergylog CNT_ENERGYLOG = ru.smartsarov.citylighting.sprut.tables.CntEnergylog.CNT_ENERGYLOG;

    /**
     * The table <code>CNT_EXT_PARAM</code>.
     */
    public static final CntExtParam CNT_EXT_PARAM = ru.smartsarov.citylighting.sprut.tables.CntExtParam.CNT_EXT_PARAM;

    /**
     * The table <code>CNT_EXT_VALUES</code>.
     */
    public static final CntExtValues CNT_EXT_VALUES = ru.smartsarov.citylighting.sprut.tables.CntExtValues.CNT_EXT_VALUES;

    /**
     * The table <code>CNT_GROUP</code>.
     */
    public static final CntGroup CNT_GROUP = ru.smartsarov.citylighting.sprut.tables.CntGroup.CNT_GROUP;

    /**
     * The table <code>CNT_GROUP_DEPEND</code>.
     */
    public static final CntGroupDepend CNT_GROUP_DEPEND = ru.smartsarov.citylighting.sprut.tables.CntGroupDepend.CNT_GROUP_DEPEND;

    /**
     * The table <code>CNT_HEAT_TS</code>.
     */
    public static final CntHeatTs CNT_HEAT_TS = ru.smartsarov.citylighting.sprut.tables.CntHeatTs.CNT_HEAT_TS;

    /**
     * The table <code>CNT_INFO</code>.
     */
    public static final CntInfo CNT_INFO = ru.smartsarov.citylighting.sprut.tables.CntInfo.CNT_INFO;

    /**
     * The table <code>CNT_LSTATE</code>.
     */
    public static final CntLstate CNT_LSTATE = ru.smartsarov.citylighting.sprut.tables.CntLstate.CNT_LSTATE;

    /**
     * The table <code>CNT_MC</code>.
     */
    public static final CntMc CNT_MC = ru.smartsarov.citylighting.sprut.tables.CntMc.CNT_MC;

    /**
     * The table <code>CNT_MO</code>.
     */
    public static final CntMo CNT_MO = ru.smartsarov.citylighting.sprut.tables.CntMo.CNT_MO;

    /**
     * The table <code>CNT_MODBUS_LINK</code>.
     */
    public static final CntModbusLink CNT_MODBUS_LINK = ru.smartsarov.citylighting.sprut.tables.CntModbusLink.CNT_MODBUS_LINK;

    /**
     * The table <code>CNT_MODBUS_TYPE</code>.
     */
    public static final CntModbusType CNT_MODBUS_TYPE = ru.smartsarov.citylighting.sprut.tables.CntModbusType.CNT_MODBUS_TYPE;

    /**
     * The table <code>CNT_MODBUS_VALUE</code>.
     */
    public static final CntModbusValue CNT_MODBUS_VALUE = ru.smartsarov.citylighting.sprut.tables.CntModbusValue.CNT_MODBUS_VALUE;

    /**
     * The table <code>CNT_MONTH</code>.
     */
    public static final CntMonth CNT_MONTH = ru.smartsarov.citylighting.sprut.tables.CntMonth.CNT_MONTH;

    /**
     * The table <code>CNT_MO_TYPES</code>.
     */
    public static final CntMoTypes CNT_MO_TYPES = ru.smartsarov.citylighting.sprut.tables.CntMoTypes.CNT_MO_TYPES;

    /**
     * The table <code>CNT_MRCCURRVALUE</code>.
     */
    public static final CntMrccurrvalue CNT_MRCCURRVALUE = ru.smartsarov.citylighting.sprut.tables.CntMrccurrvalue.CNT_MRCCURRVALUE;

    /**
     * The table <code>CNT_MRCENERGYLOG</code>.
     */
    public static final CntMrcenergylog CNT_MRCENERGYLOG = ru.smartsarov.citylighting.sprut.tables.CntMrcenergylog.CNT_MRCENERGYLOG;

    /**
     * The table <code>CNT_MRCMAXIMUMLOG</code>.
     */
    public static final CntMrcmaximumlog CNT_MRCMAXIMUMLOG = ru.smartsarov.citylighting.sprut.tables.CntMrcmaximumlog.CNT_MRCMAXIMUMLOG;

    /**
     * The table <code>CNT_MRCPOWERLOG</code>.
     */
    public static final CntMrcpowerlog CNT_MRCPOWERLOG = ru.smartsarov.citylighting.sprut.tables.CntMrcpowerlog.CNT_MRCPOWERLOG;

    /**
     * The table <code>CNT_MRCVALUELOG</code>.
     */
    public static final CntMrcvaluelog CNT_MRCVALUELOG = ru.smartsarov.citylighting.sprut.tables.CntMrcvaluelog.CNT_MRCVALUELOG;

    /**
     * The table <code>CNT_PHONE</code>.
     */
    public static final CntPhone CNT_PHONE = ru.smartsarov.citylighting.sprut.tables.CntPhone.CNT_PHONE;

    /**
     * The table <code>CNT_PKEINFO</code>.
     */
    public static final CntPkeinfo CNT_PKEINFO = ru.smartsarov.citylighting.sprut.tables.CntPkeinfo.CNT_PKEINFO;

    /**
     * The table <code>CNT_PKELAST</code>.
     */
    public static final CntPkelast CNT_PKELAST = ru.smartsarov.citylighting.sprut.tables.CntPkelast.CNT_PKELAST;

    /**
     * The table <code>CNT_PKELOG</code>.
     */
    public static final CntPkelog CNT_PKELOG = ru.smartsarov.citylighting.sprut.tables.CntPkelog.CNT_PKELOG;

    /**
     * The table <code>CNT_PKE_TMP_JOINED</code>.
     */
    public static final CntPkeTmpJoined CNT_PKE_TMP_JOINED = ru.smartsarov.citylighting.sprut.tables.CntPkeTmpJoined.CNT_PKE_TMP_JOINED;

    /**
     * The table <code>CNT_SYNC</code>.
     */
    public static final CntSync CNT_SYNC = ru.smartsarov.citylighting.sprut.tables.CntSync.CNT_SYNC;

    /**
     * The table <code>CNT_TABLE_SYNC</code>.
     */
    public static final CntTableSync CNT_TABLE_SYNC = ru.smartsarov.citylighting.sprut.tables.CntTableSync.CNT_TABLE_SYNC;

    /**
     * The table <code>CNT_TARIFF</code>.
     */
    public static final CntTariff CNT_TARIFF = ru.smartsarov.citylighting.sprut.tables.CntTariff.CNT_TARIFF;

    /**
     * The table <code>CNT_USTATE</code>.
     */
    public static final CntUstate CNT_USTATE = ru.smartsarov.citylighting.sprut.tables.CntUstate.CNT_USTATE;

    /**
     * The table <code>CONFIG</code>.
     */
    public static final Config CONFIG = ru.smartsarov.citylighting.sprut.tables.Config.CONFIG;

    /**
     * The table <code>CSD_MODEM_LOCAL</code>.
     */
    public static final CsdModemLocal CSD_MODEM_LOCAL = ru.smartsarov.citylighting.sprut.tables.CsdModemLocal.CSD_MODEM_LOCAL;

    /**
     * The table <code>CSD_MODEM_LOCAL_STATE</code>.
     */
    public static final CsdModemLocalState CSD_MODEM_LOCAL_STATE = ru.smartsarov.citylighting.sprut.tables.CsdModemLocalState.CSD_MODEM_LOCAL_STATE;

    /**
     * The table <code>CSD_MODEM_LOCAL_TYPE</code>.
     */
    public static final CsdModemLocalType CSD_MODEM_LOCAL_TYPE = ru.smartsarov.citylighting.sprut.tables.CsdModemLocalType.CSD_MODEM_LOCAL_TYPE;

    /**
     * The table <code>CSD_MODEM_USK</code>.
     */
    public static final CsdModemUsk CSD_MODEM_USK = ru.smartsarov.citylighting.sprut.tables.CsdModemUsk.CSD_MODEM_USK;

    /**
     * The table <code>CSD_MODEM_USK_STATE</code>.
     */
    public static final CsdModemUskState CSD_MODEM_USK_STATE = ru.smartsarov.citylighting.sprut.tables.CsdModemUskState.CSD_MODEM_USK_STATE;

    /**
     * The table <code>CSD_SESSION_LOG</code>.
     */
    public static final CsdSessionLog CSD_SESSION_LOG = ru.smartsarov.citylighting.sprut.tables.CsdSessionLog.CSD_SESSION_LOG;

    /**
     * The table <code>DUAL</code>.
     */
    public static final Dual DUAL = ru.smartsarov.citylighting.sprut.tables.Dual.DUAL;

    /**
     * Call <code>DUAL</code>.
     */
    public static Result<DualRecord> DUAL(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.Dual.DUAL.call()).fetch();
    }

    /**
     * Get <code>DUAL</code> as a table.
     */
    public static Dual DUAL() {
        return ru.smartsarov.citylighting.sprut.tables.Dual.DUAL.call();
    }

    /**
     * The table <code>ECNTL_DAYLY</code>.
     */
    public static final EcntlDayly ECNTL_DAYLY = ru.smartsarov.citylighting.sprut.tables.EcntlDayly.ECNTL_DAYLY;

    /**
     * The table <code>ECNTL_MONTHLY</code>.
     */
    public static final EcntlMonthly ECNTL_MONTHLY = ru.smartsarov.citylighting.sprut.tables.EcntlMonthly.ECNTL_MONTHLY;

    /**
     * The table <code>ELEMENT_LINK</code>.
     */
    public static final ElementLink ELEMENT_LINK = ru.smartsarov.citylighting.sprut.tables.ElementLink.ELEMENT_LINK;

    /**
     * The table <code>ELEMENT_NOTIFICATION</code>.
     */
    public static final ElementNotification ELEMENT_NOTIFICATION = ru.smartsarov.citylighting.sprut.tables.ElementNotification.ELEMENT_NOTIFICATION;

    /**
     * The table <code>ELEMENT_SLOT</code>.
     */
    public static final ElementSlot ELEMENT_SLOT = ru.smartsarov.citylighting.sprut.tables.ElementSlot.ELEMENT_SLOT;

    /**
     * The table <code>ELEMENT_TYPE</code>.
     */
    public static final ElementType ELEMENT_TYPE = ru.smartsarov.citylighting.sprut.tables.ElementType.ELEMENT_TYPE;

    /**
     * The table <code>EXMODULE</code>.
     */
    public static final Exmodule EXMODULE = ru.smartsarov.citylighting.sprut.tables.Exmodule.EXMODULE;

    /**
     * The table <code>EXMODULE_TYPE</code>.
     */
    public static final ExmoduleType EXMODULE_TYPE = ru.smartsarov.citylighting.sprut.tables.ExmoduleType.EXMODULE_TYPE;

    /**
     * The table <code>FLAT</code>.
     */
    public static final Flat FLAT = ru.smartsarov.citylighting.sprut.tables.Flat.FLAT;

    /**
     * The table <code>GET_ADRESS</code>.
     */
    public static final GetAdress GET_ADRESS = ru.smartsarov.citylighting.sprut.tables.GetAdress.GET_ADRESS;

    /**
     * Call <code>GET_ADRESS</code>.
     */
    public static Result<GetAdressRecord> GET_ADRESS(Configuration configuration, Integer adrId, Integer adrType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetAdress.GET_ADRESS.call(adrId, adrType)).fetch();
    }

    /**
     * Get <code>GET_ADRESS</code> as a table.
     */
    public static GetAdress GET_ADRESS(Integer adrId, Integer adrType) {
        return ru.smartsarov.citylighting.sprut.tables.GetAdress.GET_ADRESS.call(adrId, adrType);
    }

    /**
     * Get <code>GET_ADRESS</code> as a table.
     */
    public static GetAdress GET_ADRESS(Field<Integer> adrId, Field<Integer> adrType) {
        return ru.smartsarov.citylighting.sprut.tables.GetAdress.GET_ADRESS.call(adrId, adrType);
    }

    /**
     * The table <code>GET_AMRCLOG</code>.
     */
    public static final GetAmrclog GET_AMRCLOG = ru.smartsarov.citylighting.sprut.tables.GetAmrclog.GET_AMRCLOG;

    /**
     * Call <code>GET_AMRCLOG</code>.
     */
    public static Result<GetAmrclogRecord> GET_AMRCLOG(Configuration configuration, Integer aid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetAmrclog.GET_AMRCLOG.call(aid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_AMRCLOG</code> as a table.
     */
    public static GetAmrclog GET_AMRCLOG(Integer aid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetAmrclog.GET_AMRCLOG.call(aid, sdate, edate);
    }

    /**
     * Get <code>GET_AMRCLOG</code> as a table.
     */
    public static GetAmrclog GET_AMRCLOG(Field<Integer> aid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetAmrclog.GET_AMRCLOG.call(aid, sdate, edate);
    }

    /**
     * The table <code>GET_ARCH_ELCTR_IMPLS_15</code>.
     */
    public static final GetArchElctrImpls_15 GET_ARCH_ELCTR_IMPLS_15 = ru.smartsarov.citylighting.sprut.tables.GetArchElctrImpls_15.GET_ARCH_ELCTR_IMPLS_15;

    /**
     * Call <code>GET_ARCH_ELCTR_IMPLS_15</code>.
     */
    public static Result<GetArchElctrImpls_15Record> GET_ARCH_ELCTR_IMPLS_15(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate, Integer transConsider) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetArchElctrImpls_15.GET_ARCH_ELCTR_IMPLS_15.call(login, pass, cid, fromDate, toDate, transConsider)).fetch();
    }

    /**
     * Get <code>GET_ARCH_ELCTR_IMPLS_15</code> as a table.
     */
    public static GetArchElctrImpls_15 GET_ARCH_ELCTR_IMPLS_15(String login, String pass, Integer cid, Date fromDate, Date toDate, Integer transConsider) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchElctrImpls_15.GET_ARCH_ELCTR_IMPLS_15.call(login, pass, cid, fromDate, toDate, transConsider);
    }

    /**
     * Get <code>GET_ARCH_ELCTR_IMPLS_15</code> as a table.
     */
    public static GetArchElctrImpls_15 GET_ARCH_ELCTR_IMPLS_15(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate, Field<Integer> transConsider) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchElctrImpls_15.GET_ARCH_ELCTR_IMPLS_15.call(login, pass, cid, fromDate, toDate, transConsider);
    }

    /**
     * The table <code>GET_ARCH_ELCTR_INTEL_15</code>.
     */
    public static final GetArchElctrIntel_15 GET_ARCH_ELCTR_INTEL_15 = ru.smartsarov.citylighting.sprut.tables.GetArchElctrIntel_15.GET_ARCH_ELCTR_INTEL_15;

    /**
     * Call <code>GET_ARCH_ELCTR_INTEL_15</code>.
     */
    public static Result<GetArchElctrIntel_15Record> GET_ARCH_ELCTR_INTEL_15(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate, Integer transConsider) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetArchElctrIntel_15.GET_ARCH_ELCTR_INTEL_15.call(login, pass, cid, fromDate, toDate, transConsider)).fetch();
    }

    /**
     * Get <code>GET_ARCH_ELCTR_INTEL_15</code> as a table.
     */
    public static GetArchElctrIntel_15 GET_ARCH_ELCTR_INTEL_15(String login, String pass, Integer cid, Date fromDate, Date toDate, Integer transConsider) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchElctrIntel_15.GET_ARCH_ELCTR_INTEL_15.call(login, pass, cid, fromDate, toDate, transConsider);
    }

    /**
     * Get <code>GET_ARCH_ELCTR_INTEL_15</code> as a table.
     */
    public static GetArchElctrIntel_15 GET_ARCH_ELCTR_INTEL_15(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate, Field<Integer> transConsider) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchElctrIntel_15.GET_ARCH_ELCTR_INTEL_15.call(login, pass, cid, fromDate, toDate, transConsider);
    }

    /**
     * The table <code>GET_ARCH_GAS_IMPLS_15</code>.
     */
    public static final GetArchGasImpls_15 GET_ARCH_GAS_IMPLS_15 = ru.smartsarov.citylighting.sprut.tables.GetArchGasImpls_15.GET_ARCH_GAS_IMPLS_15;

    /**
     * Call <code>GET_ARCH_GAS_IMPLS_15</code>.
     */
    public static Result<GetArchGasImpls_15Record> GET_ARCH_GAS_IMPLS_15(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetArchGasImpls_15.GET_ARCH_GAS_IMPLS_15.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_ARCH_GAS_IMPLS_15</code> as a table.
     */
    public static GetArchGasImpls_15 GET_ARCH_GAS_IMPLS_15(String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchGasImpls_15.GET_ARCH_GAS_IMPLS_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_ARCH_GAS_IMPLS_15</code> as a table.
     */
    public static GetArchGasImpls_15 GET_ARCH_GAS_IMPLS_15(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchGasImpls_15.GET_ARCH_GAS_IMPLS_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_ARCH_WATER_COLD_IMPLS_15</code>.
     */
    public static final GetArchWaterColdImpls_15 GET_ARCH_WATER_COLD_IMPLS_15 = ru.smartsarov.citylighting.sprut.tables.GetArchWaterColdImpls_15.GET_ARCH_WATER_COLD_IMPLS_15;

    /**
     * Call <code>GET_ARCH_WATER_COLD_IMPLS_15</code>.
     */
    public static Result<GetArchWaterColdImpls_15Record> GET_ARCH_WATER_COLD_IMPLS_15(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetArchWaterColdImpls_15.GET_ARCH_WATER_COLD_IMPLS_15.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_ARCH_WATER_COLD_IMPLS_15</code> as a table.
     */
    public static GetArchWaterColdImpls_15 GET_ARCH_WATER_COLD_IMPLS_15(String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchWaterColdImpls_15.GET_ARCH_WATER_COLD_IMPLS_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_ARCH_WATER_COLD_IMPLS_15</code> as a table.
     */
    public static GetArchWaterColdImpls_15 GET_ARCH_WATER_COLD_IMPLS_15(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchWaterColdImpls_15.GET_ARCH_WATER_COLD_IMPLS_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_ARCH_WATER_HOT_IMPLS_15</code>.
     */
    public static final GetArchWaterHotImpls_15 GET_ARCH_WATER_HOT_IMPLS_15 = ru.smartsarov.citylighting.sprut.tables.GetArchWaterHotImpls_15.GET_ARCH_WATER_HOT_IMPLS_15;

    /**
     * Call <code>GET_ARCH_WATER_HOT_IMPLS_15</code>.
     */
    public static Result<GetArchWaterHotImpls_15Record> GET_ARCH_WATER_HOT_IMPLS_15(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetArchWaterHotImpls_15.GET_ARCH_WATER_HOT_IMPLS_15.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_ARCH_WATER_HOT_IMPLS_15</code> as a table.
     */
    public static GetArchWaterHotImpls_15 GET_ARCH_WATER_HOT_IMPLS_15(String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchWaterHotImpls_15.GET_ARCH_WATER_HOT_IMPLS_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_ARCH_WATER_HOT_IMPLS_15</code> as a table.
     */
    public static GetArchWaterHotImpls_15 GET_ARCH_WATER_HOT_IMPLS_15(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetArchWaterHotImpls_15.GET_ARCH_WATER_HOT_IMPLS_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_CNTC_200</code>.
     */
    public static final GetCntc_200 GET_CNTC_200 = ru.smartsarov.citylighting.sprut.tables.GetCntc_200.GET_CNTC_200;

    /**
     * Call <code>GET_CNTC_200</code>.
     */
    public static Result<GetCntc_200Record> GET_CNTC_200(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_200.GET_CNTC_200.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_200</code> as a table.
     */
    public static GetCntc_200 GET_CNTC_200() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_200.GET_CNTC_200.call();
    }

    /**
     * The table <code>GET_CNTC_201</code>.
     */
    public static final GetCntc_201 GET_CNTC_201 = ru.smartsarov.citylighting.sprut.tables.GetCntc_201.GET_CNTC_201;

    /**
     * Call <code>GET_CNTC_201</code>.
     */
    public static Result<GetCntc_201Record> GET_CNTC_201(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_201.GET_CNTC_201.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_201</code> as a table.
     */
    public static GetCntc_201 GET_CNTC_201() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_201.GET_CNTC_201.call();
    }

    /**
     * The table <code>GET_CNTC_202</code>.
     */
    public static final GetCntc_202 GET_CNTC_202 = ru.smartsarov.citylighting.sprut.tables.GetCntc_202.GET_CNTC_202;

    /**
     * Call <code>GET_CNTC_202</code>.
     */
    public static Result<GetCntc_202Record> GET_CNTC_202(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_202.GET_CNTC_202.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_202</code> as a table.
     */
    public static GetCntc_202 GET_CNTC_202() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_202.GET_CNTC_202.call();
    }

    /**
     * The table <code>GET_CNTC_203</code>.
     */
    public static final GetCntc_203 GET_CNTC_203 = ru.smartsarov.citylighting.sprut.tables.GetCntc_203.GET_CNTC_203;

    /**
     * Call <code>GET_CNTC_203</code>.
     */
    public static Result<GetCntc_203Record> GET_CNTC_203(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_203.GET_CNTC_203.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_203</code> as a table.
     */
    public static GetCntc_203 GET_CNTC_203() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_203.GET_CNTC_203.call();
    }

    /**
     * The table <code>GET_CNTC_204</code>.
     */
    public static final GetCntc_204 GET_CNTC_204 = ru.smartsarov.citylighting.sprut.tables.GetCntc_204.GET_CNTC_204;

    /**
     * Call <code>GET_CNTC_204</code>.
     */
    public static Result<GetCntc_204Record> GET_CNTC_204(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_204.GET_CNTC_204.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_204</code> as a table.
     */
    public static GetCntc_204 GET_CNTC_204() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_204.GET_CNTC_204.call();
    }

    /**
     * The table <code>GET_CNTC_205</code>.
     */
    public static final GetCntc_205 GET_CNTC_205 = ru.smartsarov.citylighting.sprut.tables.GetCntc_205.GET_CNTC_205;

    /**
     * Call <code>GET_CNTC_205</code>.
     */
    public static Result<GetCntc_205Record> GET_CNTC_205(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_205.GET_CNTC_205.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_205</code> as a table.
     */
    public static GetCntc_205 GET_CNTC_205() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_205.GET_CNTC_205.call();
    }

    /**
     * The table <code>GET_CNTC_206</code>.
     */
    public static final GetCntc_206 GET_CNTC_206 = ru.smartsarov.citylighting.sprut.tables.GetCntc_206.GET_CNTC_206;

    /**
     * Call <code>GET_CNTC_206</code>.
     */
    public static Result<GetCntc_206Record> GET_CNTC_206(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_206.GET_CNTC_206.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_206</code> as a table.
     */
    public static GetCntc_206 GET_CNTC_206() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_206.GET_CNTC_206.call();
    }

    /**
     * The table <code>GET_CNTC_207</code>.
     */
    public static final GetCntc_207 GET_CNTC_207 = ru.smartsarov.citylighting.sprut.tables.GetCntc_207.GET_CNTC_207;

    /**
     * Call <code>GET_CNTC_207</code>.
     */
    public static Result<GetCntc_207Record> GET_CNTC_207(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_207.GET_CNTC_207.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_207</code> as a table.
     */
    public static GetCntc_207 GET_CNTC_207() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_207.GET_CNTC_207.call();
    }

    /**
     * The table <code>GET_CNTC_208</code>.
     */
    public static final GetCntc_208 GET_CNTC_208 = ru.smartsarov.citylighting.sprut.tables.GetCntc_208.GET_CNTC_208;

    /**
     * Call <code>GET_CNTC_208</code>.
     */
    public static Result<GetCntc_208Record> GET_CNTC_208(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_208.GET_CNTC_208.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_208</code> as a table.
     */
    public static GetCntc_208 GET_CNTC_208() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_208.GET_CNTC_208.call();
    }

    /**
     * The table <code>GET_CNTC_209</code>.
     */
    public static final GetCntc_209 GET_CNTC_209 = ru.smartsarov.citylighting.sprut.tables.GetCntc_209.GET_CNTC_209;

    /**
     * Call <code>GET_CNTC_209</code>.
     */
    public static Result<GetCntc_209Record> GET_CNTC_209(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_209.GET_CNTC_209.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_209</code> as a table.
     */
    public static GetCntc_209 GET_CNTC_209() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_209.GET_CNTC_209.call();
    }

    /**
     * The table <code>GET_CNTC_210</code>.
     */
    public static final GetCntc_210 GET_CNTC_210 = ru.smartsarov.citylighting.sprut.tables.GetCntc_210.GET_CNTC_210;

    /**
     * Call <code>GET_CNTC_210</code>.
     */
    public static Result<GetCntc_210Record> GET_CNTC_210(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_210.GET_CNTC_210.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_210</code> as a table.
     */
    public static GetCntc_210 GET_CNTC_210() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_210.GET_CNTC_210.call();
    }

    /**
     * The table <code>GET_CNTC_211</code>.
     */
    public static final GetCntc_211 GET_CNTC_211 = ru.smartsarov.citylighting.sprut.tables.GetCntc_211.GET_CNTC_211;

    /**
     * Call <code>GET_CNTC_211</code>.
     */
    public static Result<GetCntc_211Record> GET_CNTC_211(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_211.GET_CNTC_211.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_211</code> as a table.
     */
    public static GetCntc_211 GET_CNTC_211() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_211.GET_CNTC_211.call();
    }

    /**
     * The table <code>GET_CNTC_212</code>.
     */
    public static final GetCntc_212 GET_CNTC_212 = ru.smartsarov.citylighting.sprut.tables.GetCntc_212.GET_CNTC_212;

    /**
     * Call <code>GET_CNTC_212</code>.
     */
    public static Result<GetCntc_212Record> GET_CNTC_212(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_212.GET_CNTC_212.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_212</code> as a table.
     */
    public static GetCntc_212 GET_CNTC_212() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_212.GET_CNTC_212.call();
    }

    /**
     * The table <code>GET_CNTC_213</code>.
     */
    public static final GetCntc_213 GET_CNTC_213 = ru.smartsarov.citylighting.sprut.tables.GetCntc_213.GET_CNTC_213;

    /**
     * Call <code>GET_CNTC_213</code>.
     */
    public static Result<GetCntc_213Record> GET_CNTC_213(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_213.GET_CNTC_213.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_213</code> as a table.
     */
    public static GetCntc_213 GET_CNTC_213() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_213.GET_CNTC_213.call();
    }

    /**
     * The table <code>GET_CNTC_214</code>.
     */
    public static final GetCntc_214 GET_CNTC_214 = ru.smartsarov.citylighting.sprut.tables.GetCntc_214.GET_CNTC_214;

    /**
     * Call <code>GET_CNTC_214</code>.
     */
    public static Result<GetCntc_214Record> GET_CNTC_214(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_214.GET_CNTC_214.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_214</code> as a table.
     */
    public static GetCntc_214 GET_CNTC_214() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_214.GET_CNTC_214.call();
    }

    /**
     * The table <code>GET_CNTC_215</code>.
     */
    public static final GetCntc_215 GET_CNTC_215 = ru.smartsarov.citylighting.sprut.tables.GetCntc_215.GET_CNTC_215;

    /**
     * Call <code>GET_CNTC_215</code>.
     */
    public static Result<GetCntc_215Record> GET_CNTC_215(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_215.GET_CNTC_215.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_215</code> as a table.
     */
    public static GetCntc_215 GET_CNTC_215() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_215.GET_CNTC_215.call();
    }

    /**
     * The table <code>GET_CNTC_216</code>.
     */
    public static final GetCntc_216 GET_CNTC_216 = ru.smartsarov.citylighting.sprut.tables.GetCntc_216.GET_CNTC_216;

    /**
     * Call <code>GET_CNTC_216</code>.
     */
    public static Result<GetCntc_216Record> GET_CNTC_216(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_216.GET_CNTC_216.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_216</code> as a table.
     */
    public static GetCntc_216 GET_CNTC_216() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_216.GET_CNTC_216.call();
    }

    /**
     * The table <code>GET_CNTC_217</code>.
     */
    public static final GetCntc_217 GET_CNTC_217 = ru.smartsarov.citylighting.sprut.tables.GetCntc_217.GET_CNTC_217;

    /**
     * Call <code>GET_CNTC_217</code>.
     */
    public static Result<GetCntc_217Record> GET_CNTC_217(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_217.GET_CNTC_217.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_217</code> as a table.
     */
    public static GetCntc_217 GET_CNTC_217() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_217.GET_CNTC_217.call();
    }

    /**
     * The table <code>GET_CNTC_218</code>.
     */
    public static final GetCntc_218 GET_CNTC_218 = ru.smartsarov.citylighting.sprut.tables.GetCntc_218.GET_CNTC_218;

    /**
     * Call <code>GET_CNTC_218</code>.
     */
    public static Result<GetCntc_218Record> GET_CNTC_218(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_218.GET_CNTC_218.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_218</code> as a table.
     */
    public static GetCntc_218 GET_CNTC_218() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_218.GET_CNTC_218.call();
    }

    /**
     * The table <code>GET_CNTC_219</code>.
     */
    public static final GetCntc_219 GET_CNTC_219 = ru.smartsarov.citylighting.sprut.tables.GetCntc_219.GET_CNTC_219;

    /**
     * Call <code>GET_CNTC_219</code>.
     */
    public static Result<GetCntc_219Record> GET_CNTC_219(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_219.GET_CNTC_219.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_219</code> as a table.
     */
    public static GetCntc_219 GET_CNTC_219() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_219.GET_CNTC_219.call();
    }

    /**
     * The table <code>GET_CNTC_220</code>.
     */
    public static final GetCntc_220 GET_CNTC_220 = ru.smartsarov.citylighting.sprut.tables.GetCntc_220.GET_CNTC_220;

    /**
     * Call <code>GET_CNTC_220</code>.
     */
    public static Result<GetCntc_220Record> GET_CNTC_220(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_220.GET_CNTC_220.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_220</code> as a table.
     */
    public static GetCntc_220 GET_CNTC_220() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_220.GET_CNTC_220.call();
    }

    /**
     * The table <code>GET_CNTC_299</code>.
     */
    public static final GetCntc_299 GET_CNTC_299 = ru.smartsarov.citylighting.sprut.tables.GetCntc_299.GET_CNTC_299;

    /**
     * Call <code>GET_CNTC_299</code>.
     */
    public static Result<GetCntc_299Record> GET_CNTC_299(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntc_299.GET_CNTC_299.call()).fetch();
    }

    /**
     * Get <code>GET_CNTC_299</code> as a table.
     */
    public static GetCntc_299 GET_CNTC_299() {
        return ru.smartsarov.citylighting.sprut.tables.GetCntc_299.GET_CNTC_299.call();
    }

    /**
     * The table <code>GET_CNTL_FOR_PERIOD</code>.
     */
    public static final GetCntlForPeriod GET_CNTL_FOR_PERIOD = ru.smartsarov.citylighting.sprut.tables.GetCntlForPeriod.GET_CNTL_FOR_PERIOD;

    /**
     * Call <code>GET_CNTL_FOR_PERIOD</code>.
     */
    public static Result<GetCntlForPeriodRecord> GET_CNTL_FOR_PERIOD(Configuration configuration, String login, String pass, String cntList, Timestamp startdate, Timestamp enddate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntlForPeriod.GET_CNTL_FOR_PERIOD.call(login, pass, cntList, startdate, enddate)).fetch();
    }

    /**
     * Get <code>GET_CNTL_FOR_PERIOD</code> as a table.
     */
    public static GetCntlForPeriod GET_CNTL_FOR_PERIOD(String login, String pass, String cntList, Timestamp startdate, Timestamp enddate) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlForPeriod.GET_CNTL_FOR_PERIOD.call(login, pass, cntList, startdate, enddate);
    }

    /**
     * Get <code>GET_CNTL_FOR_PERIOD</code> as a table.
     */
    public static GetCntlForPeriod GET_CNTL_FOR_PERIOD(Field<String> login, Field<String> pass, Field<String> cntList, Field<Timestamp> startdate, Field<Timestamp> enddate) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlForPeriod.GET_CNTL_FOR_PERIOD.call(login, pass, cntList, startdate, enddate);
    }

    /**
     * The table <code>GET_CNTL_ON_CID_DATETIME</code>.
     */
    public static final GetCntlOnCidDatetime GET_CNTL_ON_CID_DATETIME = ru.smartsarov.citylighting.sprut.tables.GetCntlOnCidDatetime.GET_CNTL_ON_CID_DATETIME;

    /**
     * Call <code>GET_CNTL_ON_CID_DATETIME</code>.
     */
    public static Result<GetCntlOnCidDatetimeRecord> GET_CNTL_ON_CID_DATETIME(Configuration configuration, Integer cntId, Timestamp tdatetime) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntlOnCidDatetime.GET_CNTL_ON_CID_DATETIME.call(cntId, tdatetime)).fetch();
    }

    /**
     * Get <code>GET_CNTL_ON_CID_DATETIME</code> as a table.
     */
    public static GetCntlOnCidDatetime GET_CNTL_ON_CID_DATETIME(Integer cntId, Timestamp tdatetime) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlOnCidDatetime.GET_CNTL_ON_CID_DATETIME.call(cntId, tdatetime);
    }

    /**
     * Get <code>GET_CNTL_ON_CID_DATETIME</code> as a table.
     */
    public static GetCntlOnCidDatetime GET_CNTL_ON_CID_DATETIME(Field<Integer> cntId, Field<Timestamp> tdatetime) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlOnCidDatetime.GET_CNTL_ON_CID_DATETIME.call(cntId, tdatetime);
    }

    /**
     * The table <code>GET_CNTL_ON_DATETIME</code>.
     */
    public static final GetCntlOnDatetime GET_CNTL_ON_DATETIME = ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime.GET_CNTL_ON_DATETIME;

    /**
     * Call <code>GET_CNTL_ON_DATETIME</code>.
     */
    public static Result<GetCntlOnDatetimeRecord> GET_CNTL_ON_DATETIME(Configuration configuration, String login, String pass, Timestamp tdatetime) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime.GET_CNTL_ON_DATETIME.call(login, pass, tdatetime)).fetch();
    }

    /**
     * Get <code>GET_CNTL_ON_DATETIME</code> as a table.
     */
    public static GetCntlOnDatetime GET_CNTL_ON_DATETIME(String login, String pass, Timestamp tdatetime) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime.GET_CNTL_ON_DATETIME.call(login, pass, tdatetime);
    }

    /**
     * Get <code>GET_CNTL_ON_DATETIME</code> as a table.
     */
    public static GetCntlOnDatetime GET_CNTL_ON_DATETIME(Field<String> login, Field<String> pass, Field<Timestamp> tdatetime) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime.GET_CNTL_ON_DATETIME.call(login, pass, tdatetime);
    }

    /**
     * The table <code>GET_CNTL_ON_DATETIME_2</code>.
     */
    public static final GetCntlOnDatetime_2 GET_CNTL_ON_DATETIME_2 = ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime_2.GET_CNTL_ON_DATETIME_2;

    /**
     * Call <code>GET_CNTL_ON_DATETIME_2</code>.
     */
    public static Result<GetCntlOnDatetime_2Record> GET_CNTL_ON_DATETIME_2(Configuration configuration, String login, String pass, String cntList, Timestamp tdatetime) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime_2.GET_CNTL_ON_DATETIME_2.call(login, pass, cntList, tdatetime)).fetch();
    }

    /**
     * Get <code>GET_CNTL_ON_DATETIME_2</code> as a table.
     */
    public static GetCntlOnDatetime_2 GET_CNTL_ON_DATETIME_2(String login, String pass, String cntList, Timestamp tdatetime) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime_2.GET_CNTL_ON_DATETIME_2.call(login, pass, cntList, tdatetime);
    }

    /**
     * Get <code>GET_CNTL_ON_DATETIME_2</code> as a table.
     */
    public static GetCntlOnDatetime_2 GET_CNTL_ON_DATETIME_2(Field<String> login, Field<String> pass, Field<String> cntList, Field<Timestamp> tdatetime) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntlOnDatetime_2.GET_CNTL_ON_DATETIME_2.call(login, pass, cntList, tdatetime);
    }

    /**
     * The table <code>GET_CNTTARCH</code>.
     */
    public static final GetCnttarch GET_CNTTARCH = ru.smartsarov.citylighting.sprut.tables.GetCnttarch.GET_CNTTARCH;

    /**
     * Call <code>GET_CNTTARCH</code>.
     */
    public static Result<GetCnttarchRecord> GET_CNTTARCH(Configuration configuration, String login, String pass, Integer cid, Integer tsn, Date fromDate, Date toDate, Integer archType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCnttarch.GET_CNTTARCH.call(login, pass, cid, tsn, fromDate, toDate, archType)).fetch();
    }

    /**
     * Get <code>GET_CNTTARCH</code> as a table.
     */
    public static GetCnttarch GET_CNTTARCH(String login, String pass, Integer cid, Integer tsn, Date fromDate, Date toDate, Integer archType) {
        return ru.smartsarov.citylighting.sprut.tables.GetCnttarch.GET_CNTTARCH.call(login, pass, cid, tsn, fromDate, toDate, archType);
    }

    /**
     * Get <code>GET_CNTTARCH</code> as a table.
     */
    public static GetCnttarch GET_CNTTARCH(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Integer> tsn, Field<Date> fromDate, Field<Date> toDate, Field<Integer> archType) {
        return ru.smartsarov.citylighting.sprut.tables.GetCnttarch.GET_CNTTARCH.call(login, pass, cid, tsn, fromDate, toDate, archType);
    }

    /**
     * The table <code>GET_CNTTCURR</code>.
     */
    public static final GetCnttcurr GET_CNTTCURR = ru.smartsarov.citylighting.sprut.tables.GetCnttcurr.GET_CNTTCURR;

    /**
     * Call <code>GET_CNTTCURR</code>.
     */
    public static Result<GetCnttcurrRecord> GET_CNTTCURR(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCnttcurr.GET_CNTTCURR.call()).fetch();
    }

    /**
     * Get <code>GET_CNTTCURR</code> as a table.
     */
    public static GetCnttcurr GET_CNTTCURR() {
        return ru.smartsarov.citylighting.sprut.tables.GetCnttcurr.GET_CNTTCURR.call();
    }

    /**
     * The table <code>GET_CNTTCURR_LOOK</code>.
     */
    public static final GetCnttcurrLook GET_CNTTCURR_LOOK = ru.smartsarov.citylighting.sprut.tables.GetCnttcurrLook.GET_CNTTCURR_LOOK;

    /**
     * Call <code>GET_CNTTCURR_LOOK</code>.
     */
    public static Result<GetCnttcurrLookRecord> GET_CNTTCURR_LOOK(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCnttcurrLook.GET_CNTTCURR_LOOK.call()).fetch();
    }

    /**
     * Get <code>GET_CNTTCURR_LOOK</code> as a table.
     */
    public static GetCnttcurrLook GET_CNTTCURR_LOOK() {
        return ru.smartsarov.citylighting.sprut.tables.GetCnttcurrLook.GET_CNTTCURR_LOOK.call();
    }

    /**
     * The table <code>GET_CNTTCURR_NEW</code>.
     */
    public static final GetCnttcurrNew GET_CNTTCURR_NEW = ru.smartsarov.citylighting.sprut.tables.GetCnttcurrNew.GET_CNTTCURR_NEW;

    /**
     * Call <code>GET_CNTTCURR_NEW</code>.
     */
    public static Result<GetCnttcurrNewRecord> GET_CNTTCURR_NEW(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCnttcurrNew.GET_CNTTCURR_NEW.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_CNTTCURR_NEW</code> as a table.
     */
    public static GetCnttcurrNew GET_CNTTCURR_NEW(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetCnttcurrNew.GET_CNTTCURR_NEW.call(login, pass);
    }

    /**
     * Get <code>GET_CNTTCURR_NEW</code> as a table.
     */
    public static GetCnttcurrNew GET_CNTTCURR_NEW(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetCnttcurrNew.GET_CNTTCURR_NEW.call(login, pass);
    }

    /**
     * The table <code>GET_CNT_CHANNEL</code>.
     */
    public static final GetCntChannel GET_CNT_CHANNEL = ru.smartsarov.citylighting.sprut.tables.GetCntChannel.GET_CNT_CHANNEL;

    /**
     * Call <code>GET_CNT_CHANNEL</code>.
     */
    public static Result<GetCntChannelRecord> GET_CNT_CHANNEL(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntChannel.GET_CNT_CHANNEL.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_CNT_CHANNEL</code> as a table.
     */
    public static GetCntChannel GET_CNT_CHANNEL(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntChannel.GET_CNT_CHANNEL.call(login, pass);
    }

    /**
     * Get <code>GET_CNT_CHANNEL</code> as a table.
     */
    public static GetCntChannel GET_CNT_CHANNEL(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntChannel.GET_CNT_CHANNEL.call(login, pass);
    }

    /**
     * The table <code>GET_CNT_CONTROL</code>.
     */
    public static final GetCntControl GET_CNT_CONTROL = ru.smartsarov.citylighting.sprut.tables.GetCntControl.GET_CNT_CONTROL;

    /**
     * Call <code>GET_CNT_CONTROL</code>.
     */
    public static Result<GetCntControlRecord> GET_CNT_CONTROL(Configuration configuration, Integer cntid, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntControl.GET_CNT_CONTROL.call(cntid, login, pass)).fetch();
    }

    /**
     * Get <code>GET_CNT_CONTROL</code> as a table.
     */
    public static GetCntControl GET_CNT_CONTROL(Integer cntid, String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntControl.GET_CNT_CONTROL.call(cntid, login, pass);
    }

    /**
     * Get <code>GET_CNT_CONTROL</code> as a table.
     */
    public static GetCntControl GET_CNT_CONTROL(Field<Integer> cntid, Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntControl.GET_CNT_CONTROL.call(cntid, login, pass);
    }

    /**
     * The table <code>GET_CNT_MODBUS_REGISTERS</code>.
     */
    public static final GetCntModbusRegisters GET_CNT_MODBUS_REGISTERS = ru.smartsarov.citylighting.sprut.tables.GetCntModbusRegisters.GET_CNT_MODBUS_REGISTERS;

    /**
     * Call <code>GET_CNT_MODBUS_REGISTERS</code>.
     */
    public static Result<GetCntModbusRegistersRecord> GET_CNT_MODBUS_REGISTERS(Configuration configuration, String login, String pass, Integer inCntId) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetCntModbusRegisters.GET_CNT_MODBUS_REGISTERS.call(login, pass, inCntId)).fetch();
    }

    /**
     * Get <code>GET_CNT_MODBUS_REGISTERS</code> as a table.
     */
    public static GetCntModbusRegisters GET_CNT_MODBUS_REGISTERS(String login, String pass, Integer inCntId) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntModbusRegisters.GET_CNT_MODBUS_REGISTERS.call(login, pass, inCntId);
    }

    /**
     * Get <code>GET_CNT_MODBUS_REGISTERS</code> as a table.
     */
    public static GetCntModbusRegisters GET_CNT_MODBUS_REGISTERS(Field<String> login, Field<String> pass, Field<Integer> inCntId) {
        return ru.smartsarov.citylighting.sprut.tables.GetCntModbusRegisters.GET_CNT_MODBUS_REGISTERS.call(login, pass, inCntId);
    }

    /**
     * The table <code>GET_CONTROL_STATE</code>.
     */
    public static final GetControlState GET_CONTROL_STATE = ru.smartsarov.citylighting.sprut.tables.GetControlState.GET_CONTROL_STATE;

    /**
     * Call <code>GET_CONTROL_STATE</code>.
     */
    public static Result<GetControlStateRecord> GET_CONTROL_STATE(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetControlState.GET_CONTROL_STATE.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_CONTROL_STATE</code> as a table.
     */
    public static GetControlState GET_CONTROL_STATE(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetControlState.GET_CONTROL_STATE.call(login, pass);
    }

    /**
     * Get <code>GET_CONTROL_STATE</code> as a table.
     */
    public static GetControlState GET_CONTROL_STATE(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetControlState.GET_CONTROL_STATE.call(login, pass);
    }

    /**
     * The table <code>GET_GPRS_CURR</code>.
     */
    public static final GetGprsCurr GET_GPRS_CURR = ru.smartsarov.citylighting.sprut.tables.GetGprsCurr.GET_GPRS_CURR;

    /**
     * Call <code>GET_GPRS_CURR</code>.
     */
    public static Result<GetGprsCurrRecord> GET_GPRS_CURR(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGprsCurr.GET_GPRS_CURR.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GPRS_CURR</code> as a table.
     */
    public static GetGprsCurr GET_GPRS_CURR(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGprsCurr.GET_GPRS_CURR.call(login, pass);
    }

    /**
     * Get <code>GET_GPRS_CURR</code> as a table.
     */
    public static GetGprsCurr GET_GPRS_CURR(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGprsCurr.GET_GPRS_CURR.call(login, pass);
    }

    /**
     * The table <code>GET_GPRS_TRAFFIC</code>.
     */
    public static final GetGprsTraffic GET_GPRS_TRAFFIC = ru.smartsarov.citylighting.sprut.tables.GetGprsTraffic.GET_GPRS_TRAFFIC;

    /**
     * Call <code>GET_GPRS_TRAFFIC</code>.
     */
    public static Result<GetGprsTrafficRecord> GET_GPRS_TRAFFIC(Configuration configuration, Integer uid, Date sdate, Date edate, Integer byDay) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGprsTraffic.GET_GPRS_TRAFFIC.call(uid, sdate, edate, byDay)).fetch();
    }

    /**
     * Get <code>GET_GPRS_TRAFFIC</code> as a table.
     */
    public static GetGprsTraffic GET_GPRS_TRAFFIC(Integer uid, Date sdate, Date edate, Integer byDay) {
        return ru.smartsarov.citylighting.sprut.tables.GetGprsTraffic.GET_GPRS_TRAFFIC.call(uid, sdate, edate, byDay);
    }

    /**
     * Get <code>GET_GPRS_TRAFFIC</code> as a table.
     */
    public static GetGprsTraffic GET_GPRS_TRAFFIC(Field<Integer> uid, Field<Date> sdate, Field<Date> edate, Field<Integer> byDay) {
        return ru.smartsarov.citylighting.sprut.tables.GetGprsTraffic.GET_GPRS_TRAFFIC.call(uid, sdate, edate, byDay);
    }

    /**
     * The table <code>GET_GRP_TYPE</code>.
     */
    public static final GetGrpType GET_GRP_TYPE = ru.smartsarov.citylighting.sprut.tables.GetGrpType.GET_GRP_TYPE;

    /**
     * Call <code>GET_GRP_TYPE</code>.
     */
    public static Result<GetGrpTypeRecord> GET_GRP_TYPE(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGrpType.GET_GRP_TYPE.call()).fetch();
    }

    /**
     * Get <code>GET_GRP_TYPE</code> as a table.
     */
    public static GetGrpType GET_GRP_TYPE() {
        return ru.smartsarov.citylighting.sprut.tables.GetGrpType.GET_GRP_TYPE.call();
    }

    /**
     * The table <code>GET_GUARD_LINE_CURR</code>.
     */
    public static final GetGuardLineCurr GET_GUARD_LINE_CURR = ru.smartsarov.citylighting.sprut.tables.GetGuardLineCurr.GET_GUARD_LINE_CURR;

    /**
     * Call <code>GET_GUARD_LINE_CURR</code>.
     */
    public static Result<GetGuardLineCurrRecord> GET_GUARD_LINE_CURR(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardLineCurr.GET_GUARD_LINE_CURR.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GUARD_LINE_CURR</code> as a table.
     */
    public static GetGuardLineCurr GET_GUARD_LINE_CURR(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardLineCurr.GET_GUARD_LINE_CURR.call(login, pass);
    }

    /**
     * Get <code>GET_GUARD_LINE_CURR</code> as a table.
     */
    public static GetGuardLineCurr GET_GUARD_LINE_CURR(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardLineCurr.GET_GUARD_LINE_CURR.call(login, pass);
    }

    /**
     * The table <code>GET_GUARD_LINE_LOG</code>.
     */
    public static final GetGuardLineLog GET_GUARD_LINE_LOG = ru.smartsarov.citylighting.sprut.tables.GetGuardLineLog.GET_GUARD_LINE_LOG;

    /**
     * Call <code>GET_GUARD_LINE_LOG</code>.
     */
    public static Result<GetGuardLineLogRecord> GET_GUARD_LINE_LOG(Configuration configuration, String login, String pass, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardLineLog.GET_GUARD_LINE_LOG.call(login, pass, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_GUARD_LINE_LOG</code> as a table.
     */
    public static GetGuardLineLog GET_GUARD_LINE_LOG(String login, String pass, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardLineLog.GET_GUARD_LINE_LOG.call(login, pass, fromDate, toDate);
    }

    /**
     * Get <code>GET_GUARD_LINE_LOG</code> as a table.
     */
    public static GetGuardLineLog GET_GUARD_LINE_LOG(Field<String> login, Field<String> pass, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardLineLog.GET_GUARD_LINE_LOG.call(login, pass, fromDate, toDate);
    }

    /**
     * The table <code>GET_GUARD_LOG_MONTH</code>.
     */
    public static final GetGuardLogMonth GET_GUARD_LOG_MONTH = ru.smartsarov.citylighting.sprut.tables.GetGuardLogMonth.GET_GUARD_LOG_MONTH;

    /**
     * Call <code>GET_GUARD_LOG_MONTH</code>.
     */
    public static Result<GetGuardLogMonthRecord> GET_GUARD_LOG_MONTH(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardLogMonth.GET_GUARD_LOG_MONTH.call()).fetch();
    }

    /**
     * Get <code>GET_GUARD_LOG_MONTH</code> as a table.
     */
    public static GetGuardLogMonth GET_GUARD_LOG_MONTH() {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardLogMonth.GET_GUARD_LOG_MONTH.call();
    }

    /**
     * The table <code>GET_GUARD_PIN_CURR</code>.
     */
    public static final GetGuardPinCurr GET_GUARD_PIN_CURR = ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr.GET_GUARD_PIN_CURR;

    /**
     * Call <code>GET_GUARD_PIN_CURR</code>.
     */
    public static Result<GetGuardPinCurrRecord> GET_GUARD_PIN_CURR(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr.GET_GUARD_PIN_CURR.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_CURR</code> as a table.
     */
    public static GetGuardPinCurr GET_GUARD_PIN_CURR(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr.GET_GUARD_PIN_CURR.call(login, pass);
    }

    /**
     * Get <code>GET_GUARD_PIN_CURR</code> as a table.
     */
    public static GetGuardPinCurr GET_GUARD_PIN_CURR(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr.GET_GUARD_PIN_CURR.call(login, pass);
    }

    /**
     * The table <code>GET_GUARD_PIN_CURR_2</code>.
     */
    public static final GetGuardPinCurr_2 GET_GUARD_PIN_CURR_2 = ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr_2.GET_GUARD_PIN_CURR_2;

    /**
     * Call <code>GET_GUARD_PIN_CURR_2</code>.
     */
    public static Result<GetGuardPinCurr_2Record> GET_GUARD_PIN_CURR_2(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr_2.GET_GUARD_PIN_CURR_2.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_CURR_2</code> as a table.
     */
    public static GetGuardPinCurr_2 GET_GUARD_PIN_CURR_2(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr_2.GET_GUARD_PIN_CURR_2.call(login, pass);
    }

    /**
     * Get <code>GET_GUARD_PIN_CURR_2</code> as a table.
     */
    public static GetGuardPinCurr_2 GET_GUARD_PIN_CURR_2(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurr_2.GET_GUARD_PIN_CURR_2.call(login, pass);
    }

    /**
     * The table <code>GET_GUARD_PIN_CURR_ON</code>.
     */
    public static final GetGuardPinCurrOn GET_GUARD_PIN_CURR_ON = ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurrOn.GET_GUARD_PIN_CURR_ON;

    /**
     * Call <code>GET_GUARD_PIN_CURR_ON</code>.
     */
    public static Result<GetGuardPinCurrOnRecord> GET_GUARD_PIN_CURR_ON(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurrOn.GET_GUARD_PIN_CURR_ON.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_CURR_ON</code> as a table.
     */
    public static GetGuardPinCurrOn GET_GUARD_PIN_CURR_ON(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurrOn.GET_GUARD_PIN_CURR_ON.call(login, pass);
    }

    /**
     * Get <code>GET_GUARD_PIN_CURR_ON</code> as a table.
     */
    public static GetGuardPinCurrOn GET_GUARD_PIN_CURR_ON(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinCurrOn.GET_GUARD_PIN_CURR_ON.call(login, pass);
    }

    /**
     * The table <code>GET_GUARD_PIN_LAST_EVENT_ALL</code>.
     */
    public static final GetGuardPinLastEventAll GET_GUARD_PIN_LAST_EVENT_ALL = ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAll.GET_GUARD_PIN_LAST_EVENT_ALL;

    /**
     * Call <code>GET_GUARD_PIN_LAST_EVENT_ALL</code>.
     */
    public static Result<GetGuardPinLastEventAllRecord> GET_GUARD_PIN_LAST_EVENT_ALL(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAll.GET_GUARD_PIN_LAST_EVENT_ALL.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_LAST_EVENT_ALL</code> as a table.
     */
    public static GetGuardPinLastEventAll GET_GUARD_PIN_LAST_EVENT_ALL(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAll.GET_GUARD_PIN_LAST_EVENT_ALL.call(login, pass);
    }

    /**
     * Get <code>GET_GUARD_PIN_LAST_EVENT_ALL</code> as a table.
     */
    public static GetGuardPinLastEventAll GET_GUARD_PIN_LAST_EVENT_ALL(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAll.GET_GUARD_PIN_LAST_EVENT_ALL.call(login, pass);
    }

    /**
     * The table <code>GET_GUARD_PIN_LAST_EVENT_ALLZ</code>.
     */
    public static final GetGuardPinLastEventAllz GET_GUARD_PIN_LAST_EVENT_ALLZ = ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAllz.GET_GUARD_PIN_LAST_EVENT_ALLZ;

    /**
     * Call <code>GET_GUARD_PIN_LAST_EVENT_ALLZ</code>.
     */
    public static Result<GetGuardPinLastEventAllzRecord> GET_GUARD_PIN_LAST_EVENT_ALLZ(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAllz.GET_GUARD_PIN_LAST_EVENT_ALLZ.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_LAST_EVENT_ALLZ</code> as a table.
     */
    public static GetGuardPinLastEventAllz GET_GUARD_PIN_LAST_EVENT_ALLZ(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAllz.GET_GUARD_PIN_LAST_EVENT_ALLZ.call(login, pass);
    }

    /**
     * Get <code>GET_GUARD_PIN_LAST_EVENT_ALLZ</code> as a table.
     */
    public static GetGuardPinLastEventAllz GET_GUARD_PIN_LAST_EVENT_ALLZ(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLastEventAllz.GET_GUARD_PIN_LAST_EVENT_ALLZ.call(login, pass);
    }

    /**
     * The table <code>GET_GUARD_PIN_LOG_LAST_EVENT</code>.
     */
    public static final GetGuardPinLogLastEvent GET_GUARD_PIN_LOG_LAST_EVENT = ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogLastEvent.GET_GUARD_PIN_LOG_LAST_EVENT;

    /**
     * Call <code>GET_GUARD_PIN_LOG_LAST_EVENT</code>.
     */
    public static Result<GetGuardPinLogLastEventRecord> GET_GUARD_PIN_LOG_LAST_EVENT(Configuration configuration, String login, String pass, Integer guskAction) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogLastEvent.GET_GUARD_PIN_LOG_LAST_EVENT.call(login, pass, guskAction)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_LOG_LAST_EVENT</code> as a table.
     */
    public static GetGuardPinLogLastEvent GET_GUARD_PIN_LOG_LAST_EVENT(String login, String pass, Integer guskAction) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogLastEvent.GET_GUARD_PIN_LOG_LAST_EVENT.call(login, pass, guskAction);
    }

    /**
     * Get <code>GET_GUARD_PIN_LOG_LAST_EVENT</code> as a table.
     */
    public static GetGuardPinLogLastEvent GET_GUARD_PIN_LOG_LAST_EVENT(Field<String> login, Field<String> pass, Field<Integer> guskAction) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogLastEvent.GET_GUARD_PIN_LOG_LAST_EVENT.call(login, pass, guskAction);
    }

    /**
     * The table <code>GET_GUARD_PIN_LOG_SELECT</code>.
     */
    public static final GetGuardPinLogSelect GET_GUARD_PIN_LOG_SELECT = ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect.GET_GUARD_PIN_LOG_SELECT;

    /**
     * Call <code>GET_GUARD_PIN_LOG_SELECT</code>.
     */
    public static Result<GetGuardPinLogSelectRecord> GET_GUARD_PIN_LOG_SELECT(Configuration configuration, String login, String pass, Timestamp datetimeStart, Timestamp datetimeEnd) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect.GET_GUARD_PIN_LOG_SELECT.call(login, pass, datetimeStart, datetimeEnd)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_LOG_SELECT</code> as a table.
     */
    public static GetGuardPinLogSelect GET_GUARD_PIN_LOG_SELECT(String login, String pass, Timestamp datetimeStart, Timestamp datetimeEnd) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect.GET_GUARD_PIN_LOG_SELECT.call(login, pass, datetimeStart, datetimeEnd);
    }

    /**
     * Get <code>GET_GUARD_PIN_LOG_SELECT</code> as a table.
     */
    public static GetGuardPinLogSelect GET_GUARD_PIN_LOG_SELECT(Field<String> login, Field<String> pass, Field<Timestamp> datetimeStart, Field<Timestamp> datetimeEnd) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect.GET_GUARD_PIN_LOG_SELECT.call(login, pass, datetimeStart, datetimeEnd);
    }

    /**
     * The table <code>GET_GUARD_PIN_LOG_SELECT_1</code>.
     */
    public static final GetGuardPinLogSelect_1 GET_GUARD_PIN_LOG_SELECT_1 = ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect_1.GET_GUARD_PIN_LOG_SELECT_1;

    /**
     * Call <code>GET_GUARD_PIN_LOG_SELECT_1</code>.
     */
    public static Result<GetGuardPinLogSelect_1Record> GET_GUARD_PIN_LOG_SELECT_1(Configuration configuration, String login, String pass, Integer uskId, Timestamp datetimeStart, Timestamp datetimeEnd) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect_1.GET_GUARD_PIN_LOG_SELECT_1.call(login, pass, uskId, datetimeStart, datetimeEnd)).fetch();
    }

    /**
     * Get <code>GET_GUARD_PIN_LOG_SELECT_1</code> as a table.
     */
    public static GetGuardPinLogSelect_1 GET_GUARD_PIN_LOG_SELECT_1(String login, String pass, Integer uskId, Timestamp datetimeStart, Timestamp datetimeEnd) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect_1.GET_GUARD_PIN_LOG_SELECT_1.call(login, pass, uskId, datetimeStart, datetimeEnd);
    }

    /**
     * Get <code>GET_GUARD_PIN_LOG_SELECT_1</code> as a table.
     */
    public static GetGuardPinLogSelect_1 GET_GUARD_PIN_LOG_SELECT_1(Field<String> login, Field<String> pass, Field<Integer> uskId, Field<Timestamp> datetimeStart, Field<Timestamp> datetimeEnd) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardPinLogSelect_1.GET_GUARD_PIN_LOG_SELECT_1.call(login, pass, uskId, datetimeStart, datetimeEnd);
    }

    /**
     * The table <code>GET_GUARD_USK_LOG</code>.
     */
    public static final GetGuardUskLog GET_GUARD_USK_LOG = ru.smartsarov.citylighting.sprut.tables.GetGuardUskLog.GET_GUARD_USK_LOG;

    /**
     * Call <code>GET_GUARD_USK_LOG</code>.
     */
    public static Result<GetGuardUskLogRecord> GET_GUARD_USK_LOG(Configuration configuration, String login, String pass, Integer uid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardUskLog.GET_GUARD_USK_LOG.call(login, pass, uid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_GUARD_USK_LOG</code> as a table.
     */
    public static GetGuardUskLog GET_GUARD_USK_LOG(String login, String pass, Integer uid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardUskLog.GET_GUARD_USK_LOG.call(login, pass, uid, fromDate, toDate);
    }

    /**
     * Get <code>GET_GUARD_USK_LOG</code> as a table.
     */
    public static GetGuardUskLog GET_GUARD_USK_LOG(Field<String> login, Field<String> pass, Field<Integer> uid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardUskLog.GET_GUARD_USK_LOG.call(login, pass, uid, fromDate, toDate);
    }

    /**
     * The table <code>GET_GUARD_ZONE_LOG</code>.
     */
    public static final GetGuardZoneLog GET_GUARD_ZONE_LOG = ru.smartsarov.citylighting.sprut.tables.GetGuardZoneLog.GET_GUARD_ZONE_LOG;

    /**
     * Call <code>GET_GUARD_ZONE_LOG</code>.
     */
    public static Result<GetGuardZoneLogRecord> GET_GUARD_ZONE_LOG(Configuration configuration, String login, String pass, Integer zid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetGuardZoneLog.GET_GUARD_ZONE_LOG.call(login, pass, zid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_GUARD_ZONE_LOG</code> as a table.
     */
    public static GetGuardZoneLog GET_GUARD_ZONE_LOG(String login, String pass, Integer zid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardZoneLog.GET_GUARD_ZONE_LOG.call(login, pass, zid, fromDate, toDate);
    }

    /**
     * Get <code>GET_GUARD_ZONE_LOG</code> as a table.
     */
    public static GetGuardZoneLog GET_GUARD_ZONE_LOG(Field<String> login, Field<String> pass, Field<Integer> zid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetGuardZoneLog.GET_GUARD_ZONE_LOG.call(login, pass, zid, fromDate, toDate);
    }

    /**
     * The table <code>GET_ICNTDL</code>.
     */
    public static final GetIcntdl GET_ICNTDL = ru.smartsarov.citylighting.sprut.tables.GetIcntdl.GET_ICNTDL;

    /**
     * Call <code>GET_ICNTDL</code>.
     */
    public static Result<GetIcntdlRecord> GET_ICNTDL(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetIcntdl.GET_ICNTDL.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_ICNTDL</code> as a table.
     */
    public static GetIcntdl GET_ICNTDL(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIcntdl.GET_ICNTDL.call(cid, sdate, edate);
    }

    /**
     * Get <code>GET_ICNTDL</code> as a table.
     */
    public static GetIcntdl GET_ICNTDL(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIcntdl.GET_ICNTDL.call(cid, sdate, edate);
    }

    /**
     * The table <code>GET_ICNTHDL</code>.
     */
    public static final GetIcnthdl GET_ICNTHDL = ru.smartsarov.citylighting.sprut.tables.GetIcnthdl.GET_ICNTHDL;

    /**
     * Call <code>GET_ICNTHDL</code>.
     */
    public static Result<GetIcnthdlRecord> GET_ICNTHDL(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetIcnthdl.GET_ICNTHDL.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_ICNTHDL</code> as a table.
     */
    public static GetIcnthdl GET_ICNTHDL(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIcnthdl.GET_ICNTHDL.call(cid, sdate, edate);
    }

    /**
     * Get <code>GET_ICNTHDL</code> as a table.
     */
    public static GetIcnthdl GET_ICNTHDL(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIcnthdl.GET_ICNTHDL.call(cid, sdate, edate);
    }

    /**
     * The table <code>GET_ICNTHL</code>.
     */
    public static final GetIcnthl GET_ICNTHL = ru.smartsarov.citylighting.sprut.tables.GetIcnthl.GET_ICNTHL;

    /**
     * Call <code>GET_ICNTHL</code>.
     */
    public static Result<GetIcnthlRecord> GET_ICNTHL(Configuration configuration, Integer cid, Timestamp fdate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetIcnthl.GET_ICNTHL.call(cid, fdate)).fetch();
    }

    /**
     * Get <code>GET_ICNTHL</code> as a table.
     */
    public static GetIcnthl GET_ICNTHL(Integer cid, Timestamp fdate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIcnthl.GET_ICNTHL.call(cid, fdate);
    }

    /**
     * Get <code>GET_ICNTHL</code> as a table.
     */
    public static GetIcnthl GET_ICNTHL(Field<Integer> cid, Field<Timestamp> fdate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIcnthl.GET_ICNTHL.call(cid, fdate);
    }

    /**
     * The table <code>GET_IMPULSE_ARCH_COLD_WATER</code>.
     */
    public static final GetImpulseArchColdWater GET_IMPULSE_ARCH_COLD_WATER = ru.smartsarov.citylighting.sprut.tables.GetImpulseArchColdWater.GET_IMPULSE_ARCH_COLD_WATER;

    /**
     * Call <code>GET_IMPULSE_ARCH_COLD_WATER</code>.
     */
    public static Result<GetImpulseArchColdWaterRecord> GET_IMPULSE_ARCH_COLD_WATER(Configuration configuration, String login, String pass, Integer cid, Timestamp fromDate, Timestamp toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseArchColdWater.GET_IMPULSE_ARCH_COLD_WATER.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_ARCH_COLD_WATER</code> as a table.
     */
    public static GetImpulseArchColdWater GET_IMPULSE_ARCH_COLD_WATER(String login, String pass, Integer cid, Timestamp fromDate, Timestamp toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseArchColdWater.GET_IMPULSE_ARCH_COLD_WATER.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_IMPULSE_ARCH_COLD_WATER</code> as a table.
     */
    public static GetImpulseArchColdWater GET_IMPULSE_ARCH_COLD_WATER(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Timestamp> fromDate, Field<Timestamp> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseArchColdWater.GET_IMPULSE_ARCH_COLD_WATER.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_IMPULSE_ARCH_ELECTRO</code>.
     */
    public static final GetImpulseArchElectro GET_IMPULSE_ARCH_ELECTRO = ru.smartsarov.citylighting.sprut.tables.GetImpulseArchElectro.GET_IMPULSE_ARCH_ELECTRO;

    /**
     * Call <code>GET_IMPULSE_ARCH_ELECTRO</code>.
     */
    public static Result<GetImpulseArchElectroRecord> GET_IMPULSE_ARCH_ELECTRO(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseArchElectro.GET_IMPULSE_ARCH_ELECTRO.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_ARCH_ELECTRO</code> as a table.
     */
    public static GetImpulseArchElectro GET_IMPULSE_ARCH_ELECTRO(String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseArchElectro.GET_IMPULSE_ARCH_ELECTRO.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_IMPULSE_ARCH_ELECTRO</code> as a table.
     */
    public static GetImpulseArchElectro GET_IMPULSE_ARCH_ELECTRO(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseArchElectro.GET_IMPULSE_ARCH_ELECTRO.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_IMPULSE_ARCH_HOT_WATER</code>.
     */
    public static final GetImpulseArchHotWater GET_IMPULSE_ARCH_HOT_WATER = ru.smartsarov.citylighting.sprut.tables.GetImpulseArchHotWater.GET_IMPULSE_ARCH_HOT_WATER;

    /**
     * Call <code>GET_IMPULSE_ARCH_HOT_WATER</code>.
     */
    public static Result<GetImpulseArchHotWaterRecord> GET_IMPULSE_ARCH_HOT_WATER(Configuration configuration, String login, String pass, Integer cid, Timestamp fromDate, Timestamp toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseArchHotWater.GET_IMPULSE_ARCH_HOT_WATER.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_ARCH_HOT_WATER</code> as a table.
     */
    public static GetImpulseArchHotWater GET_IMPULSE_ARCH_HOT_WATER(String login, String pass, Integer cid, Timestamp fromDate, Timestamp toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseArchHotWater.GET_IMPULSE_ARCH_HOT_WATER.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_IMPULSE_ARCH_HOT_WATER</code> as a table.
     */
    public static GetImpulseArchHotWater GET_IMPULSE_ARCH_HOT_WATER(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Timestamp> fromDate, Field<Timestamp> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseArchHotWater.GET_IMPULSE_ARCH_HOT_WATER.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_IMPULSE_CNTV</code>.
     */
    public static final GetImpulseCntv GET_IMPULSE_CNTV = ru.smartsarov.citylighting.sprut.tables.GetImpulseCntv.GET_IMPULSE_CNTV;

    /**
     * Call <code>GET_IMPULSE_CNTV</code>.
     */
    public static Result<GetImpulseCntvRecord> GET_IMPULSE_CNTV(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseCntv.GET_IMPULSE_CNTV.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_CNTV</code> as a table.
     */
    public static GetImpulseCntv GET_IMPULSE_CNTV(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntv.GET_IMPULSE_CNTV.call(login, pass);
    }

    /**
     * Get <code>GET_IMPULSE_CNTV</code> as a table.
     */
    public static GetImpulseCntv GET_IMPULSE_CNTV(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntv.GET_IMPULSE_CNTV.call(login, pass);
    }

    /**
     * The table <code>GET_IMPULSE_CNTV_COLD_WATER</code>.
     */
    public static final GetImpulseCntvColdWater GET_IMPULSE_CNTV_COLD_WATER = ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvColdWater.GET_IMPULSE_CNTV_COLD_WATER;

    /**
     * Call <code>GET_IMPULSE_CNTV_COLD_WATER</code>.
     */
    public static Result<GetImpulseCntvColdWaterRecord> GET_IMPULSE_CNTV_COLD_WATER(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvColdWater.GET_IMPULSE_CNTV_COLD_WATER.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_COLD_WATER</code> as a table.
     */
    public static GetImpulseCntvColdWater GET_IMPULSE_CNTV_COLD_WATER(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvColdWater.GET_IMPULSE_CNTV_COLD_WATER.call(login, pass);
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_COLD_WATER</code> as a table.
     */
    public static GetImpulseCntvColdWater GET_IMPULSE_CNTV_COLD_WATER(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvColdWater.GET_IMPULSE_CNTV_COLD_WATER.call(login, pass);
    }

    /**
     * The table <code>GET_IMPULSE_CNTV_ELECTRO</code>.
     */
    public static final GetImpulseCntvElectro GET_IMPULSE_CNTV_ELECTRO = ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvElectro.GET_IMPULSE_CNTV_ELECTRO;

    /**
     * Call <code>GET_IMPULSE_CNTV_ELECTRO</code>.
     */
    public static Result<GetImpulseCntvElectroRecord> GET_IMPULSE_CNTV_ELECTRO(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvElectro.GET_IMPULSE_CNTV_ELECTRO.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_ELECTRO</code> as a table.
     */
    public static GetImpulseCntvElectro GET_IMPULSE_CNTV_ELECTRO(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvElectro.GET_IMPULSE_CNTV_ELECTRO.call(login, pass);
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_ELECTRO</code> as a table.
     */
    public static GetImpulseCntvElectro GET_IMPULSE_CNTV_ELECTRO(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvElectro.GET_IMPULSE_CNTV_ELECTRO.call(login, pass);
    }

    /**
     * The table <code>GET_IMPULSE_CNTV_GAZ</code>.
     */
    public static final GetImpulseCntvGaz GET_IMPULSE_CNTV_GAZ = ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvGaz.GET_IMPULSE_CNTV_GAZ;

    /**
     * Call <code>GET_IMPULSE_CNTV_GAZ</code>.
     */
    public static Result<GetImpulseCntvGazRecord> GET_IMPULSE_CNTV_GAZ(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvGaz.GET_IMPULSE_CNTV_GAZ.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_GAZ</code> as a table.
     */
    public static GetImpulseCntvGaz GET_IMPULSE_CNTV_GAZ(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvGaz.GET_IMPULSE_CNTV_GAZ.call(login, pass);
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_GAZ</code> as a table.
     */
    public static GetImpulseCntvGaz GET_IMPULSE_CNTV_GAZ(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvGaz.GET_IMPULSE_CNTV_GAZ.call(login, pass);
    }

    /**
     * The table <code>GET_IMPULSE_CNTV_HOT_WATER</code>.
     */
    public static final GetImpulseCntvHotWater GET_IMPULSE_CNTV_HOT_WATER = ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvHotWater.GET_IMPULSE_CNTV_HOT_WATER;

    /**
     * Call <code>GET_IMPULSE_CNTV_HOT_WATER</code>.
     */
    public static Result<GetImpulseCntvHotWaterRecord> GET_IMPULSE_CNTV_HOT_WATER(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvHotWater.GET_IMPULSE_CNTV_HOT_WATER.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_HOT_WATER</code> as a table.
     */
    public static GetImpulseCntvHotWater GET_IMPULSE_CNTV_HOT_WATER(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvHotWater.GET_IMPULSE_CNTV_HOT_WATER.call(login, pass);
    }

    /**
     * Get <code>GET_IMPULSE_CNTV_HOT_WATER</code> as a table.
     */
    public static GetImpulseCntvHotWater GET_IMPULSE_CNTV_HOT_WATER(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetImpulseCntvHotWater.GET_IMPULSE_CNTV_HOT_WATER.call(login, pass);
    }

    /**
     * The table <code>GET_INTELLIGENT_ARCH_ELECTRO_15</code>.
     */
    public static final GetIntelligentArchElectro_15 GET_INTELLIGENT_ARCH_ELECTRO_15 = ru.smartsarov.citylighting.sprut.tables.GetIntelligentArchElectro_15.GET_INTELLIGENT_ARCH_ELECTRO_15;

    /**
     * Call <code>GET_INTELLIGENT_ARCH_ELECTRO_15</code>.
     */
    public static Result<GetIntelligentArchElectro_15Record> GET_INTELLIGENT_ARCH_ELECTRO_15(Configuration configuration, String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetIntelligentArchElectro_15.GET_INTELLIGENT_ARCH_ELECTRO_15.call(login, pass, cid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_INTELLIGENT_ARCH_ELECTRO_15</code> as a table.
     */
    public static GetIntelligentArchElectro_15 GET_INTELLIGENT_ARCH_ELECTRO_15(String login, String pass, Integer cid, Date fromDate, Date toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIntelligentArchElectro_15.GET_INTELLIGENT_ARCH_ELECTRO_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * Get <code>GET_INTELLIGENT_ARCH_ELECTRO_15</code> as a table.
     */
    public static GetIntelligentArchElectro_15 GET_INTELLIGENT_ARCH_ELECTRO_15(Field<String> login, Field<String> pass, Field<Integer> cid, Field<Date> fromDate, Field<Date> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetIntelligentArchElectro_15.GET_INTELLIGENT_ARCH_ELECTRO_15.call(login, pass, cid, fromDate, toDate);
    }

    /**
     * The table <code>GET_INTELLIGENT_ELECTRO</code>.
     */
    public static final GetIntelligentElectro GET_INTELLIGENT_ELECTRO = ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectro.GET_INTELLIGENT_ELECTRO;

    /**
     * Call <code>GET_INTELLIGENT_ELECTRO</code>.
     */
    public static Result<GetIntelligentElectroRecord> GET_INTELLIGENT_ELECTRO(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectro.GET_INTELLIGENT_ELECTRO.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_INTELLIGENT_ELECTRO</code> as a table.
     */
    public static GetIntelligentElectro GET_INTELLIGENT_ELECTRO(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectro.GET_INTELLIGENT_ELECTRO.call(login, pass);
    }

    /**
     * Get <code>GET_INTELLIGENT_ELECTRO</code> as a table.
     */
    public static GetIntelligentElectro GET_INTELLIGENT_ELECTRO(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectro.GET_INTELLIGENT_ELECTRO.call(login, pass);
    }

    /**
     * The table <code>GET_INTELLIGENT_ELECTRO_KOEFF</code>.
     */
    public static final GetIntelligentElectroKoeff GET_INTELLIGENT_ELECTRO_KOEFF = ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectroKoeff.GET_INTELLIGENT_ELECTRO_KOEFF;

    /**
     * Call <code>GET_INTELLIGENT_ELECTRO_KOEFF</code>.
     */
    public static Result<GetIntelligentElectroKoeffRecord> GET_INTELLIGENT_ELECTRO_KOEFF(Configuration configuration, String login, String pass, Short useTransformationI, Short useTransformationU) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectroKoeff.GET_INTELLIGENT_ELECTRO_KOEFF.call(login, pass, useTransformationI, useTransformationU)).fetch();
    }

    /**
     * Get <code>GET_INTELLIGENT_ELECTRO_KOEFF</code> as a table.
     */
    public static GetIntelligentElectroKoeff GET_INTELLIGENT_ELECTRO_KOEFF(String login, String pass, Short useTransformationI, Short useTransformationU) {
        return ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectroKoeff.GET_INTELLIGENT_ELECTRO_KOEFF.call(login, pass, useTransformationI, useTransformationU);
    }

    /**
     * Get <code>GET_INTELLIGENT_ELECTRO_KOEFF</code> as a table.
     */
    public static GetIntelligentElectroKoeff GET_INTELLIGENT_ELECTRO_KOEFF(Field<String> login, Field<String> pass, Field<Short> useTransformationI, Field<Short> useTransformationU) {
        return ru.smartsarov.citylighting.sprut.tables.GetIntelligentElectroKoeff.GET_INTELLIGENT_ELECTRO_KOEFF.call(login, pass, useTransformationI, useTransformationU);
    }

    /**
     * The table <code>GET_LED_CURR</code>.
     */
    public static final GetLedCurr GET_LED_CURR = ru.smartsarov.citylighting.sprut.tables.GetLedCurr.GET_LED_CURR;

    /**
     * Call <code>GET_LED_CURR</code>.
     */
    public static Result<GetLedCurrRecord> GET_LED_CURR(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetLedCurr.GET_LED_CURR.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_LED_CURR</code> as a table.
     */
    public static GetLedCurr GET_LED_CURR(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetLedCurr.GET_LED_CURR.call(login, pass);
    }

    /**
     * Get <code>GET_LED_CURR</code> as a table.
     */
    public static GetLedCurr GET_LED_CURR(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetLedCurr.GET_LED_CURR.call(login, pass);
    }

    /**
     * The table <code>GET_MRCLOG</code>.
     */
    public static final GetMrclog GET_MRCLOG = ru.smartsarov.citylighting.sprut.tables.GetMrclog.GET_MRCLOG;

    /**
     * Call <code>GET_MRCLOG</code>.
     */
    public static Result<GetMrclogRecord> GET_MRCLOG(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetMrclog.GET_MRCLOG.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_MRCLOG</code> as a table.
     */
    public static GetMrclog GET_MRCLOG(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetMrclog.GET_MRCLOG.call(cid, sdate, edate);
    }

    /**
     * Get <code>GET_MRCLOG</code> as a table.
     */
    public static GetMrclog GET_MRCLOG(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetMrclog.GET_MRCLOG.call(cid, sdate, edate);
    }

    /**
     * The table <code>GET_MRCLOGLIST</code>.
     */
    public static final GetMrcloglist GET_MRCLOGLIST = ru.smartsarov.citylighting.sprut.tables.GetMrcloglist.GET_MRCLOGLIST;

    /**
     * Call <code>GET_MRCLOGLIST</code>.
     */
    public static Result<GetMrcloglistRecord> GET_MRCLOGLIST(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetMrcloglist.GET_MRCLOGLIST.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_MRCLOGLIST</code> as a table.
     */
    public static GetMrcloglist GET_MRCLOGLIST(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetMrcloglist.GET_MRCLOGLIST.call(cid, sdate, edate);
    }

    /**
     * Get <code>GET_MRCLOGLIST</code> as a table.
     */
    public static GetMrcloglist GET_MRCLOGLIST(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetMrcloglist.GET_MRCLOGLIST.call(cid, sdate, edate);
    }

    /**
     * The table <code>GET_MRCPWRLOG</code>.
     */
    public static final GetMrcpwrlog GET_MRCPWRLOG = ru.smartsarov.citylighting.sprut.tables.GetMrcpwrlog.GET_MRCPWRLOG;

    /**
     * Call <code>GET_MRCPWRLOG</code>.
     */
    public static Result<GetMrcpwrlogRecord> GET_MRCPWRLOG(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetMrcpwrlog.GET_MRCPWRLOG.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_MRCPWRLOG</code> as a table.
     */
    public static GetMrcpwrlog GET_MRCPWRLOG(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetMrcpwrlog.GET_MRCPWRLOG.call(cid, sdate, edate);
    }

    /**
     * Get <code>GET_MRCPWRLOG</code> as a table.
     */
    public static GetMrcpwrlog GET_MRCPWRLOG(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetMrcpwrlog.GET_MRCPWRLOG.call(cid, sdate, edate);
    }

    /**
     * The table <code>GET_OWENPR110_CURR</code>.
     */
    public static final GetOwenpr110Curr GET_OWENPR110_CURR = ru.smartsarov.citylighting.sprut.tables.GetOwenpr110Curr.GET_OWENPR110_CURR;

    /**
     * Call <code>GET_OWENPR110_CURR</code>.
     */
    public static Result<GetOwenpr110CurrRecord> GET_OWENPR110_CURR(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetOwenpr110Curr.GET_OWENPR110_CURR.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_OWENPR110_CURR</code> as a table.
     */
    public static GetOwenpr110Curr GET_OWENPR110_CURR(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetOwenpr110Curr.GET_OWENPR110_CURR.call(login, pass);
    }

    /**
     * Get <code>GET_OWENPR110_CURR</code> as a table.
     */
    public static GetOwenpr110Curr GET_OWENPR110_CURR(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetOwenpr110Curr.GET_OWENPR110_CURR.call(login, pass);
    }

    /**
     * The table <code>GET_PCS_ID</code>.
     */
    public static final GetPcsId GET_PCS_ID = ru.smartsarov.citylighting.sprut.tables.GetPcsId.GET_PCS_ID;

    /**
     * Call <code>GET_PCS_ID</code>.
     */
    public static Result<GetPcsIdRecord> GET_PCS_ID(Configuration configuration, Integer grdlgAbId, String grdlgIbutton) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetPcsId.GET_PCS_ID.call(grdlgAbId, grdlgIbutton)).fetch();
    }

    /**
     * Get <code>GET_PCS_ID</code> as a table.
     */
    public static GetPcsId GET_PCS_ID(Integer grdlgAbId, String grdlgIbutton) {
        return ru.smartsarov.citylighting.sprut.tables.GetPcsId.GET_PCS_ID.call(grdlgAbId, grdlgIbutton);
    }

    /**
     * Get <code>GET_PCS_ID</code> as a table.
     */
    public static GetPcsId GET_PCS_ID(Field<Integer> grdlgAbId, Field<String> grdlgIbutton) {
        return ru.smartsarov.citylighting.sprut.tables.GetPcsId.GET_PCS_ID.call(grdlgAbId, grdlgIbutton);
    }

    /**
     * The table <code>GET_PKE_LOG</code>.
     */
    public static final GetPkeLog GET_PKE_LOG = ru.smartsarov.citylighting.sprut.tables.GetPkeLog.GET_PKE_LOG;

    /**
     * Call <code>GET_PKE_LOG</code>.
     */
    public static Result<GetPkeLogRecord> GET_PKE_LOG(Configuration configuration, Integer cid, Integer kind, Date sdate, Date edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetPkeLog.GET_PKE_LOG.call(cid, kind, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_PKE_LOG</code> as a table.
     */
    public static GetPkeLog GET_PKE_LOG(Integer cid, Integer kind, Date sdate, Date edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeLog.GET_PKE_LOG.call(cid, kind, sdate, edate);
    }

    /**
     * Get <code>GET_PKE_LOG</code> as a table.
     */
    public static GetPkeLog GET_PKE_LOG(Field<Integer> cid, Field<Integer> kind, Field<Date> sdate, Field<Date> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeLog.GET_PKE_LOG.call(cid, kind, sdate, edate);
    }

    /**
     * The table <code>GET_PKE_LOG_JOINED</code>.
     */
    public static final GetPkeLogJoined GET_PKE_LOG_JOINED = ru.smartsarov.citylighting.sprut.tables.GetPkeLogJoined.GET_PKE_LOG_JOINED;

    /**
     * Call <code>GET_PKE_LOG_JOINED</code>.
     */
    public static Result<GetPkeLogJoinedRecord> GET_PKE_LOG_JOINED(Configuration configuration, Integer cid, Integer kind, Date sdate, Date edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetPkeLogJoined.GET_PKE_LOG_JOINED.call(cid, kind, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_PKE_LOG_JOINED</code> as a table.
     */
    public static GetPkeLogJoined GET_PKE_LOG_JOINED(Integer cid, Integer kind, Date sdate, Date edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeLogJoined.GET_PKE_LOG_JOINED.call(cid, kind, sdate, edate);
    }

    /**
     * Get <code>GET_PKE_LOG_JOINED</code> as a table.
     */
    public static GetPkeLogJoined GET_PKE_LOG_JOINED(Field<Integer> cid, Field<Integer> kind, Field<Date> sdate, Field<Date> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeLogJoined.GET_PKE_LOG_JOINED.call(cid, kind, sdate, edate);
    }

    /**
     * The table <code>GET_PKE_SUMS</code>.
     */
    public static final GetPkeSums GET_PKE_SUMS = ru.smartsarov.citylighting.sprut.tables.GetPkeSums.GET_PKE_SUMS;

    /**
     * Call <code>GET_PKE_SUMS</code>.
     */
    public static Result<GetPkeSumsRecord> GET_PKE_SUMS(Configuration configuration, Integer cid, Integer phase, Date sdate, Date edate, Integer byDay) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetPkeSums.GET_PKE_SUMS.call(cid, phase, sdate, edate, byDay)).fetch();
    }

    /**
     * Get <code>GET_PKE_SUMS</code> as a table.
     */
    public static GetPkeSums GET_PKE_SUMS(Integer cid, Integer phase, Date sdate, Date edate, Integer byDay) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeSums.GET_PKE_SUMS.call(cid, phase, sdate, edate, byDay);
    }

    /**
     * Get <code>GET_PKE_SUMS</code> as a table.
     */
    public static GetPkeSums GET_PKE_SUMS(Field<Integer> cid, Field<Integer> phase, Field<Date> sdate, Field<Date> edate, Field<Integer> byDay) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeSums.GET_PKE_SUMS.call(cid, phase, sdate, edate, byDay);
    }

    /**
     * The table <code>GET_PKE_TIMES</code>.
     */
    public static final GetPkeTimes GET_PKE_TIMES = ru.smartsarov.citylighting.sprut.tables.GetPkeTimes.GET_PKE_TIMES;

    /**
     * Call <code>GET_PKE_TIMES</code>.
     */
    public static Result<GetPkeTimesRecord> GET_PKE_TIMES(Configuration configuration, Integer cid, Date sdate, Date edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetPkeTimes.GET_PKE_TIMES.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>GET_PKE_TIMES</code> as a table.
     */
    public static GetPkeTimes GET_PKE_TIMES(Integer cid, Date sdate, Date edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeTimes.GET_PKE_TIMES.call(cid, sdate, edate);
    }

    /**
     * Get <code>GET_PKE_TIMES</code> as a table.
     */
    public static GetPkeTimes GET_PKE_TIMES(Field<Integer> cid, Field<Date> sdate, Field<Date> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GetPkeTimes.GET_PKE_TIMES.call(cid, sdate, edate);
    }

    /**
     * The table <code>GET_PROCEDURE_FIELD</code>.
     */
    public static final GetProcedureField GET_PROCEDURE_FIELD = ru.smartsarov.citylighting.sprut.tables.GetProcedureField.GET_PROCEDURE_FIELD;

    /**
     * Call <code>GET_PROCEDURE_FIELD</code>.
     */
    public static Result<GetProcedureFieldRecord> GET_PROCEDURE_FIELD(Configuration configuration, String name) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetProcedureField.GET_PROCEDURE_FIELD.call(name)).fetch();
    }

    /**
     * Get <code>GET_PROCEDURE_FIELD</code> as a table.
     */
    public static GetProcedureField GET_PROCEDURE_FIELD(String name) {
        return ru.smartsarov.citylighting.sprut.tables.GetProcedureField.GET_PROCEDURE_FIELD.call(name);
    }

    /**
     * Get <code>GET_PROCEDURE_FIELD</code> as a table.
     */
    public static GetProcedureField GET_PROCEDURE_FIELD(Field<String> name) {
        return ru.smartsarov.citylighting.sprut.tables.GetProcedureField.GET_PROCEDURE_FIELD.call(name);
    }

    /**
     * The table <code>GET_TABLE_FIELD</code>.
     */
    public static final GetTableField GET_TABLE_FIELD = ru.smartsarov.citylighting.sprut.tables.GetTableField.GET_TABLE_FIELD;

    /**
     * Call <code>GET_TABLE_FIELD</code>.
     */
    public static Result<GetTableFieldRecord> GET_TABLE_FIELD(Configuration configuration, String name) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetTableField.GET_TABLE_FIELD.call(name)).fetch();
    }

    /**
     * Get <code>GET_TABLE_FIELD</code> as a table.
     */
    public static GetTableField GET_TABLE_FIELD(String name) {
        return ru.smartsarov.citylighting.sprut.tables.GetTableField.GET_TABLE_FIELD.call(name);
    }

    /**
     * Get <code>GET_TABLE_FIELD</code> as a table.
     */
    public static GetTableField GET_TABLE_FIELD(Field<String> name) {
        return ru.smartsarov.citylighting.sprut.tables.GetTableField.GET_TABLE_FIELD.call(name);
    }

    /**
     * The table <code>GET_USKA</code>.
     */
    public static final GetUska GET_USKA = ru.smartsarov.citylighting.sprut.tables.GetUska.GET_USKA;

    /**
     * Call <code>GET_USKA</code>.
     */
    public static Result<GetUskaRecord> GET_USKA(Configuration configuration, String login, String pass, Integer uid, Timestamp fromDate, Timestamp toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUska.GET_USKA.call(login, pass, uid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_USKA</code> as a table.
     */
    public static GetUska GET_USKA(String login, String pass, Integer uid, Timestamp fromDate, Timestamp toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetUska.GET_USKA.call(login, pass, uid, fromDate, toDate);
    }

    /**
     * Get <code>GET_USKA</code> as a table.
     */
    public static GetUska GET_USKA(Field<String> login, Field<String> pass, Field<Integer> uid, Field<Timestamp> fromDate, Field<Timestamp> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetUska.GET_USKA.call(login, pass, uid, fromDate, toDate);
    }

    /**
     * The table <code>GET_USKC</code>.
     */
    public static final GetUskc GET_USKC = ru.smartsarov.citylighting.sprut.tables.GetUskc.GET_USKC;

    /**
     * Call <code>GET_USKC</code>.
     */
    public static Result<GetUskcRecord> GET_USKC(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUskc.GET_USKC.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USKC</code> as a table.
     */
    public static GetUskc GET_USKC(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUskc.GET_USKC.call(login, pass);
    }

    /**
     * Get <code>GET_USKC</code> as a table.
     */
    public static GetUskc GET_USKC(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUskc.GET_USKC.call(login, pass);
    }

    /**
     * The table <code>GET_USKC_EXT</code>.
     */
    public static final GetUskcExt GET_USKC_EXT = ru.smartsarov.citylighting.sprut.tables.GetUskcExt.GET_USKC_EXT;

    /**
     * Call <code>GET_USKC_EXT</code>.
     */
    public static Result<GetUskcExtRecord> GET_USKC_EXT(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUskcExt.GET_USKC_EXT.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USKC_EXT</code> as a table.
     */
    public static GetUskcExt GET_USKC_EXT(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUskcExt.GET_USKC_EXT.call(login, pass);
    }

    /**
     * Get <code>GET_USKC_EXT</code> as a table.
     */
    public static GetUskcExt GET_USKC_EXT(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUskcExt.GET_USKC_EXT.call(login, pass);
    }

    /**
     * The table <code>GET_USKLC</code>.
     */
    public static final GetUsklc GET_USKLC = ru.smartsarov.citylighting.sprut.tables.GetUsklc.GET_USKLC;

    /**
     * Call <code>GET_USKLC</code>.
     */
    public static Result<GetUsklcRecord> GET_USKLC(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUsklc.GET_USKLC.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USKLC</code> as a table.
     */
    public static GetUsklc GET_USKLC(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUsklc.GET_USKLC.call(login, pass);
    }

    /**
     * Get <code>GET_USKLC</code> as a table.
     */
    public static GetUsklc GET_USKLC(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUsklc.GET_USKLC.call(login, pass);
    }

    /**
     * The table <code>GET_USKL_LOG</code>.
     */
    public static final GetUsklLog GET_USKL_LOG = ru.smartsarov.citylighting.sprut.tables.GetUsklLog.GET_USKL_LOG;

    /**
     * Call <code>GET_USKL_LOG</code>.
     */
    public static Result<GetUsklLogRecord> GET_USKL_LOG(Configuration configuration, String login, String pass, Integer uid, Timestamp fromDate, Timestamp toDate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUsklLog.GET_USKL_LOG.call(login, pass, uid, fromDate, toDate)).fetch();
    }

    /**
     * Get <code>GET_USKL_LOG</code> as a table.
     */
    public static GetUsklLog GET_USKL_LOG(String login, String pass, Integer uid, Timestamp fromDate, Timestamp toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetUsklLog.GET_USKL_LOG.call(login, pass, uid, fromDate, toDate);
    }

    /**
     * Get <code>GET_USKL_LOG</code> as a table.
     */
    public static GetUsklLog GET_USKL_LOG(Field<String> login, Field<String> pass, Field<Integer> uid, Field<Timestamp> fromDate, Field<Timestamp> toDate) {
        return ru.smartsarov.citylighting.sprut.tables.GetUsklLog.GET_USKL_LOG.call(login, pass, uid, fromDate, toDate);
    }

    /**
     * The table <code>GET_USPDUNO</code>.
     */
    public static final GetUspduno GET_USPDUNO = ru.smartsarov.citylighting.sprut.tables.GetUspduno.GET_USPDUNO;

    /**
     * Call <code>GET_USPDUNO</code>.
     */
    public static Result<GetUspdunoRecord> GET_USPDUNO(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUspduno.GET_USPDUNO.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USPDUNO</code> as a table.
     */
    public static GetUspduno GET_USPDUNO(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspduno.GET_USPDUNO.call(login, pass);
    }

    /**
     * Get <code>GET_USPDUNO</code> as a table.
     */
    public static GetUspduno GET_USPDUNO(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspduno.GET_USPDUNO.call(login, pass);
    }

    /**
     * The table <code>GET_USPDUNO_CONTROL_NOAD_NET</code>.
     */
    public static final GetUspdunoControlNoadNet GET_USPDUNO_CONTROL_NOAD_NET = ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadNet.GET_USPDUNO_CONTROL_NOAD_NET;

    /**
     * Call <code>GET_USPDUNO_CONTROL_NOAD_NET</code>.
     */
    public static Result<GetUspdunoControlNoadNetRecord> GET_USPDUNO_CONTROL_NOAD_NET(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadNet.GET_USPDUNO_CONTROL_NOAD_NET.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USPDUNO_CONTROL_NOAD_NET</code> as a table.
     */
    public static GetUspdunoControlNoadNet GET_USPDUNO_CONTROL_NOAD_NET(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadNet.GET_USPDUNO_CONTROL_NOAD_NET.call(login, pass);
    }

    /**
     * Get <code>GET_USPDUNO_CONTROL_NOAD_NET</code> as a table.
     */
    public static GetUspdunoControlNoadNet GET_USPDUNO_CONTROL_NOAD_NET(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadNet.GET_USPDUNO_CONTROL_NOAD_NET.call(login, pass);
    }

    /**
     * The table <code>GET_USPDUNO_CONTROL_NOAD_STATE</code>.
     */
    public static final GetUspdunoControlNoadState GET_USPDUNO_CONTROL_NOAD_STATE = ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadState.GET_USPDUNO_CONTROL_NOAD_STATE;

    /**
     * Call <code>GET_USPDUNO_CONTROL_NOAD_STATE</code>.
     */
    public static Result<GetUspdunoControlNoadStateRecord> GET_USPDUNO_CONTROL_NOAD_STATE(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadState.GET_USPDUNO_CONTROL_NOAD_STATE.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USPDUNO_CONTROL_NOAD_STATE</code> as a table.
     */
    public static GetUspdunoControlNoadState GET_USPDUNO_CONTROL_NOAD_STATE(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadState.GET_USPDUNO_CONTROL_NOAD_STATE.call(login, pass);
    }

    /**
     * Get <code>GET_USPDUNO_CONTROL_NOAD_STATE</code> as a table.
     */
    public static GetUspdunoControlNoadState GET_USPDUNO_CONTROL_NOAD_STATE(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspdunoControlNoadState.GET_USPDUNO_CONTROL_NOAD_STATE.call(login, pass);
    }

    /**
     * The table <code>GET_USPDUNO_EXT</code>.
     */
    public static final GetUspdunoExt GET_USPDUNO_EXT = ru.smartsarov.citylighting.sprut.tables.GetUspdunoExt.GET_USPDUNO_EXT;

    /**
     * Call <code>GET_USPDUNO_EXT</code>.
     */
    public static Result<GetUspdunoExtRecord> GET_USPDUNO_EXT(Configuration configuration, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetUspdunoExt.GET_USPDUNO_EXT.call(login, pass)).fetch();
    }

    /**
     * Get <code>GET_USPDUNO_EXT</code> as a table.
     */
    public static GetUspdunoExt GET_USPDUNO_EXT(String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspdunoExt.GET_USPDUNO_EXT.call(login, pass);
    }

    /**
     * Get <code>GET_USPDUNO_EXT</code> as a table.
     */
    public static GetUspdunoExt GET_USPDUNO_EXT(Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.GetUspdunoExt.GET_USPDUNO_EXT.call(login, pass);
    }

    /**
     * The table <code>GET_XGRP_TYPE</code>.
     */
    public static final GetXgrpType GET_XGRP_TYPE = ru.smartsarov.citylighting.sprut.tables.GetXgrpType.GET_XGRP_TYPE;

    /**
     * Call <code>GET_XGRP_TYPE</code>.
     */
    public static Result<GetXgrpTypeRecord> GET_XGRP_TYPE(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetXgrpType.GET_XGRP_TYPE.call()).fetch();
    }

    /**
     * Get <code>GET_XGRP_TYPE</code> as a table.
     */
    public static GetXgrpType GET_XGRP_TYPE() {
        return ru.smartsarov.citylighting.sprut.tables.GetXgrpType.GET_XGRP_TYPE.call();
    }

    /**
     * The table <code>GET_XINTERFASE</code>.
     */
    public static final GetXinterfase GET_XINTERFASE = ru.smartsarov.citylighting.sprut.tables.GetXinterfase.GET_XINTERFASE;

    /**
     * Call <code>GET_XINTERFASE</code>.
     */
    public static Result<GetXinterfaseRecord> GET_XINTERFASE(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GetXinterfase.GET_XINTERFASE.call()).fetch();
    }

    /**
     * Get <code>GET_XINTERFASE</code> as a table.
     */
    public static GetXinterfase GET_XINTERFASE() {
        return ru.smartsarov.citylighting.sprut.tables.GetXinterfase.GET_XINTERFASE.call();
    }

    /**
     * The table <code>GPRS_CURR</code>.
     */
    public static final GprsCurr GPRS_CURR = ru.smartsarov.citylighting.sprut.tables.GprsCurr.GPRS_CURR;

    /**
     * The table <code>GPRS_TELEMETRY</code>.
     */
    public static final GprsTelemetry GPRS_TELEMETRY = ru.smartsarov.citylighting.sprut.tables.GprsTelemetry.GPRS_TELEMETRY;

    /**
     * The table <code>GPRS_TRAFFIC</code>.
     */
    public static final GprsTraffic GPRS_TRAFFIC = ru.smartsarov.citylighting.sprut.tables.GprsTraffic.GPRS_TRAFFIC;

    /**
     * The table <code>GPRS_TRAFFIC_REPORT</code>.
     */
    public static final GprsTrafficReport GPRS_TRAFFIC_REPORT = ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT;

    /**
     * Call <code>GPRS_TRAFFIC_REPORT</code>.
     */
    public static Result<GprsTrafficReportRecord> GPRS_TRAFFIC_REPORT(Configuration configuration, String login, String pass, Date sdate, Date edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate)).fetch();
    }

    /**
     * Get <code>GPRS_TRAFFIC_REPORT</code> as a table.
     */
    public static GprsTrafficReport GPRS_TRAFFIC_REPORT(String login, String pass, Date sdate, Date edate) {
        return ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate);
    }

    /**
     * Get <code>GPRS_TRAFFIC_REPORT</code> as a table.
     */
    public static GprsTrafficReport GPRS_TRAFFIC_REPORT(Field<String> login, Field<String> pass, Field<Date> sdate, Field<Date> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate);
    }

    /**
     * The table <code>GRAPHICS</code>.
     */
    public static final Graphics GRAPHICS = ru.smartsarov.citylighting.sprut.tables.Graphics.GRAPHICS;

    /**
     * The table <code>GRAPHICS_PIN_MANUAL</code>.
     */
    public static final GraphicsPinManual GRAPHICS_PIN_MANUAL = ru.smartsarov.citylighting.sprut.tables.GraphicsPinManual.GRAPHICS_PIN_MANUAL;

    /**
     * The table <code>GRDL_CHANGE</code>.
     */
    public static final GrdlChange GRDL_CHANGE = ru.smartsarov.citylighting.sprut.tables.GrdlChange.GRDL_CHANGE;

    /**
     * The table <code>GRDL_SYNC</code>.
     */
    public static final GrdlSync GRDL_SYNC = ru.smartsarov.citylighting.sprut.tables.GrdlSync.GRDL_SYNC;

    /**
     * The table <code>GRDZ_CHANGE</code>.
     */
    public static final GrdzChange GRDZ_CHANGE = ru.smartsarov.citylighting.sprut.tables.GrdzChange.GRDZ_CHANGE;

    /**
     * The table <code>GUARD_ALARM_PROCESS</code>.
     */
    public static final GuardAlarmProcess GUARD_ALARM_PROCESS = ru.smartsarov.citylighting.sprut.tables.GuardAlarmProcess.GUARD_ALARM_PROCESS;

    /**
     * The table <code>GUARD_ATYPE</code>.
     */
    public static final GuardAtype GUARD_ATYPE = ru.smartsarov.citylighting.sprut.tables.GuardAtype.GUARD_ATYPE;

    /**
     * The table <code>GUARD_CAM</code>.
     */
    public static final GuardCam GUARD_CAM = ru.smartsarov.citylighting.sprut.tables.GuardCam.GUARD_CAM;

    /**
     * The table <code>GUARD_CTYPE</code>.
     */
    public static final GuardCtype GUARD_CTYPE = ru.smartsarov.citylighting.sprut.tables.GuardCtype.GUARD_CTYPE;

    /**
     * The table <code>GUARD_EVENT</code>.
     */
    public static final GuardEvent GUARD_EVENT = ru.smartsarov.citylighting.sprut.tables.GuardEvent.GUARD_EVENT;

    /**
     * The table <code>GUARD_EXSTATE</code>.
     */
    public static final GuardExstate GUARD_EXSTATE = ru.smartsarov.citylighting.sprut.tables.GuardExstate.GUARD_EXSTATE;

    /**
     * The table <code>GUARD_GROUP</code>.
     */
    public static final GuardGroup GUARD_GROUP = ru.smartsarov.citylighting.sprut.tables.GuardGroup.GUARD_GROUP;

    /**
     * The table <code>GUARD_INFORM</code>.
     */
    public static final GuardInform GUARD_INFORM = ru.smartsarov.citylighting.sprut.tables.GuardInform.GUARD_INFORM;

    /**
     * The table <code>GUARD_ITYPE</code>.
     */
    public static final GuardItype GUARD_ITYPE = ru.smartsarov.citylighting.sprut.tables.GuardItype.GUARD_ITYPE;

    /**
     * The table <code>GUARD_KEY</code>.
     */
    public static final GuardKey GUARD_KEY = ru.smartsarov.citylighting.sprut.tables.GuardKey.GUARD_KEY;

    /**
     * The table <code>GUARD_LINE</code>.
     */
    public static final GuardLine GUARD_LINE = ru.smartsarov.citylighting.sprut.tables.GuardLine.GUARD_LINE;

    /**
     * The table <code>GUARD_LOG</code>.
     */
    public static final GuardLog GUARD_LOG = ru.smartsarov.citylighting.sprut.tables.GuardLog.GUARD_LOG;

    /**
     * The table <code>GUARD_LSOST</code>.
     */
    public static final GuardLsost GUARD_LSOST = ru.smartsarov.citylighting.sprut.tables.GuardLsost.GUARD_LSOST;

    /**
     * The table <code>GUARD_LSTATE</code>.
     */
    public static final GuardLstate GUARD_LSTATE = ru.smartsarov.citylighting.sprut.tables.GuardLstate.GUARD_LSTATE;

    /**
     * The table <code>GUARD_MAIL</code>.
     */
    public static final GuardMail GUARD_MAIL = ru.smartsarov.citylighting.sprut.tables.GuardMail.GUARD_MAIL;

    /**
     * The table <code>GUARD_PHONE</code>.
     */
    public static final GuardPhone GUARD_PHONE = ru.smartsarov.citylighting.sprut.tables.GuardPhone.GUARD_PHONE;

    /**
     * The table <code>GUARD_PIN</code>.
     */
    public static final GuardPin GUARD_PIN = ru.smartsarov.citylighting.sprut.tables.GuardPin.GUARD_PIN;

    /**
     * The table <code>GUARD_PINDEV</code>.
     */
    public static final GuardPindev GUARD_PINDEV = ru.smartsarov.citylighting.sprut.tables.GuardPindev.GUARD_PINDEV;

    /**
     * The table <code>GUARD_PINTYPE</code>.
     */
    public static final GuardPintype GUARD_PINTYPE = ru.smartsarov.citylighting.sprut.tables.GuardPintype.GUARD_PINTYPE;

    /**
     * The table <code>GUARD_PIN_CURR</code>.
     */
    public static final GuardPinCurr GUARD_PIN_CURR = ru.smartsarov.citylighting.sprut.tables.GuardPinCurr.GUARD_PIN_CURR;

    /**
     * The table <code>GUARD_PIN_EVENT_DESRC</code>.
     */
    public static final GuardPinEventDesrc GUARD_PIN_EVENT_DESRC = ru.smartsarov.citylighting.sprut.tables.GuardPinEventDesrc.GUARD_PIN_EVENT_DESRC;

    /**
     * The table <code>GUARD_PIN_LOG</code>.
     */
    public static final GuardPinLog GUARD_PIN_LOG = ru.smartsarov.citylighting.sprut.tables.GuardPinLog.GUARD_PIN_LOG;

    /**
     * The table <code>GUARD_PIN_NETSOST</code>.
     */
    public static final GuardPinNetsost GUARD_PIN_NETSOST = ru.smartsarov.citylighting.sprut.tables.GuardPinNetsost.GUARD_PIN_NETSOST;

    /**
     * The table <code>GUARD_PIN_STYPE</code>.
     */
    public static final GuardPinStype GUARD_PIN_STYPE = ru.smartsarov.citylighting.sprut.tables.GuardPinStype.GUARD_PIN_STYPE;

    /**
     * The table <code>GUARD_RELAY</code>.
     */
    public static final GuardRelay GUARD_RELAY = ru.smartsarov.citylighting.sprut.tables.GuardRelay.GUARD_RELAY;

    /**
     * The table <code>GUARD_SMS</code>.
     */
    public static final GuardSms GUARD_SMS = ru.smartsarov.citylighting.sprut.tables.GuardSms.GUARD_SMS;

    /**
     * The table <code>GUARD_SMSSTAT</code>.
     */
    public static final GuardSmsstat GUARD_SMSSTAT = ru.smartsarov.citylighting.sprut.tables.GuardSmsstat.GUARD_SMSSTAT;

    /**
     * The table <code>GUARD_SSOST</code>.
     */
    public static final GuardSsost GUARD_SSOST = ru.smartsarov.citylighting.sprut.tables.GuardSsost.GUARD_SSOST;

    /**
     * The table <code>GUARD_USTATE</code>.
     */
    public static final GuardUstate GUARD_USTATE = ru.smartsarov.citylighting.sprut.tables.GuardUstate.GUARD_USTATE;

    /**
     * The table <code>GUARD_VALVE</code>.
     */
    public static final GuardValve GUARD_VALVE = ru.smartsarov.citylighting.sprut.tables.GuardValve.GUARD_VALVE;

    /**
     * The table <code>GUARD_VTYPE</code>.
     */
    public static final GuardVtype GUARD_VTYPE = ru.smartsarov.citylighting.sprut.tables.GuardVtype.GUARD_VTYPE;

    /**
     * The table <code>GUARD_ZONE</code>.
     */
    public static final GuardZone GUARD_ZONE = ru.smartsarov.citylighting.sprut.tables.GuardZone.GUARD_ZONE;

    /**
     * The table <code>HOME</code>.
     */
    public static final Home HOME = ru.smartsarov.citylighting.sprut.tables.Home.HOME;

    /**
     * The table <code>HOME_TYPE</code>.
     */
    public static final HomeType HOME_TYPE = ru.smartsarov.citylighting.sprut.tables.HomeType.HOME_TYPE;

    /**
     * The table <code>INS_GUARD_LOG</code>.
     */
    public static final InsGuardLog INS_GUARD_LOG = ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG;

    /**
     * Call <code>INS_GUARD_LOG</code>.
     */
    public static Result<InsGuardLogRecord> INS_GUARD_LOG(Configuration configuration, Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgEid) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid)).fetch();
    }

    /**
     * Get <code>INS_GUARD_LOG</code> as a table.
     */
    public static InsGuardLog INS_GUARD_LOG(Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid);
    }

    /**
     * Get <code>INS_GUARD_LOG</code> as a table.
     */
    public static InsGuardLog INS_GUARD_LOG(Field<Integer> grdlgAbId, Field<Integer> grdlgUnkId, Field<Integer> grdlgZid, Field<Integer> grdlgLid, Field<Short> grdlgEvent, Field<Short> grdlgSsost, Field<Short> grdlgDsost, Field<Short> grdlgLsost, Field<Timestamp> grdlgDatetime, Field<Short> grdlgDelay, Field<String> grdlgIbutton, Field<Integer> grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid);
    }

    /**
     * The table <code>INS_GUARD_LOG_2</code>.
     */
    public static final InsGuardLog_2 INS_GUARD_LOG_2 = ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2;

    /**
     * Call <code>INS_GUARD_LOG_2</code>.
     */
    public static Result<InsGuardLog_2Record> INS_GUARD_LOG_2(Configuration configuration, Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgPcsId, Integer grdlgEid) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid)).fetch();
    }

    /**
     * Get <code>INS_GUARD_LOG_2</code> as a table.
     */
    public static InsGuardLog_2 INS_GUARD_LOG_2(Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgPcsId, Integer grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid);
    }

    /**
     * Get <code>INS_GUARD_LOG_2</code> as a table.
     */
    public static InsGuardLog_2 INS_GUARD_LOG_2(Field<Integer> grdlgAbId, Field<Integer> grdlgUnkId, Field<Integer> grdlgZid, Field<Integer> grdlgLid, Field<Short> grdlgEvent, Field<Short> grdlgSsost, Field<Short> grdlgDsost, Field<Short> grdlgLsost, Field<Timestamp> grdlgDatetime, Field<Short> grdlgDelay, Field<String> grdlgIbutton, Field<Integer> grdlgPcsId, Field<Integer> grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid);
    }

    /**
     * The table <code>INS_XGROUP</code>.
     */
    public static final InsXgroup INS_XGROUP = ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP;

    /**
     * Call <code>INS_XGROUP</code>.
     */
    public static Result<InsXgroupRecord> INS_XGROUP(Configuration configuration, Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword)).fetch();
    }

    /**
     * Get <code>INS_XGROUP</code> as a table.
     */
    public static InsXgroup INS_XGROUP(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Get <code>INS_XGROUP</code> as a table.
     */
    public static InsXgroup INS_XGROUP(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * The table <code>INS_XUSER</code>.
     */
    public static final InsXuser INS_XUSER = ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER;

    /**
     * Call <code>INS_XUSER</code>.
     */
    public static Result<InsXuserRecord> INS_XUSER(Configuration configuration, Integer userId, Integer userAbId, Integer userGrpId, Integer userType, String userName, String userPassword, String userKey, String userDescription) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription)).fetch();
    }

    /**
     * Get <code>INS_XUSER</code> as a table.
     */
    public static InsXuser INS_XUSER(Integer userId, Integer userAbId, Integer userGrpId, Integer userType, String userName, String userPassword, String userKey, String userDescription) {
        return ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription);
    }

    /**
     * Get <code>INS_XUSER</code> as a table.
     */
    public static InsXuser INS_XUSER(Field<Integer> userId, Field<Integer> userAbId, Field<Integer> userGrpId, Field<Integer> userType, Field<String> userName, Field<String> userPassword, Field<String> userKey, Field<String> userDescription) {
        return ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription);
    }

    /**
     * The table <code>LED_CONTROL_ARCH</code>.
     */
    public static final LedControlArch LED_CONTROL_ARCH = ru.smartsarov.citylighting.sprut.tables.LedControlArch.LED_CONTROL_ARCH;

    /**
     * The table <code>LED_CONTROL_CURR</code>.
     */
    public static final LedControlCurr LED_CONTROL_CURR = ru.smartsarov.citylighting.sprut.tables.LedControlCurr.LED_CONTROL_CURR;

    /**
     * The table <code>LIGHT_ACTION</code>.
     */
    public static final LightAction LIGHT_ACTION = ru.smartsarov.citylighting.sprut.tables.LightAction.LIGHT_ACTION;

    /**
     * The table <code>LIGHT_BLOCK</code>.
     */
    public static final LightBlock LIGHT_BLOCK = ru.smartsarov.citylighting.sprut.tables.LightBlock.LIGHT_BLOCK;

    /**
     * The table <code>LIGHT_BOX</code>.
     */
    public static final LightBox LIGHT_BOX = ru.smartsarov.citylighting.sprut.tables.LightBox.LIGHT_BOX;

    /**
     * The table <code>LIGHT_LINE</code>.
     */
    public static final LightLine LIGHT_LINE = ru.smartsarov.citylighting.sprut.tables.LightLine.LIGHT_LINE;

    /**
     * The table <code>LIGHT_SHEDULE</code>.
     */
    public static final LightShedule LIGHT_SHEDULE = ru.smartsarov.citylighting.sprut.tables.LightShedule.LIGHT_SHEDULE;

    /**
     * The table <code>LIGHT_SHIFT</code>.
     */
    public static final LightShift LIGHT_SHIFT = ru.smartsarov.citylighting.sprut.tables.LightShift.LIGHT_SHIFT;

    /**
     * The table <code>LIST_HOME</code>.
     */
    public static final ListHome LIST_HOME = ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME;

    /**
     * Call <code>LIST_HOME</code>.
     */
    public static Result<ListHomeRecord> LIST_HOME(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME.call()).fetch();
    }

    /**
     * Get <code>LIST_HOME</code> as a table.
     */
    public static ListHome LIST_HOME() {
        return ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME.call();
    }

    /**
     * The table <code>LIST_STREET</code>.
     */
    public static final ListStreet LIST_STREET = ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET;

    /**
     * Call <code>LIST_STREET</code>.
     */
    public static Result<ListStreetRecord> LIST_STREET(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET.call()).fetch();
    }

    /**
     * Get <code>LIST_STREET</code> as a table.
     */
    public static ListStreet LIST_STREET() {
        return ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET.call();
    }

    /**
     * The table <code>LOOK_INTELLIGENT_ELECTRO</code>.
     */
    public static final LookIntelligentElectro LOOK_INTELLIGENT_ELECTRO = ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO;

    /**
     * Call <code>LOOK_INTELLIGENT_ELECTRO</code>.
     */
    public static Result<LookIntelligentElectroRecord> LOOK_INTELLIGENT_ELECTRO(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO.call()).fetch();
    }

    /**
     * Get <code>LOOK_INTELLIGENT_ELECTRO</code> as a table.
     */
    public static LookIntelligentElectro LOOK_INTELLIGENT_ELECTRO() {
        return ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO.call();
    }

    /**
     * The table <code>MON$ATTACHMENTS</code>.
     */
    public static final Mon$attachments MON$ATTACHMENTS = ru.smartsarov.citylighting.sprut.tables.Mon$attachments.MON$ATTACHMENTS;

    /**
     * The table <code>MON$CALL_STACK</code>.
     */
    public static final Mon$callStack MON$CALL_STACK = ru.smartsarov.citylighting.sprut.tables.Mon$callStack.MON$CALL_STACK;

    /**
     * The table <code>MON$CONTEXT_VARIABLES</code>.
     */
    public static final Mon$contextVariables MON$CONTEXT_VARIABLES = ru.smartsarov.citylighting.sprut.tables.Mon$contextVariables.MON$CONTEXT_VARIABLES;

    /**
     * The table <code>MON$DATABASE</code>.
     */
    public static final Mon$database MON$DATABASE = ru.smartsarov.citylighting.sprut.tables.Mon$database.MON$DATABASE;

    /**
     * The table <code>MON$IO_STATS</code>.
     */
    public static final Mon$ioStats MON$IO_STATS = ru.smartsarov.citylighting.sprut.tables.Mon$ioStats.MON$IO_STATS;

    /**
     * The table <code>MON$MEMORY_USAGE</code>.
     */
    public static final Mon$memoryUsage MON$MEMORY_USAGE = ru.smartsarov.citylighting.sprut.tables.Mon$memoryUsage.MON$MEMORY_USAGE;

    /**
     * The table <code>MON$RECORD_STATS</code>.
     */
    public static final Mon$recordStats MON$RECORD_STATS = ru.smartsarov.citylighting.sprut.tables.Mon$recordStats.MON$RECORD_STATS;

    /**
     * The table <code>MON$STATEMENTS</code>.
     */
    public static final Mon$statements MON$STATEMENTS = ru.smartsarov.citylighting.sprut.tables.Mon$statements.MON$STATEMENTS;

    /**
     * The table <code>MON$TRANSACTIONS</code>.
     */
    public static final Mon$transactions MON$TRANSACTIONS = ru.smartsarov.citylighting.sprut.tables.Mon$transactions.MON$TRANSACTIONS;

    /**
     * The table <code>MRC_HOUR_PWR_PROFILE</code>.
     */
    public static final MrcHourPwrProfile MRC_HOUR_PWR_PROFILE = ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE;

    /**
     * Call <code>MRC_HOUR_PWR_PROFILE</code>.
     */
    public static Result<MrcHourPwrProfileRecord> MRC_HOUR_PWR_PROFILE(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>MRC_HOUR_PWR_PROFILE</code> as a table.
     */
    public static MrcHourPwrProfile MRC_HOUR_PWR_PROFILE(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate);
    }

    /**
     * Get <code>MRC_HOUR_PWR_PROFILE</code> as a table.
     */
    public static MrcHourPwrProfile MRC_HOUR_PWR_PROFILE(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate);
    }

    /**
     * The table <code>NORMATIVE</code>.
     */
    public static final Normative NORMATIVE = ru.smartsarov.citylighting.sprut.tables.Normative.NORMATIVE;

    /**
     * The table <code>NORMATIVE_CNT_LINK</code>.
     */
    public static final NormativeCntLink NORMATIVE_CNT_LINK = ru.smartsarov.citylighting.sprut.tables.NormativeCntLink.NORMATIVE_CNT_LINK;

    /**
     * The table <code>NORMATIVE_ELCTR</code>.
     */
    public static final NormativeElctr NORMATIVE_ELCTR = ru.smartsarov.citylighting.sprut.tables.NormativeElctr.NORMATIVE_ELCTR;

    /**
     * The table <code>NORMATIVE_GAS</code>.
     */
    public static final NormativeGas NORMATIVE_GAS = ru.smartsarov.citylighting.sprut.tables.NormativeGas.NORMATIVE_GAS;

    /**
     * The table <code>NORMATIVE_HEAT</code>.
     */
    public static final NormativeHeat NORMATIVE_HEAT = ru.smartsarov.citylighting.sprut.tables.NormativeHeat.NORMATIVE_HEAT;

    /**
     * The table <code>NORMATIVE_METER</code>.
     */
    public static final NormativeMeter NORMATIVE_METER = ru.smartsarov.citylighting.sprut.tables.NormativeMeter.NORMATIVE_METER;

    /**
     * The table <code>NORMATIVE_WATER</code>.
     */
    public static final NormativeWater NORMATIVE_WATER = ru.smartsarov.citylighting.sprut.tables.NormativeWater.NORMATIVE_WATER;

    /**
     * The table <code>OBJ_ACTION_AVAILABLE</code>.
     */
    public static final ObjActionAvailable OBJ_ACTION_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjActionAvailable.OBJ_ACTION_AVAILABLE;

    /**
     * The table <code>OBJ_ACTION_AVAILABLE_GET</code>.
     */
    public static final ObjActionAvailableGet OBJ_ACTION_AVAILABLE_GET = ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET;

    /**
     * Call <code>OBJ_ACTION_AVAILABLE_GET</code>.
     */
    public static Result<ObjActionAvailableGetRecord> OBJ_ACTION_AVAILABLE_GET(Configuration configuration, String login, String pass, Integer objId, Integer objType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType)).fetch();
    }

    /**
     * Get <code>OBJ_ACTION_AVAILABLE_GET</code> as a table.
     */
    public static ObjActionAvailableGet OBJ_ACTION_AVAILABLE_GET(String login, String pass, Integer objId, Integer objType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType);
    }

    /**
     * Get <code>OBJ_ACTION_AVAILABLE_GET</code> as a table.
     */
    public static ObjActionAvailableGet OBJ_ACTION_AVAILABLE_GET(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType);
    }

    /**
     * The table <code>OBJ_ACTION_STATE_AVAILABLE</code>.
     */
    public static final ObjActionStateAvailable OBJ_ACTION_STATE_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjActionStateAvailable.OBJ_ACTION_STATE_AVAILABLE;

    /**
     * The table <code>OBJ_ARCHIVE_PERIOD</code>.
     */
    public static final ObjArchivePeriod OBJ_ARCHIVE_PERIOD = ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriod.OBJ_ARCHIVE_PERIOD;

    /**
     * The table <code>OBJ_ARCHIVE_PERIOD_AVAILABLE</code>.
     */
    public static final ObjArchivePeriodAvailable OBJ_ARCHIVE_PERIOD_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriodAvailable.OBJ_ARCHIVE_PERIOD_AVAILABLE;

    /**
     * The table <code>OBJ_ARCHIVE_TYPE</code>.
     */
    public static final ObjArchiveType OBJ_ARCHIVE_TYPE = ru.smartsarov.citylighting.sprut.tables.ObjArchiveType.OBJ_ARCHIVE_TYPE;

    /**
     * The table <code>OBJ_ARCHIVE_TYPE_AVAILABLE</code>.
     */
    public static final ObjArchiveTypeAvailable OBJ_ARCHIVE_TYPE_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjArchiveTypeAvailable.OBJ_ARCHIVE_TYPE_AVAILABLE;

    /**
     * The table <code>OBJ_COMMENT</code>.
     */
    public static final ObjComment OBJ_COMMENT = ru.smartsarov.citylighting.sprut.tables.ObjComment.OBJ_COMMENT;

    /**
     * The table <code>OBJ_CONTROL</code>.
     */
    public static final ObjControl OBJ_CONTROL = ru.smartsarov.citylighting.sprut.tables.ObjControl.OBJ_CONTROL;

    /**
     * The table <code>OBJ_CONTROL_GET</code>.
     */
    public static final ObjControlGet OBJ_CONTROL_GET = ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET;

    /**
     * Call <code>OBJ_CONTROL_GET</code>.
     */
    public static Result<ObjControlGetRecord> OBJ_CONTROL_GET(Configuration configuration, String login, String pass, Integer objId, Integer objType, Integer objAction) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction)).fetch();
    }

    /**
     * Get <code>OBJ_CONTROL_GET</code> as a table.
     */
    public static ObjControlGet OBJ_CONTROL_GET(String login, String pass, Integer objId, Integer objType, Integer objAction) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction);
    }

    /**
     * Get <code>OBJ_CONTROL_GET</code> as a table.
     */
    public static ObjControlGet OBJ_CONTROL_GET(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType, Field<Integer> objAction) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction);
    }

    /**
     * The table <code>OBJ_CONTROL_LOG</code>.
     */
    public static final ObjControlLog OBJ_CONTROL_LOG = ru.smartsarov.citylighting.sprut.tables.ObjControlLog.OBJ_CONTROL_LOG;

    /**
     * The table <code>OBJ_CONTROL_SET</code>.
     */
    public static final ObjControlSet OBJ_CONTROL_SET = ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET;

    /**
     * Call <code>OBJ_CONTROL_SET</code>.
     */
    public static Result<ObjControlSetRecord> OBJ_CONTROL_SET(Configuration configuration, String login, String pass, Integer objId, Integer objType, Integer objAction, Integer objActionType, Integer paramInt, Double paramDouble, String paramStr, String commentUser, Timestamp commentDatetime, String commentIp) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp)).fetch();
    }

    /**
     * Get <code>OBJ_CONTROL_SET</code> as a table.
     */
    public static ObjControlSet OBJ_CONTROL_SET(String login, String pass, Integer objId, Integer objType, Integer objAction, Integer objActionType, Integer paramInt, Double paramDouble, String paramStr, String commentUser, Timestamp commentDatetime, String commentIp) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp);
    }

    /**
     * Get <code>OBJ_CONTROL_SET</code> as a table.
     */
    public static ObjControlSet OBJ_CONTROL_SET(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType, Field<Integer> objAction, Field<Integer> objActionType, Field<Integer> paramInt, Field<Double> paramDouble, Field<String> paramStr, Field<String> commentUser, Field<Timestamp> commentDatetime, Field<String> commentIp) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp);
    }

    /**
     * The table <code>OBJ_MAP</code>.
     */
    public static final ObjMap OBJ_MAP = ru.smartsarov.citylighting.sprut.tables.ObjMap.OBJ_MAP;

    /**
     * The table <code>OBJ_MAP_GET</code>.
     */
    public static final ObjMapGet OBJ_MAP_GET = ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET;

    /**
     * Call <code>OBJ_MAP_GET</code>.
     */
    public static Result<ObjMapGetRecord> OBJ_MAP_GET(Configuration configuration, Integer inObjId, Integer inObjType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType)).fetch();
    }

    /**
     * Get <code>OBJ_MAP_GET</code> as a table.
     */
    public static ObjMapGet OBJ_MAP_GET(Integer inObjId, Integer inObjType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType);
    }

    /**
     * Get <code>OBJ_MAP_GET</code> as a table.
     */
    public static ObjMapGet OBJ_MAP_GET(Field<Integer> inObjId, Field<Integer> inObjType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType);
    }

    /**
     * The table <code>OBJ_MAP_SET</code>.
     */
    public static final ObjMapSet OBJ_MAP_SET = ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET;

    /**
     * Call <code>OBJ_MAP_SET</code>.
     */
    public static Result<ObjMapSetRecord> OBJ_MAP_SET(Configuration configuration, Integer inObjId, Integer inObjType, Double inObjPosX, Double inObjPosY, Double inObjPosZ, String inActualParam) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam)).fetch();
    }

    /**
     * Get <code>OBJ_MAP_SET</code> as a table.
     */
    public static ObjMapSet OBJ_MAP_SET(Integer inObjId, Integer inObjType, Double inObjPosX, Double inObjPosY, Double inObjPosZ, String inActualParam) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam);
    }

    /**
     * Get <code>OBJ_MAP_SET</code> as a table.
     */
    public static ObjMapSet OBJ_MAP_SET(Field<Integer> inObjId, Field<Integer> inObjType, Field<Double> inObjPosX, Field<Double> inObjPosY, Field<Double> inObjPosZ, Field<String> inActualParam) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam);
    }

    /**
     * The table <code>OBJ_TYPE</code>.
     */
    public static final ObjType OBJ_TYPE = ru.smartsarov.citylighting.sprut.tables.ObjType.OBJ_TYPE;

    /**
     * The table <code>PARSE_CNT_LIST</code>.
     */
    public static final ParseCntList PARSE_CNT_LIST = ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST;

    /**
     * Call <code>PARSE_CNT_LIST</code>.
     */
    public static Result<ParseCntListRecord> PARSE_CNT_LIST(Configuration configuration, String cntList) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList)).fetch();
    }

    /**
     * Get <code>PARSE_CNT_LIST</code> as a table.
     */
    public static ParseCntList PARSE_CNT_LIST(String cntList) {
        return ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList);
    }

    /**
     * Get <code>PARSE_CNT_LIST</code> as a table.
     */
    public static ParseCntList PARSE_CNT_LIST(Field<String> cntList) {
        return ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList);
    }

    /**
     * The table <code>PERSONS</code>.
     */
    public static final Persons PERSONS = ru.smartsarov.citylighting.sprut.tables.Persons.PERSONS;

    /**
     * The table <code>P_CDE_TYPE</code>.
     */
    public static final PCdeType P_CDE_TYPE = ru.smartsarov.citylighting.sprut.tables.PCdeType.P_CDE_TYPE;

    /**
     * The table <code>P_CODE</code>.
     */
    public static final PCode P_CODE = ru.smartsarov.citylighting.sprut.tables.PCode.P_CODE;

    /**
     * The table <code>P_ZONE</code>.
     */
    public static final PZone P_ZONE = ru.smartsarov.citylighting.sprut.tables.PZone.P_ZONE;

    /**
     * The table <code>RDB$BACKUP_HISTORY</code>.
     */
    public static final Rdb$backupHistory RDB$BACKUP_HISTORY = ru.smartsarov.citylighting.sprut.tables.Rdb$backupHistory.RDB$BACKUP_HISTORY;

    /**
     * The table <code>RDB$CHARACTER_SETS</code>.
     */
    public static final Rdb$characterSets RDB$CHARACTER_SETS = ru.smartsarov.citylighting.sprut.tables.Rdb$characterSets.RDB$CHARACTER_SETS;

    /**
     * The table <code>RDB$CHECK_CONSTRAINTS</code>.
     */
    public static final Rdb$checkConstraints RDB$CHECK_CONSTRAINTS = ru.smartsarov.citylighting.sprut.tables.Rdb$checkConstraints.RDB$CHECK_CONSTRAINTS;

    /**
     * The table <code>RDB$COLLATIONS</code>.
     */
    public static final Rdb$collations RDB$COLLATIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$collations.RDB$COLLATIONS;

    /**
     * The table <code>RDB$DATABASE</code>.
     */
    public static final Rdb$database RDB$DATABASE = ru.smartsarov.citylighting.sprut.tables.Rdb$database.RDB$DATABASE;

    /**
     * The table <code>RDB$DEPENDENCIES</code>.
     */
    public static final Rdb$dependencies RDB$DEPENDENCIES = ru.smartsarov.citylighting.sprut.tables.Rdb$dependencies.RDB$DEPENDENCIES;

    /**
     * The table <code>RDB$EXCEPTIONS</code>.
     */
    public static final Rdb$exceptions RDB$EXCEPTIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$exceptions.RDB$EXCEPTIONS;

    /**
     * The table <code>RDB$FIELDS</code>.
     */
    public static final Rdb$fields RDB$FIELDS = ru.smartsarov.citylighting.sprut.tables.Rdb$fields.RDB$FIELDS;

    /**
     * The table <code>RDB$FIELD_DIMENSIONS</code>.
     */
    public static final Rdb$fieldDimensions RDB$FIELD_DIMENSIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$fieldDimensions.RDB$FIELD_DIMENSIONS;

    /**
     * The table <code>RDB$FILES</code>.
     */
    public static final Rdb$files RDB$FILES = ru.smartsarov.citylighting.sprut.tables.Rdb$files.RDB$FILES;

    /**
     * The table <code>RDB$FILTERS</code>.
     */
    public static final Rdb$filters RDB$FILTERS = ru.smartsarov.citylighting.sprut.tables.Rdb$filters.RDB$FILTERS;

    /**
     * The table <code>RDB$FORMATS</code>.
     */
    public static final Rdb$formats RDB$FORMATS = ru.smartsarov.citylighting.sprut.tables.Rdb$formats.RDB$FORMATS;

    /**
     * The table <code>RDB$FUNCTIONS</code>.
     */
    public static final Rdb$functions RDB$FUNCTIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$functions.RDB$FUNCTIONS;

    /**
     * The table <code>RDB$FUNCTION_ARGUMENTS</code>.
     */
    public static final Rdb$functionArguments RDB$FUNCTION_ARGUMENTS = ru.smartsarov.citylighting.sprut.tables.Rdb$functionArguments.RDB$FUNCTION_ARGUMENTS;

    /**
     * The table <code>RDB$GENERATORS</code>.
     */
    public static final Rdb$generators RDB$GENERATORS = ru.smartsarov.citylighting.sprut.tables.Rdb$generators.RDB$GENERATORS;

    /**
     * The table <code>RDB$INDEX_SEGMENTS</code>.
     */
    public static final Rdb$indexSegments RDB$INDEX_SEGMENTS = ru.smartsarov.citylighting.sprut.tables.Rdb$indexSegments.RDB$INDEX_SEGMENTS;

    /**
     * The table <code>RDB$INDICES</code>.
     */
    public static final Rdb$indices RDB$INDICES = ru.smartsarov.citylighting.sprut.tables.Rdb$indices.RDB$INDICES;

    /**
     * The table <code>RDB$LOG_FILES</code>.
     */
    public static final Rdb$logFiles RDB$LOG_FILES = ru.smartsarov.citylighting.sprut.tables.Rdb$logFiles.RDB$LOG_FILES;

    /**
     * The table <code>RDB$PAGES</code>.
     */
    public static final Rdb$pages RDB$PAGES = ru.smartsarov.citylighting.sprut.tables.Rdb$pages.RDB$PAGES;

    /**
     * The table <code>RDB$PROCEDURES</code>.
     */
    public static final Rdb$procedures RDB$PROCEDURES = ru.smartsarov.citylighting.sprut.tables.Rdb$procedures.RDB$PROCEDURES;

    /**
     * The table <code>RDB$PROCEDURE_PARAMETERS</code>.
     */
    public static final Rdb$procedureParameters RDB$PROCEDURE_PARAMETERS = ru.smartsarov.citylighting.sprut.tables.Rdb$procedureParameters.RDB$PROCEDURE_PARAMETERS;

    /**
     * The table <code>RDB$REF_CONSTRAINTS</code>.
     */
    public static final Rdb$refConstraints RDB$REF_CONSTRAINTS = ru.smartsarov.citylighting.sprut.tables.Rdb$refConstraints.RDB$REF_CONSTRAINTS;

    /**
     * The table <code>RDB$RELATIONS</code>.
     */
    public static final Rdb$relations RDB$RELATIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$relations.RDB$RELATIONS;

    /**
     * The table <code>RDB$RELATION_CONSTRAINTS</code>.
     */
    public static final Rdb$relationConstraints RDB$RELATION_CONSTRAINTS = ru.smartsarov.citylighting.sprut.tables.Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS;

    /**
     * The table <code>RDB$RELATION_FIELDS</code>.
     */
    public static final Rdb$relationFields RDB$RELATION_FIELDS = ru.smartsarov.citylighting.sprut.tables.Rdb$relationFields.RDB$RELATION_FIELDS;

    /**
     * The table <code>RDB$ROLES</code>.
     */
    public static final Rdb$roles RDB$ROLES = ru.smartsarov.citylighting.sprut.tables.Rdb$roles.RDB$ROLES;

    /**
     * The table <code>RDB$SECURITY_CLASSES</code>.
     */
    public static final Rdb$securityClasses RDB$SECURITY_CLASSES = ru.smartsarov.citylighting.sprut.tables.Rdb$securityClasses.RDB$SECURITY_CLASSES;

    /**
     * The table <code>RDB$TRANSACTIONS</code>.
     */
    public static final Rdb$transactions RDB$TRANSACTIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$transactions.RDB$TRANSACTIONS;

    /**
     * The table <code>RDB$TRIGGERS</code>.
     */
    public static final Rdb$triggers RDB$TRIGGERS = ru.smartsarov.citylighting.sprut.tables.Rdb$triggers.RDB$TRIGGERS;

    /**
     * The table <code>RDB$TRIGGER_MESSAGES</code>.
     */
    public static final Rdb$triggerMessages RDB$TRIGGER_MESSAGES = ru.smartsarov.citylighting.sprut.tables.Rdb$triggerMessages.RDB$TRIGGER_MESSAGES;

    /**
     * The table <code>RDB$TYPES</code>.
     */
    public static final Rdb$types RDB$TYPES = ru.smartsarov.citylighting.sprut.tables.Rdb$types.RDB$TYPES;

    /**
     * The table <code>RDB$USER_PRIVILEGES</code>.
     */
    public static final Rdb$userPrivileges RDB$USER_PRIVILEGES = ru.smartsarov.citylighting.sprut.tables.Rdb$userPrivileges.RDB$USER_PRIVILEGES;

    /**
     * The table <code>RDB$VIEW_RELATIONS</code>.
     */
    public static final Rdb$viewRelations RDB$VIEW_RELATIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$viewRelations.RDB$VIEW_RELATIONS;

    /**
     * The table <code>REGION</code>.
     */
    public static final Region REGION = ru.smartsarov.citylighting.sprut.tables.Region.REGION;

    /**
     * The table <code>REGION_TYPE</code>.
     */
    public static final RegionType REGION_TYPE = ru.smartsarov.citylighting.sprut.tables.RegionType.REGION_TYPE;

    /**
     * The table <code>REPORT</code>.
     */
    public static final Report REPORT = ru.smartsarov.citylighting.sprut.tables.Report.REPORT;

    /**
     * The table <code>REPORT_DATA</code>.
     */
    public static final ReportData REPORT_DATA = ru.smartsarov.citylighting.sprut.tables.ReportData.REPORT_DATA;

    /**
     * The table <code>REPORT_STRUCT</code>.
     */
    public static final ReportStruct REPORT_STRUCT = ru.smartsarov.citylighting.sprut.tables.ReportStruct.REPORT_STRUCT;

    /**
     * The table <code>REPORT_VAR</code>.
     */
    public static final ReportVar REPORT_VAR = ru.smartsarov.citylighting.sprut.tables.ReportVar.REPORT_VAR;

    /**
     * The table <code>SEC_TO_TEXT</code>.
     */
    public static final SecToText SEC_TO_TEXT = ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT;

    /**
     * Call <code>SEC_TO_TEXT</code>.
     */
    public static Result<SecToTextRecord> SEC_TO_TEXT(Configuration configuration, Integer sec) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec)).fetch();
    }

    /**
     * Get <code>SEC_TO_TEXT</code> as a table.
     */
    public static SecToText SEC_TO_TEXT(Integer sec) {
        return ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec);
    }

    /**
     * Get <code>SEC_TO_TEXT</code> as a table.
     */
    public static SecToText SEC_TO_TEXT(Field<Integer> sec) {
        return ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec);
    }

    /**
     * The table <code>SERVICE_CUR</code>.
     */
    public static final ServiceCur SERVICE_CUR = ru.smartsarov.citylighting.sprut.tables.ServiceCur.SERVICE_CUR;

    /**
     * The table <code>SERVICE_STATE</code>.
     */
    public static final ServiceState SERVICE_STATE = ru.smartsarov.citylighting.sprut.tables.ServiceState.SERVICE_STATE;

    /**
     * The table <code>SETTINGS_GUI</code>.
     */
    public static final SettingsGui SETTINGS_GUI = ru.smartsarov.citylighting.sprut.tables.SettingsGui.SETTINGS_GUI;

    /**
     * The table <code>SET_CNT_CONTROL</code>.
     */
    public static final SetCntControl SET_CNT_CONTROL = ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL;

    /**
     * Call <code>SET_CNT_CONTROL</code>.
     */
    public static Result<SetCntControlRecord> SET_CNT_CONTROL(Configuration configuration, Integer cntid, Integer cntAction, Integer cntLimit, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass)).fetch();
    }

    /**
     * Get <code>SET_CNT_CONTROL</code> as a table.
     */
    public static SetCntControl SET_CNT_CONTROL(Integer cntid, Integer cntAction, Integer cntLimit, String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass);
    }

    /**
     * Get <code>SET_CNT_CONTROL</code> as a table.
     */
    public static SetCntControl SET_CNT_CONTROL(Field<Integer> cntid, Field<Integer> cntAction, Field<Integer> cntLimit, Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass);
    }

    /**
     * The table <code>STREET</code>.
     */
    public static final Street STREET = ru.smartsarov.citylighting.sprut.tables.Street.STREET;

    /**
     * The table <code>STREET_TYPE</code>.
     */
    public static final StreetType STREET_TYPE = ru.smartsarov.citylighting.sprut.tables.StreetType.STREET_TYPE;

    /**
     * The table <code>UNO_STATES</code>.
     */
    public static final UnoStates UNO_STATES = ru.smartsarov.citylighting.sprut.tables.UnoStates.UNO_STATES;

    /**
     * The table <code>UPD_XGROUP</code>.
     */
    public static final UpdXgroup UPD_XGROUP = ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP;

    /**
     * Call <code>UPD_XGROUP</code>.
     */
    public static Result<UpdXgroupRecord> UPD_XGROUP(Configuration configuration, Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword)).fetch();
    }

    /**
     * Get <code>UPD_XGROUP</code> as a table.
     */
    public static UpdXgroup UPD_XGROUP(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Get <code>UPD_XGROUP</code> as a table.
     */
    public static UpdXgroup UPD_XGROUP(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * The table <code>USK</code>.
     */
    public static final Usk USK = ru.smartsarov.citylighting.sprut.tables.Usk.USK;

    /**
     * The table <code>USKL_LOG</code>.
     */
    public static final UsklLog USKL_LOG = ru.smartsarov.citylighting.sprut.tables.UsklLog.USKL_LOG;

    /**
     * The table <code>USKL_SHEDULE</code>.
     */
    public static final UsklShedule USKL_SHEDULE = ru.smartsarov.citylighting.sprut.tables.UsklShedule.USKL_SHEDULE;

    /**
     * The table <code>USKL_SYNC</code>.
     */
    public static final UsklSync USKL_SYNC = ru.smartsarov.citylighting.sprut.tables.UsklSync.USKL_SYNC;

    /**
     * The table <code>USKL_SYS_EVENT_TYPE</code>.
     */
    public static final UsklSysEventType USKL_SYS_EVENT_TYPE = ru.smartsarov.citylighting.sprut.tables.UsklSysEventType.USKL_SYS_EVENT_TYPE;

    /**
     * The table <code>USK_CHANGE</code>.
     */
    public static final UskChange USK_CHANGE = ru.smartsarov.citylighting.sprut.tables.UskChange.USK_CHANGE;

    /**
     * The table <code>USK_COOR</code>.
     */
    public static final UskCoor USK_COOR = ru.smartsarov.citylighting.sprut.tables.UskCoor.USK_COOR;

    /**
     * The table <code>USK_CURR</code>.
     */
    public static final UskCurr USK_CURR = ru.smartsarov.citylighting.sprut.tables.UskCurr.USK_CURR;

    /**
     * The table <code>USK_EXT_CHANGE</code>.
     */
    public static final UskExtChange USK_EXT_CHANGE = ru.smartsarov.citylighting.sprut.tables.UskExtChange.USK_EXT_CHANGE;

    /**
     * The table <code>USK_EXT_MODULE</code>.
     */
    public static final UskExtModule USK_EXT_MODULE = ru.smartsarov.citylighting.sprut.tables.UskExtModule.USK_EXT_MODULE;

    /**
     * The table <code>USK_JOURNAL</code>.
     */
    public static final UskJournal USK_JOURNAL = ru.smartsarov.citylighting.sprut.tables.UskJournal.USK_JOURNAL;

    /**
     * The table <code>USK_LOG</code>.
     */
    public static final UskLog USK_LOG = ru.smartsarov.citylighting.sprut.tables.UskLog.USK_LOG;

    /**
     * The table <code>USK_SYS_EVENT</code>.
     */
    public static final UskSysEvent USK_SYS_EVENT = ru.smartsarov.citylighting.sprut.tables.UskSysEvent.USK_SYS_EVENT;

    /**
     * The table <code>USK_TYPE</code>.
     */
    public static final UskType USK_TYPE = ru.smartsarov.citylighting.sprut.tables.UskType.USK_TYPE;

    /**
     * The table <code>VERSION</code>.
     */
    public static final Version VERSION = ru.smartsarov.citylighting.sprut.tables.Version.VERSION;

    /**
     * The table <code>VIEW_ELECTRO</code>.
     */
    public static final ViewElectro VIEW_ELECTRO = ru.smartsarov.citylighting.sprut.tables.ViewElectro.VIEW_ELECTRO;

    /**
     * The table <code>WT_ACCESS</code>.
     */
    public static final WtAccess WT_ACCESS = ru.smartsarov.citylighting.sprut.tables.WtAccess.WT_ACCESS;

    /**
     * The table <code>WT_GROUP</code>.
     */
    public static final WtGroup WT_GROUP = ru.smartsarov.citylighting.sprut.tables.WtGroup.WT_GROUP;

    /**
     * The table <code>WT_MSA</code>.
     */
    public static final WtMsa WT_MSA = ru.smartsarov.citylighting.sprut.tables.WtMsa.WT_MSA;

    /**
     * The table <code>WT_SCHEDULE</code>.
     */
    public static final WtSchedule WT_SCHEDULE = ru.smartsarov.citylighting.sprut.tables.WtSchedule.WT_SCHEDULE;

    /**
     * The table <code>WT_SCHEDULE_DEPEND</code>.
     */
    public static final WtScheduleDepend WT_SCHEDULE_DEPEND = ru.smartsarov.citylighting.sprut.tables.WtScheduleDepend.WT_SCHEDULE_DEPEND;

    /**
     * The table <code>WT_USER</code>.
     */
    public static final WtUser WT_USER = ru.smartsarov.citylighting.sprut.tables.WtUser.WT_USER;

    /**
     * The table <code>XGROUP</code>.
     */
    public static final Xgroup XGROUP = ru.smartsarov.citylighting.sprut.tables.Xgroup.XGROUP;

    /**
     * The table <code>XINTERFACE</code>.
     */
    public static final Xinterface XINTERFACE = ru.smartsarov.citylighting.sprut.tables.Xinterface.XINTERFACE;

    /**
     * The table <code>XRULE</code>.
     */
    public static final Xrule XRULE = ru.smartsarov.citylighting.sprut.tables.Xrule.XRULE;

    /**
     * The table <code>XUSER</code>.
     */
    public static final Xuser XUSER = ru.smartsarov.citylighting.sprut.tables.Xuser.XUSER;
}
