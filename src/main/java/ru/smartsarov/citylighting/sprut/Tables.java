/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;

import ru.smartsarov.citylighting.sprut.tables.Abonent;
import ru.smartsarov.citylighting.sprut.tables.AbonentType;
import ru.smartsarov.citylighting.sprut.tables.Adress;
import ru.smartsarov.citylighting.sprut.tables.AiisAbnInfo;
import ru.smartsarov.citylighting.sprut.tables.CaptionField;
import ru.smartsarov.citylighting.sprut.tables.ChangesCnt;
import ru.smartsarov.citylighting.sprut.tables.ChangesGuardLine;
import ru.smartsarov.citylighting.sprut.tables.ChangesGuardPin;
import ru.smartsarov.citylighting.sprut.tables.ChangesGuardZone;
import ru.smartsarov.citylighting.sprut.tables.ChangesUsk;
import ru.smartsarov.citylighting.sprut.tables.CheckIp;
import ru.smartsarov.citylighting.sprut.tables.City;
import ru.smartsarov.citylighting.sprut.tables.CityType;
import ru.smartsarov.citylighting.sprut.tables.Cnt;
import ru.smartsarov.citylighting.sprut.tables.CntChange;
import ru.smartsarov.citylighting.sprut.tables.CntChannel;
import ru.smartsarov.citylighting.sprut.tables.CntChannelType;
import ru.smartsarov.citylighting.sprut.tables.CntControl;
import ru.smartsarov.citylighting.sprut.tables.CntEnergylog;
import ru.smartsarov.citylighting.sprut.tables.CntExtParam;
import ru.smartsarov.citylighting.sprut.tables.CntExtValues;
import ru.smartsarov.citylighting.sprut.tables.CntGroup;
import ru.smartsarov.citylighting.sprut.tables.CntGroupDepend;
import ru.smartsarov.citylighting.sprut.tables.CntHeatTs;
import ru.smartsarov.citylighting.sprut.tables.CntInfo;
import ru.smartsarov.citylighting.sprut.tables.CntLstate;
import ru.smartsarov.citylighting.sprut.tables.CntMc;
import ru.smartsarov.citylighting.sprut.tables.CntMo;
import ru.smartsarov.citylighting.sprut.tables.CntMoTypes;
import ru.smartsarov.citylighting.sprut.tables.CntModbusLink;
import ru.smartsarov.citylighting.sprut.tables.CntModbusType;
import ru.smartsarov.citylighting.sprut.tables.CntModbusValue;
import ru.smartsarov.citylighting.sprut.tables.CntMonth;
import ru.smartsarov.citylighting.sprut.tables.CntMrccurrvalue;
import ru.smartsarov.citylighting.sprut.tables.CntMrcenergylog;
import ru.smartsarov.citylighting.sprut.tables.CntMrcmaximumlog;
import ru.smartsarov.citylighting.sprut.tables.CntMrcpowerlog;
import ru.smartsarov.citylighting.sprut.tables.CntMrcvaluelog;
import ru.smartsarov.citylighting.sprut.tables.CntPhone;
import ru.smartsarov.citylighting.sprut.tables.CntPkeTmpJoined;
import ru.smartsarov.citylighting.sprut.tables.CntPkeinfo;
import ru.smartsarov.citylighting.sprut.tables.CntPkelast;
import ru.smartsarov.citylighting.sprut.tables.CntPkelog;
import ru.smartsarov.citylighting.sprut.tables.CntSync;
import ru.smartsarov.citylighting.sprut.tables.CntTableSync;
import ru.smartsarov.citylighting.sprut.tables.CntTariff;
import ru.smartsarov.citylighting.sprut.tables.CntUstate;
import ru.smartsarov.citylighting.sprut.tables.Cnta;
import ru.smartsarov.citylighting.sprut.tables.Cntb;
import ru.smartsarov.citylighting.sprut.tables.Cntl;
import ru.smartsarov.citylighting.sprut.tables.Cntv;
import ru.smartsarov.citylighting.sprut.tables.Config;
import ru.smartsarov.citylighting.sprut.tables.CsdModemLocal;
import ru.smartsarov.citylighting.sprut.tables.CsdModemLocalState;
import ru.smartsarov.citylighting.sprut.tables.CsdModemLocalType;
import ru.smartsarov.citylighting.sprut.tables.CsdModemUsk;
import ru.smartsarov.citylighting.sprut.tables.CsdModemUskState;
import ru.smartsarov.citylighting.sprut.tables.CsdSessionLog;
import ru.smartsarov.citylighting.sprut.tables.Dual;
import ru.smartsarov.citylighting.sprut.tables.EcntlDayly;
import ru.smartsarov.citylighting.sprut.tables.EcntlMonthly;
import ru.smartsarov.citylighting.sprut.tables.ElementLink;
import ru.smartsarov.citylighting.sprut.tables.ElementNotification;
import ru.smartsarov.citylighting.sprut.tables.ElementSlot;
import ru.smartsarov.citylighting.sprut.tables.ElementType;
import ru.smartsarov.citylighting.sprut.tables.Exmodule;
import ru.smartsarov.citylighting.sprut.tables.ExmoduleType;
import ru.smartsarov.citylighting.sprut.tables.Flat;
import ru.smartsarov.citylighting.sprut.tables.GprsCurr;
import ru.smartsarov.citylighting.sprut.tables.GprsTelemetry;
import ru.smartsarov.citylighting.sprut.tables.GprsTraffic;
import ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport;
import ru.smartsarov.citylighting.sprut.tables.Graphics;
import ru.smartsarov.citylighting.sprut.tables.GraphicsPinManual;
import ru.smartsarov.citylighting.sprut.tables.GrdlChange;
import ru.smartsarov.citylighting.sprut.tables.GrdlSync;
import ru.smartsarov.citylighting.sprut.tables.GrdzChange;
import ru.smartsarov.citylighting.sprut.tables.GuardAlarmProcess;
import ru.smartsarov.citylighting.sprut.tables.GuardAtype;
import ru.smartsarov.citylighting.sprut.tables.GuardCam;
import ru.smartsarov.citylighting.sprut.tables.GuardCtype;
import ru.smartsarov.citylighting.sprut.tables.GuardEvent;
import ru.smartsarov.citylighting.sprut.tables.GuardExstate;
import ru.smartsarov.citylighting.sprut.tables.GuardGroup;
import ru.smartsarov.citylighting.sprut.tables.GuardInform;
import ru.smartsarov.citylighting.sprut.tables.GuardItype;
import ru.smartsarov.citylighting.sprut.tables.GuardKey;
import ru.smartsarov.citylighting.sprut.tables.GuardLine;
import ru.smartsarov.citylighting.sprut.tables.GuardLog;
import ru.smartsarov.citylighting.sprut.tables.GuardLsost;
import ru.smartsarov.citylighting.sprut.tables.GuardLstate;
import ru.smartsarov.citylighting.sprut.tables.GuardMail;
import ru.smartsarov.citylighting.sprut.tables.GuardPhone;
import ru.smartsarov.citylighting.sprut.tables.GuardPin;
import ru.smartsarov.citylighting.sprut.tables.GuardPinCurr;
import ru.smartsarov.citylighting.sprut.tables.GuardPinEventDesrc;
import ru.smartsarov.citylighting.sprut.tables.GuardPinLog;
import ru.smartsarov.citylighting.sprut.tables.GuardPinNetsost;
import ru.smartsarov.citylighting.sprut.tables.GuardPinStype;
import ru.smartsarov.citylighting.sprut.tables.GuardPindev;
import ru.smartsarov.citylighting.sprut.tables.GuardPintype;
import ru.smartsarov.citylighting.sprut.tables.GuardRelay;
import ru.smartsarov.citylighting.sprut.tables.GuardSms;
import ru.smartsarov.citylighting.sprut.tables.GuardSmsstat;
import ru.smartsarov.citylighting.sprut.tables.GuardSsost;
import ru.smartsarov.citylighting.sprut.tables.GuardUstate;
import ru.smartsarov.citylighting.sprut.tables.GuardValve;
import ru.smartsarov.citylighting.sprut.tables.GuardVtype;
import ru.smartsarov.citylighting.sprut.tables.GuardZone;
import ru.smartsarov.citylighting.sprut.tables.Home;
import ru.smartsarov.citylighting.sprut.tables.HomeType;
import ru.smartsarov.citylighting.sprut.tables.InsGuardLog;
import ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2;
import ru.smartsarov.citylighting.sprut.tables.InsXgroup;
import ru.smartsarov.citylighting.sprut.tables.InsXuser;
import ru.smartsarov.citylighting.sprut.tables.LedControlArch;
import ru.smartsarov.citylighting.sprut.tables.LedControlCurr;
import ru.smartsarov.citylighting.sprut.tables.LightAction;
import ru.smartsarov.citylighting.sprut.tables.LightBlock;
import ru.smartsarov.citylighting.sprut.tables.LightBox;
import ru.smartsarov.citylighting.sprut.tables.LightLine;
import ru.smartsarov.citylighting.sprut.tables.LightShedule;
import ru.smartsarov.citylighting.sprut.tables.LightShift;
import ru.smartsarov.citylighting.sprut.tables.ListHome;
import ru.smartsarov.citylighting.sprut.tables.ListStreet;
import ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro;
import ru.smartsarov.citylighting.sprut.tables.Mon$attachments;
import ru.smartsarov.citylighting.sprut.tables.Mon$callStack;
import ru.smartsarov.citylighting.sprut.tables.Mon$contextVariables;
import ru.smartsarov.citylighting.sprut.tables.Mon$database;
import ru.smartsarov.citylighting.sprut.tables.Mon$ioStats;
import ru.smartsarov.citylighting.sprut.tables.Mon$memoryUsage;
import ru.smartsarov.citylighting.sprut.tables.Mon$recordStats;
import ru.smartsarov.citylighting.sprut.tables.Mon$statements;
import ru.smartsarov.citylighting.sprut.tables.Mon$transactions;
import ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile;
import ru.smartsarov.citylighting.sprut.tables.Normative;
import ru.smartsarov.citylighting.sprut.tables.NormativeCntLink;
import ru.smartsarov.citylighting.sprut.tables.NormativeElctr;
import ru.smartsarov.citylighting.sprut.tables.NormativeGas;
import ru.smartsarov.citylighting.sprut.tables.NormativeHeat;
import ru.smartsarov.citylighting.sprut.tables.NormativeMeter;
import ru.smartsarov.citylighting.sprut.tables.NormativeWater;
import ru.smartsarov.citylighting.sprut.tables.ObjActionAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet;
import ru.smartsarov.citylighting.sprut.tables.ObjActionStateAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriod;
import ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriodAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjArchiveType;
import ru.smartsarov.citylighting.sprut.tables.ObjArchiveTypeAvailable;
import ru.smartsarov.citylighting.sprut.tables.ObjComment;
import ru.smartsarov.citylighting.sprut.tables.ObjControl;
import ru.smartsarov.citylighting.sprut.tables.ObjControlGet;
import ru.smartsarov.citylighting.sprut.tables.ObjControlLog;
import ru.smartsarov.citylighting.sprut.tables.ObjControlSet;
import ru.smartsarov.citylighting.sprut.tables.ObjMap;
import ru.smartsarov.citylighting.sprut.tables.ObjMapGet;
import ru.smartsarov.citylighting.sprut.tables.ObjMapSet;
import ru.smartsarov.citylighting.sprut.tables.ObjType;
import ru.smartsarov.citylighting.sprut.tables.PCdeType;
import ru.smartsarov.citylighting.sprut.tables.PCode;
import ru.smartsarov.citylighting.sprut.tables.PZone;
import ru.smartsarov.citylighting.sprut.tables.ParseCntList;
import ru.smartsarov.citylighting.sprut.tables.Persons;
import ru.smartsarov.citylighting.sprut.tables.Rdb$backupHistory;
import ru.smartsarov.citylighting.sprut.tables.Rdb$characterSets;
import ru.smartsarov.citylighting.sprut.tables.Rdb$checkConstraints;
import ru.smartsarov.citylighting.sprut.tables.Rdb$collations;
import ru.smartsarov.citylighting.sprut.tables.Rdb$database;
import ru.smartsarov.citylighting.sprut.tables.Rdb$dependencies;
import ru.smartsarov.citylighting.sprut.tables.Rdb$exceptions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$fieldDimensions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$fields;
import ru.smartsarov.citylighting.sprut.tables.Rdb$files;
import ru.smartsarov.citylighting.sprut.tables.Rdb$filters;
import ru.smartsarov.citylighting.sprut.tables.Rdb$formats;
import ru.smartsarov.citylighting.sprut.tables.Rdb$functionArguments;
import ru.smartsarov.citylighting.sprut.tables.Rdb$functions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$generators;
import ru.smartsarov.citylighting.sprut.tables.Rdb$indexSegments;
import ru.smartsarov.citylighting.sprut.tables.Rdb$indices;
import ru.smartsarov.citylighting.sprut.tables.Rdb$logFiles;
import ru.smartsarov.citylighting.sprut.tables.Rdb$pages;
import ru.smartsarov.citylighting.sprut.tables.Rdb$procedureParameters;
import ru.smartsarov.citylighting.sprut.tables.Rdb$procedures;
import ru.smartsarov.citylighting.sprut.tables.Rdb$refConstraints;
import ru.smartsarov.citylighting.sprut.tables.Rdb$relationConstraints;
import ru.smartsarov.citylighting.sprut.tables.Rdb$relationFields;
import ru.smartsarov.citylighting.sprut.tables.Rdb$relations;
import ru.smartsarov.citylighting.sprut.tables.Rdb$roles;
import ru.smartsarov.citylighting.sprut.tables.Rdb$securityClasses;
import ru.smartsarov.citylighting.sprut.tables.Rdb$transactions;
import ru.smartsarov.citylighting.sprut.tables.Rdb$triggerMessages;
import ru.smartsarov.citylighting.sprut.tables.Rdb$triggers;
import ru.smartsarov.citylighting.sprut.tables.Rdb$types;
import ru.smartsarov.citylighting.sprut.tables.Rdb$userPrivileges;
import ru.smartsarov.citylighting.sprut.tables.Rdb$viewRelations;
import ru.smartsarov.citylighting.sprut.tables.Region;
import ru.smartsarov.citylighting.sprut.tables.RegionType;
import ru.smartsarov.citylighting.sprut.tables.Report;
import ru.smartsarov.citylighting.sprut.tables.ReportData;
import ru.smartsarov.citylighting.sprut.tables.ReportStruct;
import ru.smartsarov.citylighting.sprut.tables.ReportVar;
import ru.smartsarov.citylighting.sprut.tables.SecToText;
import ru.smartsarov.citylighting.sprut.tables.ServiceCur;
import ru.smartsarov.citylighting.sprut.tables.ServiceState;
import ru.smartsarov.citylighting.sprut.tables.SetCntControl;
import ru.smartsarov.citylighting.sprut.tables.SettingsGui;
import ru.smartsarov.citylighting.sprut.tables.Street;
import ru.smartsarov.citylighting.sprut.tables.StreetType;
import ru.smartsarov.citylighting.sprut.tables.UnoStates;
import ru.smartsarov.citylighting.sprut.tables.UpdXgroup;
import ru.smartsarov.citylighting.sprut.tables.Usk;
import ru.smartsarov.citylighting.sprut.tables.UskChange;
import ru.smartsarov.citylighting.sprut.tables.UskCurr;
import ru.smartsarov.citylighting.sprut.tables.UskExtChange;
import ru.smartsarov.citylighting.sprut.tables.UskExtModule;
import ru.smartsarov.citylighting.sprut.tables.UskJournal;
import ru.smartsarov.citylighting.sprut.tables.UskLog;
import ru.smartsarov.citylighting.sprut.tables.UskSysEvent;
import ru.smartsarov.citylighting.sprut.tables.UskType;
import ru.smartsarov.citylighting.sprut.tables.UsklLog;
import ru.smartsarov.citylighting.sprut.tables.UsklShedule;
import ru.smartsarov.citylighting.sprut.tables.UsklSync;
import ru.smartsarov.citylighting.sprut.tables.UsklSysEventType;
import ru.smartsarov.citylighting.sprut.tables.Version;
import ru.smartsarov.citylighting.sprut.tables.ViewElectro;
import ru.smartsarov.citylighting.sprut.tables.WtAccess;
import ru.smartsarov.citylighting.sprut.tables.WtGroup;
import ru.smartsarov.citylighting.sprut.tables.WtMsa;
import ru.smartsarov.citylighting.sprut.tables.WtSchedule;
import ru.smartsarov.citylighting.sprut.tables.WtScheduleDepend;
import ru.smartsarov.citylighting.sprut.tables.WtUser;
import ru.smartsarov.citylighting.sprut.tables.Xgroup;
import ru.smartsarov.citylighting.sprut.tables.Xinterface;
import ru.smartsarov.citylighting.sprut.tables.Xrule;
import ru.smartsarov.citylighting.sprut.tables.Xuser;
import ru.smartsarov.citylighting.sprut.tables.records.CheckIpRecord;
import ru.smartsarov.citylighting.sprut.tables.records.DualRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GprsTrafficReportRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsGuardLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsGuardLog_2Record;
import ru.smartsarov.citylighting.sprut.tables.records.InsXgroupRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsXuserRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ListHomeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ListStreetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.LookIntelligentElectroRecord;
import ru.smartsarov.citylighting.sprut.tables.records.MrcHourPwrProfileRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjActionAvailableGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlSetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapSetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ParseCntListRecord;
import ru.smartsarov.citylighting.sprut.tables.records.SecToTextRecord;
import ru.smartsarov.citylighting.sprut.tables.records.SetCntControlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.UpdXgroupRecord;


/**
 * Convenience access to all tables in 
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tables {

    /**
     * The table <code>ABONENT</code>.
     */
    public static final Abonent ABONENT = ru.smartsarov.citylighting.sprut.tables.Abonent.ABONENT;

    /**
     * The table <code>ABONENT_TYPE</code>.
     */
    public static final AbonentType ABONENT_TYPE = ru.smartsarov.citylighting.sprut.tables.AbonentType.ABONENT_TYPE;

    /**
     * The table <code>ADRESS</code>.
     */
    public static final Adress ADRESS = ru.smartsarov.citylighting.sprut.tables.Adress.ADRESS;

    /**
     * The table <code>AIIS_ABN_INFO</code>.
     */
    public static final AiisAbnInfo AIIS_ABN_INFO = ru.smartsarov.citylighting.sprut.tables.AiisAbnInfo.AIIS_ABN_INFO;

    /**
     * The table <code>CAPTION_FIELD</code>.
     */
    public static final CaptionField CAPTION_FIELD = ru.smartsarov.citylighting.sprut.tables.CaptionField.CAPTION_FIELD;

    /**
     * The table <code>CHANGES_CNT</code>.
     */
    public static final ChangesCnt CHANGES_CNT = ru.smartsarov.citylighting.sprut.tables.ChangesCnt.CHANGES_CNT;

    /**
     * The table <code>CHANGES_GUARD_LINE</code>.
     */
    public static final ChangesGuardLine CHANGES_GUARD_LINE = ru.smartsarov.citylighting.sprut.tables.ChangesGuardLine.CHANGES_GUARD_LINE;

    /**
     * The table <code>CHANGES_GUARD_PIN</code>.
     */
    public static final ChangesGuardPin CHANGES_GUARD_PIN = ru.smartsarov.citylighting.sprut.tables.ChangesGuardPin.CHANGES_GUARD_PIN;

    /**
     * The table <code>CHANGES_GUARD_ZONE</code>.
     */
    public static final ChangesGuardZone CHANGES_GUARD_ZONE = ru.smartsarov.citylighting.sprut.tables.ChangesGuardZone.CHANGES_GUARD_ZONE;

    /**
     * The table <code>CHANGES_USK</code>.
     */
    public static final ChangesUsk CHANGES_USK = ru.smartsarov.citylighting.sprut.tables.ChangesUsk.CHANGES_USK;

    /**
     * The table <code>CHECK_IP</code>.
     */
    public static final CheckIp CHECK_IP = ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP;

    /**
     * Call <code>CHECK_IP</code>.
     */
    public static Result<CheckIpRecord> CHECK_IP(Configuration configuration, String ip, Integer id, Timestamp fsdate, Timestamp fedate, Timestamp fndate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate)).fetch();
    }

    /**
     * Get <code>CHECK_IP</code> as a table.
     */
    public static CheckIp CHECK_IP(String ip, Integer id, Timestamp fsdate, Timestamp fedate, Timestamp fndate) {
        return ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate);
    }

    /**
     * Get <code>CHECK_IP</code> as a table.
     */
    public static CheckIp CHECK_IP(Field<String> ip, Field<Integer> id, Field<Timestamp> fsdate, Field<Timestamp> fedate, Field<Timestamp> fndate) {
        return ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate);
    }

    /**
     * The table <code>CITY</code>.
     */
    public static final City CITY = ru.smartsarov.citylighting.sprut.tables.City.CITY;

    /**
     * The table <code>CITY_TYPE</code>.
     */
    public static final CityType CITY_TYPE = ru.smartsarov.citylighting.sprut.tables.CityType.CITY_TYPE;

    /**
     * The table <code>CNT</code>.
     */
    public static final Cnt CNT = ru.smartsarov.citylighting.sprut.tables.Cnt.CNT;

    /**
     * The table <code>CNTA</code>.
     */
    public static final Cnta CNTA = ru.smartsarov.citylighting.sprut.tables.Cnta.CNTA;

    /**
     * The table <code>CNTB</code>.
     */
    public static final Cntb CNTB = ru.smartsarov.citylighting.sprut.tables.Cntb.CNTB;

    /**
     * The table <code>CNTL</code>.
     */
    public static final Cntl CNTL = ru.smartsarov.citylighting.sprut.tables.Cntl.CNTL;

    /**
     * The table <code>CNTV</code>.
     */
    public static final Cntv CNTV = ru.smartsarov.citylighting.sprut.tables.Cntv.CNTV;

    /**
     * The table <code>CNT_CHANGE</code>.
     */
    public static final CntChange CNT_CHANGE = ru.smartsarov.citylighting.sprut.tables.CntChange.CNT_CHANGE;

    /**
     * The table <code>CNT_CHANNEL</code>.
     */
    public static final CntChannel CNT_CHANNEL = ru.smartsarov.citylighting.sprut.tables.CntChannel.CNT_CHANNEL;

    /**
     * The table <code>CNT_CHANNEL_TYPE</code>.
     */
    public static final CntChannelType CNT_CHANNEL_TYPE = ru.smartsarov.citylighting.sprut.tables.CntChannelType.CNT_CHANNEL_TYPE;

    /**
     * The table <code>CNT_CONTROL</code>.
     */
    public static final CntControl CNT_CONTROL = ru.smartsarov.citylighting.sprut.tables.CntControl.CNT_CONTROL;

    /**
     * The table <code>CNT_ENERGYLOG</code>.
     */
    public static final CntEnergylog CNT_ENERGYLOG = ru.smartsarov.citylighting.sprut.tables.CntEnergylog.CNT_ENERGYLOG;

    /**
     * The table <code>CNT_EXT_PARAM</code>.
     */
    public static final CntExtParam CNT_EXT_PARAM = ru.smartsarov.citylighting.sprut.tables.CntExtParam.CNT_EXT_PARAM;

    /**
     * The table <code>CNT_EXT_VALUES</code>.
     */
    public static final CntExtValues CNT_EXT_VALUES = ru.smartsarov.citylighting.sprut.tables.CntExtValues.CNT_EXT_VALUES;

    /**
     * The table <code>CNT_GROUP</code>.
     */
    public static final CntGroup CNT_GROUP = ru.smartsarov.citylighting.sprut.tables.CntGroup.CNT_GROUP;

    /**
     * The table <code>CNT_GROUP_DEPEND</code>.
     */
    public static final CntGroupDepend CNT_GROUP_DEPEND = ru.smartsarov.citylighting.sprut.tables.CntGroupDepend.CNT_GROUP_DEPEND;

    /**
     * The table <code>CNT_HEAT_TS</code>.
     */
    public static final CntHeatTs CNT_HEAT_TS = ru.smartsarov.citylighting.sprut.tables.CntHeatTs.CNT_HEAT_TS;

    /**
     * The table <code>CNT_INFO</code>.
     */
    public static final CntInfo CNT_INFO = ru.smartsarov.citylighting.sprut.tables.CntInfo.CNT_INFO;

    /**
     * The table <code>CNT_LSTATE</code>.
     */
    public static final CntLstate CNT_LSTATE = ru.smartsarov.citylighting.sprut.tables.CntLstate.CNT_LSTATE;

    /**
     * The table <code>CNT_MC</code>.
     */
    public static final CntMc CNT_MC = ru.smartsarov.citylighting.sprut.tables.CntMc.CNT_MC;

    /**
     * The table <code>CNT_MO</code>.
     */
    public static final CntMo CNT_MO = ru.smartsarov.citylighting.sprut.tables.CntMo.CNT_MO;

    /**
     * The table <code>CNT_MODBUS_LINK</code>.
     */
    public static final CntModbusLink CNT_MODBUS_LINK = ru.smartsarov.citylighting.sprut.tables.CntModbusLink.CNT_MODBUS_LINK;

    /**
     * The table <code>CNT_MODBUS_TYPE</code>.
     */
    public static final CntModbusType CNT_MODBUS_TYPE = ru.smartsarov.citylighting.sprut.tables.CntModbusType.CNT_MODBUS_TYPE;

    /**
     * The table <code>CNT_MODBUS_VALUE</code>.
     */
    public static final CntModbusValue CNT_MODBUS_VALUE = ru.smartsarov.citylighting.sprut.tables.CntModbusValue.CNT_MODBUS_VALUE;

    /**
     * The table <code>CNT_MONTH</code>.
     */
    public static final CntMonth CNT_MONTH = ru.smartsarov.citylighting.sprut.tables.CntMonth.CNT_MONTH;

    /**
     * The table <code>CNT_MO_TYPES</code>.
     */
    public static final CntMoTypes CNT_MO_TYPES = ru.smartsarov.citylighting.sprut.tables.CntMoTypes.CNT_MO_TYPES;

    /**
     * The table <code>CNT_MRCCURRVALUE</code>.
     */
    public static final CntMrccurrvalue CNT_MRCCURRVALUE = ru.smartsarov.citylighting.sprut.tables.CntMrccurrvalue.CNT_MRCCURRVALUE;

    /**
     * The table <code>CNT_MRCENERGYLOG</code>.
     */
    public static final CntMrcenergylog CNT_MRCENERGYLOG = ru.smartsarov.citylighting.sprut.tables.CntMrcenergylog.CNT_MRCENERGYLOG;

    /**
     * The table <code>CNT_MRCMAXIMUMLOG</code>.
     */
    public static final CntMrcmaximumlog CNT_MRCMAXIMUMLOG = ru.smartsarov.citylighting.sprut.tables.CntMrcmaximumlog.CNT_MRCMAXIMUMLOG;

    /**
     * The table <code>CNT_MRCPOWERLOG</code>.
     */
    public static final CntMrcpowerlog CNT_MRCPOWERLOG = ru.smartsarov.citylighting.sprut.tables.CntMrcpowerlog.CNT_MRCPOWERLOG;

    /**
     * The table <code>CNT_MRCVALUELOG</code>.
     */
    public static final CntMrcvaluelog CNT_MRCVALUELOG = ru.smartsarov.citylighting.sprut.tables.CntMrcvaluelog.CNT_MRCVALUELOG;

    /**
     * The table <code>CNT_PHONE</code>.
     */
    public static final CntPhone CNT_PHONE = ru.smartsarov.citylighting.sprut.tables.CntPhone.CNT_PHONE;

    /**
     * The table <code>CNT_PKEINFO</code>.
     */
    public static final CntPkeinfo CNT_PKEINFO = ru.smartsarov.citylighting.sprut.tables.CntPkeinfo.CNT_PKEINFO;

    /**
     * The table <code>CNT_PKELAST</code>.
     */
    public static final CntPkelast CNT_PKELAST = ru.smartsarov.citylighting.sprut.tables.CntPkelast.CNT_PKELAST;

    /**
     * The table <code>CNT_PKELOG</code>.
     */
    public static final CntPkelog CNT_PKELOG = ru.smartsarov.citylighting.sprut.tables.CntPkelog.CNT_PKELOG;

    /**
     * The table <code>CNT_PKE_TMP_JOINED</code>.
     */
    public static final CntPkeTmpJoined CNT_PKE_TMP_JOINED = ru.smartsarov.citylighting.sprut.tables.CntPkeTmpJoined.CNT_PKE_TMP_JOINED;

    /**
     * The table <code>CNT_SYNC</code>.
     */
    public static final CntSync CNT_SYNC = ru.smartsarov.citylighting.sprut.tables.CntSync.CNT_SYNC;

    /**
     * The table <code>CNT_TABLE_SYNC</code>.
     */
    public static final CntTableSync CNT_TABLE_SYNC = ru.smartsarov.citylighting.sprut.tables.CntTableSync.CNT_TABLE_SYNC;

    /**
     * The table <code>CNT_TARIFF</code>.
     */
    public static final CntTariff CNT_TARIFF = ru.smartsarov.citylighting.sprut.tables.CntTariff.CNT_TARIFF;

    /**
     * The table <code>CNT_USTATE</code>.
     */
    public static final CntUstate CNT_USTATE = ru.smartsarov.citylighting.sprut.tables.CntUstate.CNT_USTATE;

    /**
     * The table <code>CONFIG</code>.
     */
    public static final Config CONFIG = ru.smartsarov.citylighting.sprut.tables.Config.CONFIG;

    /**
     * The table <code>CSD_MODEM_LOCAL</code>.
     */
    public static final CsdModemLocal CSD_MODEM_LOCAL = ru.smartsarov.citylighting.sprut.tables.CsdModemLocal.CSD_MODEM_LOCAL;

    /**
     * The table <code>CSD_MODEM_LOCAL_STATE</code>.
     */
    public static final CsdModemLocalState CSD_MODEM_LOCAL_STATE = ru.smartsarov.citylighting.sprut.tables.CsdModemLocalState.CSD_MODEM_LOCAL_STATE;

    /**
     * The table <code>CSD_MODEM_LOCAL_TYPE</code>.
     */
    public static final CsdModemLocalType CSD_MODEM_LOCAL_TYPE = ru.smartsarov.citylighting.sprut.tables.CsdModemLocalType.CSD_MODEM_LOCAL_TYPE;

    /**
     * The table <code>CSD_MODEM_USK</code>.
     */
    public static final CsdModemUsk CSD_MODEM_USK = ru.smartsarov.citylighting.sprut.tables.CsdModemUsk.CSD_MODEM_USK;

    /**
     * The table <code>CSD_MODEM_USK_STATE</code>.
     */
    public static final CsdModemUskState CSD_MODEM_USK_STATE = ru.smartsarov.citylighting.sprut.tables.CsdModemUskState.CSD_MODEM_USK_STATE;

    /**
     * The table <code>CSD_SESSION_LOG</code>.
     */
    public static final CsdSessionLog CSD_SESSION_LOG = ru.smartsarov.citylighting.sprut.tables.CsdSessionLog.CSD_SESSION_LOG;

    /**
     * The table <code>DUAL</code>.
     */
    public static final Dual DUAL = ru.smartsarov.citylighting.sprut.tables.Dual.DUAL;

    /**
     * Call <code>DUAL</code>.
     */
    public static Result<DualRecord> DUAL(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.Dual.DUAL.call()).fetch();
    }

    /**
     * Get <code>DUAL</code> as a table.
     */
    public static Dual DUAL() {
        return ru.smartsarov.citylighting.sprut.tables.Dual.DUAL.call();
    }

    /**
     * The table <code>ECNTL_DAYLY</code>.
     */
    public static final EcntlDayly ECNTL_DAYLY = ru.smartsarov.citylighting.sprut.tables.EcntlDayly.ECNTL_DAYLY;

    /**
     * The table <code>ECNTL_MONTHLY</code>.
     */
    public static final EcntlMonthly ECNTL_MONTHLY = ru.smartsarov.citylighting.sprut.tables.EcntlMonthly.ECNTL_MONTHLY;

    /**
     * The table <code>ELEMENT_LINK</code>.
     */
    public static final ElementLink ELEMENT_LINK = ru.smartsarov.citylighting.sprut.tables.ElementLink.ELEMENT_LINK;

    /**
     * The table <code>ELEMENT_NOTIFICATION</code>.
     */
    public static final ElementNotification ELEMENT_NOTIFICATION = ru.smartsarov.citylighting.sprut.tables.ElementNotification.ELEMENT_NOTIFICATION;

    /**
     * The table <code>ELEMENT_SLOT</code>.
     */
    public static final ElementSlot ELEMENT_SLOT = ru.smartsarov.citylighting.sprut.tables.ElementSlot.ELEMENT_SLOT;

    /**
     * The table <code>ELEMENT_TYPE</code>.
     */
    public static final ElementType ELEMENT_TYPE = ru.smartsarov.citylighting.sprut.tables.ElementType.ELEMENT_TYPE;

    /**
     * The table <code>EXMODULE</code>.
     */
    public static final Exmodule EXMODULE = ru.smartsarov.citylighting.sprut.tables.Exmodule.EXMODULE;

    /**
     * The table <code>EXMODULE_TYPE</code>.
     */
    public static final ExmoduleType EXMODULE_TYPE = ru.smartsarov.citylighting.sprut.tables.ExmoduleType.EXMODULE_TYPE;

    /**
     * The table <code>FLAT</code>.
     */
    public static final Flat FLAT = ru.smartsarov.citylighting.sprut.tables.Flat.FLAT;

    /**
     * The table <code>GPRS_CURR</code>.
     */
    public static final GprsCurr GPRS_CURR = ru.smartsarov.citylighting.sprut.tables.GprsCurr.GPRS_CURR;

    /**
     * The table <code>GPRS_TELEMETRY</code>.
     */
    public static final GprsTelemetry GPRS_TELEMETRY = ru.smartsarov.citylighting.sprut.tables.GprsTelemetry.GPRS_TELEMETRY;

    /**
     * The table <code>GPRS_TRAFFIC</code>.
     */
    public static final GprsTraffic GPRS_TRAFFIC = ru.smartsarov.citylighting.sprut.tables.GprsTraffic.GPRS_TRAFFIC;

    /**
     * The table <code>GPRS_TRAFFIC_REPORT</code>.
     */
    public static final GprsTrafficReport GPRS_TRAFFIC_REPORT = ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT;

    /**
     * Call <code>GPRS_TRAFFIC_REPORT</code>.
     */
    public static Result<GprsTrafficReportRecord> GPRS_TRAFFIC_REPORT(Configuration configuration, String login, String pass, Date sdate, Date edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate)).fetch();
    }

    /**
     * Get <code>GPRS_TRAFFIC_REPORT</code> as a table.
     */
    public static GprsTrafficReport GPRS_TRAFFIC_REPORT(String login, String pass, Date sdate, Date edate) {
        return ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate);
    }

    /**
     * Get <code>GPRS_TRAFFIC_REPORT</code> as a table.
     */
    public static GprsTrafficReport GPRS_TRAFFIC_REPORT(Field<String> login, Field<String> pass, Field<Date> sdate, Field<Date> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate);
    }

    /**
     * The table <code>GRAPHICS</code>.
     */
    public static final Graphics GRAPHICS = ru.smartsarov.citylighting.sprut.tables.Graphics.GRAPHICS;

    /**
     * The table <code>GRAPHICS_PIN_MANUAL</code>.
     */
    public static final GraphicsPinManual GRAPHICS_PIN_MANUAL = ru.smartsarov.citylighting.sprut.tables.GraphicsPinManual.GRAPHICS_PIN_MANUAL;

    /**
     * The table <code>GRDL_CHANGE</code>.
     */
    public static final GrdlChange GRDL_CHANGE = ru.smartsarov.citylighting.sprut.tables.GrdlChange.GRDL_CHANGE;

    /**
     * The table <code>GRDL_SYNC</code>.
     */
    public static final GrdlSync GRDL_SYNC = ru.smartsarov.citylighting.sprut.tables.GrdlSync.GRDL_SYNC;

    /**
     * The table <code>GRDZ_CHANGE</code>.
     */
    public static final GrdzChange GRDZ_CHANGE = ru.smartsarov.citylighting.sprut.tables.GrdzChange.GRDZ_CHANGE;

    /**
     * The table <code>GUARD_ALARM_PROCESS</code>.
     */
    public static final GuardAlarmProcess GUARD_ALARM_PROCESS = ru.smartsarov.citylighting.sprut.tables.GuardAlarmProcess.GUARD_ALARM_PROCESS;

    /**
     * The table <code>GUARD_ATYPE</code>.
     */
    public static final GuardAtype GUARD_ATYPE = ru.smartsarov.citylighting.sprut.tables.GuardAtype.GUARD_ATYPE;

    /**
     * The table <code>GUARD_CAM</code>.
     */
    public static final GuardCam GUARD_CAM = ru.smartsarov.citylighting.sprut.tables.GuardCam.GUARD_CAM;

    /**
     * The table <code>GUARD_CTYPE</code>.
     */
    public static final GuardCtype GUARD_CTYPE = ru.smartsarov.citylighting.sprut.tables.GuardCtype.GUARD_CTYPE;

    /**
     * The table <code>GUARD_EVENT</code>.
     */
    public static final GuardEvent GUARD_EVENT = ru.smartsarov.citylighting.sprut.tables.GuardEvent.GUARD_EVENT;

    /**
     * The table <code>GUARD_EXSTATE</code>.
     */
    public static final GuardExstate GUARD_EXSTATE = ru.smartsarov.citylighting.sprut.tables.GuardExstate.GUARD_EXSTATE;

    /**
     * The table <code>GUARD_GROUP</code>.
     */
    public static final GuardGroup GUARD_GROUP = ru.smartsarov.citylighting.sprut.tables.GuardGroup.GUARD_GROUP;

    /**
     * The table <code>GUARD_INFORM</code>.
     */
    public static final GuardInform GUARD_INFORM = ru.smartsarov.citylighting.sprut.tables.GuardInform.GUARD_INFORM;

    /**
     * The table <code>GUARD_ITYPE</code>.
     */
    public static final GuardItype GUARD_ITYPE = ru.smartsarov.citylighting.sprut.tables.GuardItype.GUARD_ITYPE;

    /**
     * The table <code>GUARD_KEY</code>.
     */
    public static final GuardKey GUARD_KEY = ru.smartsarov.citylighting.sprut.tables.GuardKey.GUARD_KEY;

    /**
     * The table <code>GUARD_LINE</code>.
     */
    public static final GuardLine GUARD_LINE = ru.smartsarov.citylighting.sprut.tables.GuardLine.GUARD_LINE;

    /**
     * The table <code>GUARD_LOG</code>.
     */
    public static final GuardLog GUARD_LOG = ru.smartsarov.citylighting.sprut.tables.GuardLog.GUARD_LOG;

    /**
     * The table <code>GUARD_LSOST</code>.
     */
    public static final GuardLsost GUARD_LSOST = ru.smartsarov.citylighting.sprut.tables.GuardLsost.GUARD_LSOST;

    /**
     * The table <code>GUARD_LSTATE</code>.
     */
    public static final GuardLstate GUARD_LSTATE = ru.smartsarov.citylighting.sprut.tables.GuardLstate.GUARD_LSTATE;

    /**
     * The table <code>GUARD_MAIL</code>.
     */
    public static final GuardMail GUARD_MAIL = ru.smartsarov.citylighting.sprut.tables.GuardMail.GUARD_MAIL;

    /**
     * The table <code>GUARD_PHONE</code>.
     */
    public static final GuardPhone GUARD_PHONE = ru.smartsarov.citylighting.sprut.tables.GuardPhone.GUARD_PHONE;

    /**
     * The table <code>GUARD_PIN</code>.
     */
    public static final GuardPin GUARD_PIN = ru.smartsarov.citylighting.sprut.tables.GuardPin.GUARD_PIN;

    /**
     * The table <code>GUARD_PINDEV</code>.
     */
    public static final GuardPindev GUARD_PINDEV = ru.smartsarov.citylighting.sprut.tables.GuardPindev.GUARD_PINDEV;

    /**
     * The table <code>GUARD_PINTYPE</code>.
     */
    public static final GuardPintype GUARD_PINTYPE = ru.smartsarov.citylighting.sprut.tables.GuardPintype.GUARD_PINTYPE;

    /**
     * The table <code>GUARD_PIN_CURR</code>.
     */
    public static final GuardPinCurr GUARD_PIN_CURR = ru.smartsarov.citylighting.sprut.tables.GuardPinCurr.GUARD_PIN_CURR;

    /**
     * The table <code>GUARD_PIN_EVENT_DESRC</code>.
     */
    public static final GuardPinEventDesrc GUARD_PIN_EVENT_DESRC = ru.smartsarov.citylighting.sprut.tables.GuardPinEventDesrc.GUARD_PIN_EVENT_DESRC;

    /**
     * The table <code>GUARD_PIN_LOG</code>.
     */
    public static final GuardPinLog GUARD_PIN_LOG = ru.smartsarov.citylighting.sprut.tables.GuardPinLog.GUARD_PIN_LOG;

    /**
     * The table <code>GUARD_PIN_NETSOST</code>.
     */
    public static final GuardPinNetsost GUARD_PIN_NETSOST = ru.smartsarov.citylighting.sprut.tables.GuardPinNetsost.GUARD_PIN_NETSOST;

    /**
     * The table <code>GUARD_PIN_STYPE</code>.
     */
    public static final GuardPinStype GUARD_PIN_STYPE = ru.smartsarov.citylighting.sprut.tables.GuardPinStype.GUARD_PIN_STYPE;

    /**
     * The table <code>GUARD_RELAY</code>.
     */
    public static final GuardRelay GUARD_RELAY = ru.smartsarov.citylighting.sprut.tables.GuardRelay.GUARD_RELAY;

    /**
     * The table <code>GUARD_SMS</code>.
     */
    public static final GuardSms GUARD_SMS = ru.smartsarov.citylighting.sprut.tables.GuardSms.GUARD_SMS;

    /**
     * The table <code>GUARD_SMSSTAT</code>.
     */
    public static final GuardSmsstat GUARD_SMSSTAT = ru.smartsarov.citylighting.sprut.tables.GuardSmsstat.GUARD_SMSSTAT;

    /**
     * The table <code>GUARD_SSOST</code>.
     */
    public static final GuardSsost GUARD_SSOST = ru.smartsarov.citylighting.sprut.tables.GuardSsost.GUARD_SSOST;

    /**
     * The table <code>GUARD_USTATE</code>.
     */
    public static final GuardUstate GUARD_USTATE = ru.smartsarov.citylighting.sprut.tables.GuardUstate.GUARD_USTATE;

    /**
     * The table <code>GUARD_VALVE</code>.
     */
    public static final GuardValve GUARD_VALVE = ru.smartsarov.citylighting.sprut.tables.GuardValve.GUARD_VALVE;

    /**
     * The table <code>GUARD_VTYPE</code>.
     */
    public static final GuardVtype GUARD_VTYPE = ru.smartsarov.citylighting.sprut.tables.GuardVtype.GUARD_VTYPE;

    /**
     * The table <code>GUARD_ZONE</code>.
     */
    public static final GuardZone GUARD_ZONE = ru.smartsarov.citylighting.sprut.tables.GuardZone.GUARD_ZONE;

    /**
     * The table <code>HOME</code>.
     */
    public static final Home HOME = ru.smartsarov.citylighting.sprut.tables.Home.HOME;

    /**
     * The table <code>HOME_TYPE</code>.
     */
    public static final HomeType HOME_TYPE = ru.smartsarov.citylighting.sprut.tables.HomeType.HOME_TYPE;

    /**
     * The table <code>INS_GUARD_LOG</code>.
     */
    public static final InsGuardLog INS_GUARD_LOG = ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG;

    /**
     * Call <code>INS_GUARD_LOG</code>.
     */
    public static Result<InsGuardLogRecord> INS_GUARD_LOG(Configuration configuration, Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgEid) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid)).fetch();
    }

    /**
     * Get <code>INS_GUARD_LOG</code> as a table.
     */
    public static InsGuardLog INS_GUARD_LOG(Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid);
    }

    /**
     * Get <code>INS_GUARD_LOG</code> as a table.
     */
    public static InsGuardLog INS_GUARD_LOG(Field<Integer> grdlgAbId, Field<Integer> grdlgUnkId, Field<Integer> grdlgZid, Field<Integer> grdlgLid, Field<Short> grdlgEvent, Field<Short> grdlgSsost, Field<Short> grdlgDsost, Field<Short> grdlgLsost, Field<Timestamp> grdlgDatetime, Field<Short> grdlgDelay, Field<String> grdlgIbutton, Field<Integer> grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid);
    }

    /**
     * The table <code>INS_GUARD_LOG_2</code>.
     */
    public static final InsGuardLog_2 INS_GUARD_LOG_2 = ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2;

    /**
     * Call <code>INS_GUARD_LOG_2</code>.
     */
    public static Result<InsGuardLog_2Record> INS_GUARD_LOG_2(Configuration configuration, Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgPcsId, Integer grdlgEid) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid)).fetch();
    }

    /**
     * Get <code>INS_GUARD_LOG_2</code> as a table.
     */
    public static InsGuardLog_2 INS_GUARD_LOG_2(Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgPcsId, Integer grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid);
    }

    /**
     * Get <code>INS_GUARD_LOG_2</code> as a table.
     */
    public static InsGuardLog_2 INS_GUARD_LOG_2(Field<Integer> grdlgAbId, Field<Integer> grdlgUnkId, Field<Integer> grdlgZid, Field<Integer> grdlgLid, Field<Short> grdlgEvent, Field<Short> grdlgSsost, Field<Short> grdlgDsost, Field<Short> grdlgLsost, Field<Timestamp> grdlgDatetime, Field<Short> grdlgDelay, Field<String> grdlgIbutton, Field<Integer> grdlgPcsId, Field<Integer> grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid);
    }

    /**
     * The table <code>INS_XGROUP</code>.
     */
    public static final InsXgroup INS_XGROUP = ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP;

    /**
     * Call <code>INS_XGROUP</code>.
     */
    public static Result<InsXgroupRecord> INS_XGROUP(Configuration configuration, Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword)).fetch();
    }

    /**
     * Get <code>INS_XGROUP</code> as a table.
     */
    public static InsXgroup INS_XGROUP(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Get <code>INS_XGROUP</code> as a table.
     */
    public static InsXgroup INS_XGROUP(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * The table <code>INS_XUSER</code>.
     */
    public static final InsXuser INS_XUSER = ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER;

    /**
     * Call <code>INS_XUSER</code>.
     */
    public static Result<InsXuserRecord> INS_XUSER(Configuration configuration, Integer userId, Integer userAbId, Integer userGrpId, Integer userType, String userName, String userPassword, String userKey, String userDescription) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription)).fetch();
    }

    /**
     * Get <code>INS_XUSER</code> as a table.
     */
    public static InsXuser INS_XUSER(Integer userId, Integer userAbId, Integer userGrpId, Integer userType, String userName, String userPassword, String userKey, String userDescription) {
        return ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription);
    }

    /**
     * Get <code>INS_XUSER</code> as a table.
     */
    public static InsXuser INS_XUSER(Field<Integer> userId, Field<Integer> userAbId, Field<Integer> userGrpId, Field<Integer> userType, Field<String> userName, Field<String> userPassword, Field<String> userKey, Field<String> userDescription) {
        return ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription);
    }

    /**
     * The table <code>LED_CONTROL_ARCH</code>.
     */
    public static final LedControlArch LED_CONTROL_ARCH = ru.smartsarov.citylighting.sprut.tables.LedControlArch.LED_CONTROL_ARCH;

    /**
     * The table <code>LED_CONTROL_CURR</code>.
     */
    public static final LedControlCurr LED_CONTROL_CURR = ru.smartsarov.citylighting.sprut.tables.LedControlCurr.LED_CONTROL_CURR;

    /**
     * The table <code>LIGHT_ACTION</code>.
     */
    public static final LightAction LIGHT_ACTION = ru.smartsarov.citylighting.sprut.tables.LightAction.LIGHT_ACTION;

    /**
     * The table <code>LIGHT_BLOCK</code>.
     */
    public static final LightBlock LIGHT_BLOCK = ru.smartsarov.citylighting.sprut.tables.LightBlock.LIGHT_BLOCK;

    /**
     * The table <code>LIGHT_BOX</code>.
     */
    public static final LightBox LIGHT_BOX = ru.smartsarov.citylighting.sprut.tables.LightBox.LIGHT_BOX;

    /**
     * The table <code>LIGHT_LINE</code>.
     */
    public static final LightLine LIGHT_LINE = ru.smartsarov.citylighting.sprut.tables.LightLine.LIGHT_LINE;

    /**
     * The table <code>LIGHT_SHEDULE</code>.
     */
    public static final LightShedule LIGHT_SHEDULE = ru.smartsarov.citylighting.sprut.tables.LightShedule.LIGHT_SHEDULE;

    /**
     * The table <code>LIGHT_SHIFT</code>.
     */
    public static final LightShift LIGHT_SHIFT = ru.smartsarov.citylighting.sprut.tables.LightShift.LIGHT_SHIFT;

    /**
     * The table <code>LIST_HOME</code>.
     */
    public static final ListHome LIST_HOME = ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME;

    /**
     * Call <code>LIST_HOME</code>.
     */
    public static Result<ListHomeRecord> LIST_HOME(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME.call()).fetch();
    }

    /**
     * Get <code>LIST_HOME</code> as a table.
     */
    public static ListHome LIST_HOME() {
        return ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME.call();
    }

    /**
     * The table <code>LIST_STREET</code>.
     */
    public static final ListStreet LIST_STREET = ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET;

    /**
     * Call <code>LIST_STREET</code>.
     */
    public static Result<ListStreetRecord> LIST_STREET(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET.call()).fetch();
    }

    /**
     * Get <code>LIST_STREET</code> as a table.
     */
    public static ListStreet LIST_STREET() {
        return ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET.call();
    }

    /**
     * The table <code>LOOK_INTELLIGENT_ELECTRO</code>.
     */
    public static final LookIntelligentElectro LOOK_INTELLIGENT_ELECTRO = ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO;

    /**
     * Call <code>LOOK_INTELLIGENT_ELECTRO</code>.
     */
    public static Result<LookIntelligentElectroRecord> LOOK_INTELLIGENT_ELECTRO(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO.call()).fetch();
    }

    /**
     * Get <code>LOOK_INTELLIGENT_ELECTRO</code> as a table.
     */
    public static LookIntelligentElectro LOOK_INTELLIGENT_ELECTRO() {
        return ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO.call();
    }

    /**
     * The table <code>MON$ATTACHMENTS</code>.
     */
    public static final Mon$attachments MON$ATTACHMENTS = ru.smartsarov.citylighting.sprut.tables.Mon$attachments.MON$ATTACHMENTS;

    /**
     * The table <code>MON$CALL_STACK</code>.
     */
    public static final Mon$callStack MON$CALL_STACK = ru.smartsarov.citylighting.sprut.tables.Mon$callStack.MON$CALL_STACK;

    /**
     * The table <code>MON$CONTEXT_VARIABLES</code>.
     */
    public static final Mon$contextVariables MON$CONTEXT_VARIABLES = ru.smartsarov.citylighting.sprut.tables.Mon$contextVariables.MON$CONTEXT_VARIABLES;

    /**
     * The table <code>MON$DATABASE</code>.
     */
    public static final Mon$database MON$DATABASE = ru.smartsarov.citylighting.sprut.tables.Mon$database.MON$DATABASE;

    /**
     * The table <code>MON$IO_STATS</code>.
     */
    public static final Mon$ioStats MON$IO_STATS = ru.smartsarov.citylighting.sprut.tables.Mon$ioStats.MON$IO_STATS;

    /**
     * The table <code>MON$MEMORY_USAGE</code>.
     */
    public static final Mon$memoryUsage MON$MEMORY_USAGE = ru.smartsarov.citylighting.sprut.tables.Mon$memoryUsage.MON$MEMORY_USAGE;

    /**
     * The table <code>MON$RECORD_STATS</code>.
     */
    public static final Mon$recordStats MON$RECORD_STATS = ru.smartsarov.citylighting.sprut.tables.Mon$recordStats.MON$RECORD_STATS;

    /**
     * The table <code>MON$STATEMENTS</code>.
     */
    public static final Mon$statements MON$STATEMENTS = ru.smartsarov.citylighting.sprut.tables.Mon$statements.MON$STATEMENTS;

    /**
     * The table <code>MON$TRANSACTIONS</code>.
     */
    public static final Mon$transactions MON$TRANSACTIONS = ru.smartsarov.citylighting.sprut.tables.Mon$transactions.MON$TRANSACTIONS;

    /**
     * The table <code>MRC_HOUR_PWR_PROFILE</code>.
     */
    public static final MrcHourPwrProfile MRC_HOUR_PWR_PROFILE = ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE;

    /**
     * Call <code>MRC_HOUR_PWR_PROFILE</code>.
     */
    public static Result<MrcHourPwrProfileRecord> MRC_HOUR_PWR_PROFILE(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>MRC_HOUR_PWR_PROFILE</code> as a table.
     */
    public static MrcHourPwrProfile MRC_HOUR_PWR_PROFILE(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate);
    }

    /**
     * Get <code>MRC_HOUR_PWR_PROFILE</code> as a table.
     */
    public static MrcHourPwrProfile MRC_HOUR_PWR_PROFILE(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate);
    }

    /**
     * The table <code>NORMATIVE</code>.
     */
    public static final Normative NORMATIVE = ru.smartsarov.citylighting.sprut.tables.Normative.NORMATIVE;

    /**
     * The table <code>NORMATIVE_CNT_LINK</code>.
     */
    public static final NormativeCntLink NORMATIVE_CNT_LINK = ru.smartsarov.citylighting.sprut.tables.NormativeCntLink.NORMATIVE_CNT_LINK;

    /**
     * The table <code>NORMATIVE_ELCTR</code>.
     */
    public static final NormativeElctr NORMATIVE_ELCTR = ru.smartsarov.citylighting.sprut.tables.NormativeElctr.NORMATIVE_ELCTR;

    /**
     * The table <code>NORMATIVE_GAS</code>.
     */
    public static final NormativeGas NORMATIVE_GAS = ru.smartsarov.citylighting.sprut.tables.NormativeGas.NORMATIVE_GAS;

    /**
     * The table <code>NORMATIVE_HEAT</code>.
     */
    public static final NormativeHeat NORMATIVE_HEAT = ru.smartsarov.citylighting.sprut.tables.NormativeHeat.NORMATIVE_HEAT;

    /**
     * The table <code>NORMATIVE_METER</code>.
     */
    public static final NormativeMeter NORMATIVE_METER = ru.smartsarov.citylighting.sprut.tables.NormativeMeter.NORMATIVE_METER;

    /**
     * The table <code>NORMATIVE_WATER</code>.
     */
    public static final NormativeWater NORMATIVE_WATER = ru.smartsarov.citylighting.sprut.tables.NormativeWater.NORMATIVE_WATER;

    /**
     * The table <code>OBJ_ACTION_AVAILABLE</code>.
     */
    public static final ObjActionAvailable OBJ_ACTION_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjActionAvailable.OBJ_ACTION_AVAILABLE;

    /**
     * The table <code>OBJ_ACTION_AVAILABLE_GET</code>.
     */
    public static final ObjActionAvailableGet OBJ_ACTION_AVAILABLE_GET = ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET;

    /**
     * Call <code>OBJ_ACTION_AVAILABLE_GET</code>.
     */
    public static Result<ObjActionAvailableGetRecord> OBJ_ACTION_AVAILABLE_GET(Configuration configuration, String login, String pass, Integer objId, Integer objType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType)).fetch();
    }

    /**
     * Get <code>OBJ_ACTION_AVAILABLE_GET</code> as a table.
     */
    public static ObjActionAvailableGet OBJ_ACTION_AVAILABLE_GET(String login, String pass, Integer objId, Integer objType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType);
    }

    /**
     * Get <code>OBJ_ACTION_AVAILABLE_GET</code> as a table.
     */
    public static ObjActionAvailableGet OBJ_ACTION_AVAILABLE_GET(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType);
    }

    /**
     * The table <code>OBJ_ACTION_STATE_AVAILABLE</code>.
     */
    public static final ObjActionStateAvailable OBJ_ACTION_STATE_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjActionStateAvailable.OBJ_ACTION_STATE_AVAILABLE;

    /**
     * The table <code>OBJ_ARCHIVE_PERIOD</code>.
     */
    public static final ObjArchivePeriod OBJ_ARCHIVE_PERIOD = ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriod.OBJ_ARCHIVE_PERIOD;

    /**
     * The table <code>OBJ_ARCHIVE_PERIOD_AVAILABLE</code>.
     */
    public static final ObjArchivePeriodAvailable OBJ_ARCHIVE_PERIOD_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjArchivePeriodAvailable.OBJ_ARCHIVE_PERIOD_AVAILABLE;

    /**
     * The table <code>OBJ_ARCHIVE_TYPE</code>.
     */
    public static final ObjArchiveType OBJ_ARCHIVE_TYPE = ru.smartsarov.citylighting.sprut.tables.ObjArchiveType.OBJ_ARCHIVE_TYPE;

    /**
     * The table <code>OBJ_ARCHIVE_TYPE_AVAILABLE</code>.
     */
    public static final ObjArchiveTypeAvailable OBJ_ARCHIVE_TYPE_AVAILABLE = ru.smartsarov.citylighting.sprut.tables.ObjArchiveTypeAvailable.OBJ_ARCHIVE_TYPE_AVAILABLE;

    /**
     * The table <code>OBJ_COMMENT</code>.
     */
    public static final ObjComment OBJ_COMMENT = ru.smartsarov.citylighting.sprut.tables.ObjComment.OBJ_COMMENT;

    /**
     * The table <code>OBJ_CONTROL</code>.
     */
    public static final ObjControl OBJ_CONTROL = ru.smartsarov.citylighting.sprut.tables.ObjControl.OBJ_CONTROL;

    /**
     * The table <code>OBJ_CONTROL_GET</code>.
     */
    public static final ObjControlGet OBJ_CONTROL_GET = ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET;

    /**
     * Call <code>OBJ_CONTROL_GET</code>.
     */
    public static Result<ObjControlGetRecord> OBJ_CONTROL_GET(Configuration configuration, String login, String pass, Integer objId, Integer objType, Integer objAction) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction)).fetch();
    }

    /**
     * Get <code>OBJ_CONTROL_GET</code> as a table.
     */
    public static ObjControlGet OBJ_CONTROL_GET(String login, String pass, Integer objId, Integer objType, Integer objAction) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction);
    }

    /**
     * Get <code>OBJ_CONTROL_GET</code> as a table.
     */
    public static ObjControlGet OBJ_CONTROL_GET(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType, Field<Integer> objAction) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction);
    }

    /**
     * The table <code>OBJ_CONTROL_LOG</code>.
     */
    public static final ObjControlLog OBJ_CONTROL_LOG = ru.smartsarov.citylighting.sprut.tables.ObjControlLog.OBJ_CONTROL_LOG;

    /**
     * The table <code>OBJ_CONTROL_SET</code>.
     */
    public static final ObjControlSet OBJ_CONTROL_SET = ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET;

    /**
     * Call <code>OBJ_CONTROL_SET</code>.
     */
    public static Result<ObjControlSetRecord> OBJ_CONTROL_SET(Configuration configuration, String login, String pass, Integer objId, Integer objType, Integer objAction, Integer objActionType, Integer paramInt, Double paramDouble, String paramStr, String commentUser, Timestamp commentDatetime, String commentIp) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp)).fetch();
    }

    /**
     * Get <code>OBJ_CONTROL_SET</code> as a table.
     */
    public static ObjControlSet OBJ_CONTROL_SET(String login, String pass, Integer objId, Integer objType, Integer objAction, Integer objActionType, Integer paramInt, Double paramDouble, String paramStr, String commentUser, Timestamp commentDatetime, String commentIp) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp);
    }

    /**
     * Get <code>OBJ_CONTROL_SET</code> as a table.
     */
    public static ObjControlSet OBJ_CONTROL_SET(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType, Field<Integer> objAction, Field<Integer> objActionType, Field<Integer> paramInt, Field<Double> paramDouble, Field<String> paramStr, Field<String> commentUser, Field<Timestamp> commentDatetime, Field<String> commentIp) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp);
    }

    /**
     * The table <code>OBJ_MAP</code>.
     */
    public static final ObjMap OBJ_MAP = ru.smartsarov.citylighting.sprut.tables.ObjMap.OBJ_MAP;

    /**
     * The table <code>OBJ_MAP_GET</code>.
     */
    public static final ObjMapGet OBJ_MAP_GET = ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET;

    /**
     * Call <code>OBJ_MAP_GET</code>.
     */
    public static Result<ObjMapGetRecord> OBJ_MAP_GET(Configuration configuration, Integer inObjId, Integer inObjType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType)).fetch();
    }

    /**
     * Get <code>OBJ_MAP_GET</code> as a table.
     */
    public static ObjMapGet OBJ_MAP_GET(Integer inObjId, Integer inObjType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType);
    }

    /**
     * Get <code>OBJ_MAP_GET</code> as a table.
     */
    public static ObjMapGet OBJ_MAP_GET(Field<Integer> inObjId, Field<Integer> inObjType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType);
    }

    /**
     * The table <code>OBJ_MAP_SET</code>.
     */
    public static final ObjMapSet OBJ_MAP_SET = ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET;

    /**
     * Call <code>OBJ_MAP_SET</code>.
     */
    public static Result<ObjMapSetRecord> OBJ_MAP_SET(Configuration configuration, Integer inObjId, Integer inObjType, Double inObjPosX, Double inObjPosY, Double inObjPosZ, String inActualParam) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam)).fetch();
    }

    /**
     * Get <code>OBJ_MAP_SET</code> as a table.
     */
    public static ObjMapSet OBJ_MAP_SET(Integer inObjId, Integer inObjType, Double inObjPosX, Double inObjPosY, Double inObjPosZ, String inActualParam) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam);
    }

    /**
     * Get <code>OBJ_MAP_SET</code> as a table.
     */
    public static ObjMapSet OBJ_MAP_SET(Field<Integer> inObjId, Field<Integer> inObjType, Field<Double> inObjPosX, Field<Double> inObjPosY, Field<Double> inObjPosZ, Field<String> inActualParam) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam);
    }

    /**
     * The table <code>OBJ_TYPE</code>.
     */
    public static final ObjType OBJ_TYPE = ru.smartsarov.citylighting.sprut.tables.ObjType.OBJ_TYPE;

    /**
     * The table <code>PARSE_CNT_LIST</code>.
     */
    public static final ParseCntList PARSE_CNT_LIST = ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST;

    /**
     * Call <code>PARSE_CNT_LIST</code>.
     */
    public static Result<ParseCntListRecord> PARSE_CNT_LIST(Configuration configuration, String cntList) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList)).fetch();
    }

    /**
     * Get <code>PARSE_CNT_LIST</code> as a table.
     */
    public static ParseCntList PARSE_CNT_LIST(String cntList) {
        return ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList);
    }

    /**
     * Get <code>PARSE_CNT_LIST</code> as a table.
     */
    public static ParseCntList PARSE_CNT_LIST(Field<String> cntList) {
        return ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList);
    }

    /**
     * The table <code>PERSONS</code>.
     */
    public static final Persons PERSONS = ru.smartsarov.citylighting.sprut.tables.Persons.PERSONS;

    /**
     * The table <code>P_CDE_TYPE</code>.
     */
    public static final PCdeType P_CDE_TYPE = ru.smartsarov.citylighting.sprut.tables.PCdeType.P_CDE_TYPE;

    /**
     * The table <code>P_CODE</code>.
     */
    public static final PCode P_CODE = ru.smartsarov.citylighting.sprut.tables.PCode.P_CODE;

    /**
     * The table <code>P_ZONE</code>.
     */
    public static final PZone P_ZONE = ru.smartsarov.citylighting.sprut.tables.PZone.P_ZONE;

    /**
     * The table <code>RDB$BACKUP_HISTORY</code>.
     */
    public static final Rdb$backupHistory RDB$BACKUP_HISTORY = ru.smartsarov.citylighting.sprut.tables.Rdb$backupHistory.RDB$BACKUP_HISTORY;

    /**
     * The table <code>RDB$CHARACTER_SETS</code>.
     */
    public static final Rdb$characterSets RDB$CHARACTER_SETS = ru.smartsarov.citylighting.sprut.tables.Rdb$characterSets.RDB$CHARACTER_SETS;

    /**
     * The table <code>RDB$CHECK_CONSTRAINTS</code>.
     */
    public static final Rdb$checkConstraints RDB$CHECK_CONSTRAINTS = ru.smartsarov.citylighting.sprut.tables.Rdb$checkConstraints.RDB$CHECK_CONSTRAINTS;

    /**
     * The table <code>RDB$COLLATIONS</code>.
     */
    public static final Rdb$collations RDB$COLLATIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$collations.RDB$COLLATIONS;

    /**
     * The table <code>RDB$DATABASE</code>.
     */
    public static final Rdb$database RDB$DATABASE = ru.smartsarov.citylighting.sprut.tables.Rdb$database.RDB$DATABASE;

    /**
     * The table <code>RDB$DEPENDENCIES</code>.
     */
    public static final Rdb$dependencies RDB$DEPENDENCIES = ru.smartsarov.citylighting.sprut.tables.Rdb$dependencies.RDB$DEPENDENCIES;

    /**
     * The table <code>RDB$EXCEPTIONS</code>.
     */
    public static final Rdb$exceptions RDB$EXCEPTIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$exceptions.RDB$EXCEPTIONS;

    /**
     * The table <code>RDB$FIELDS</code>.
     */
    public static final Rdb$fields RDB$FIELDS = ru.smartsarov.citylighting.sprut.tables.Rdb$fields.RDB$FIELDS;

    /**
     * The table <code>RDB$FIELD_DIMENSIONS</code>.
     */
    public static final Rdb$fieldDimensions RDB$FIELD_DIMENSIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$fieldDimensions.RDB$FIELD_DIMENSIONS;

    /**
     * The table <code>RDB$FILES</code>.
     */
    public static final Rdb$files RDB$FILES = ru.smartsarov.citylighting.sprut.tables.Rdb$files.RDB$FILES;

    /**
     * The table <code>RDB$FILTERS</code>.
     */
    public static final Rdb$filters RDB$FILTERS = ru.smartsarov.citylighting.sprut.tables.Rdb$filters.RDB$FILTERS;

    /**
     * The table <code>RDB$FORMATS</code>.
     */
    public static final Rdb$formats RDB$FORMATS = ru.smartsarov.citylighting.sprut.tables.Rdb$formats.RDB$FORMATS;

    /**
     * The table <code>RDB$FUNCTIONS</code>.
     */
    public static final Rdb$functions RDB$FUNCTIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$functions.RDB$FUNCTIONS;

    /**
     * The table <code>RDB$FUNCTION_ARGUMENTS</code>.
     */
    public static final Rdb$functionArguments RDB$FUNCTION_ARGUMENTS = ru.smartsarov.citylighting.sprut.tables.Rdb$functionArguments.RDB$FUNCTION_ARGUMENTS;

    /**
     * The table <code>RDB$GENERATORS</code>.
     */
    public static final Rdb$generators RDB$GENERATORS = ru.smartsarov.citylighting.sprut.tables.Rdb$generators.RDB$GENERATORS;

    /**
     * The table <code>RDB$INDEX_SEGMENTS</code>.
     */
    public static final Rdb$indexSegments RDB$INDEX_SEGMENTS = ru.smartsarov.citylighting.sprut.tables.Rdb$indexSegments.RDB$INDEX_SEGMENTS;

    /**
     * The table <code>RDB$INDICES</code>.
     */
    public static final Rdb$indices RDB$INDICES = ru.smartsarov.citylighting.sprut.tables.Rdb$indices.RDB$INDICES;

    /**
     * The table <code>RDB$LOG_FILES</code>.
     */
    public static final Rdb$logFiles RDB$LOG_FILES = ru.smartsarov.citylighting.sprut.tables.Rdb$logFiles.RDB$LOG_FILES;

    /**
     * The table <code>RDB$PAGES</code>.
     */
    public static final Rdb$pages RDB$PAGES = ru.smartsarov.citylighting.sprut.tables.Rdb$pages.RDB$PAGES;

    /**
     * The table <code>RDB$PROCEDURES</code>.
     */
    public static final Rdb$procedures RDB$PROCEDURES = ru.smartsarov.citylighting.sprut.tables.Rdb$procedures.RDB$PROCEDURES;

    /**
     * The table <code>RDB$PROCEDURE_PARAMETERS</code>.
     */
    public static final Rdb$procedureParameters RDB$PROCEDURE_PARAMETERS = ru.smartsarov.citylighting.sprut.tables.Rdb$procedureParameters.RDB$PROCEDURE_PARAMETERS;

    /**
     * The table <code>RDB$REF_CONSTRAINTS</code>.
     */
    public static final Rdb$refConstraints RDB$REF_CONSTRAINTS = ru.smartsarov.citylighting.sprut.tables.Rdb$refConstraints.RDB$REF_CONSTRAINTS;

    /**
     * The table <code>RDB$RELATIONS</code>.
     */
    public static final Rdb$relations RDB$RELATIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$relations.RDB$RELATIONS;

    /**
     * The table <code>RDB$RELATION_CONSTRAINTS</code>.
     */
    public static final Rdb$relationConstraints RDB$RELATION_CONSTRAINTS = ru.smartsarov.citylighting.sprut.tables.Rdb$relationConstraints.RDB$RELATION_CONSTRAINTS;

    /**
     * The table <code>RDB$RELATION_FIELDS</code>.
     */
    public static final Rdb$relationFields RDB$RELATION_FIELDS = ru.smartsarov.citylighting.sprut.tables.Rdb$relationFields.RDB$RELATION_FIELDS;

    /**
     * The table <code>RDB$ROLES</code>.
     */
    public static final Rdb$roles RDB$ROLES = ru.smartsarov.citylighting.sprut.tables.Rdb$roles.RDB$ROLES;

    /**
     * The table <code>RDB$SECURITY_CLASSES</code>.
     */
    public static final Rdb$securityClasses RDB$SECURITY_CLASSES = ru.smartsarov.citylighting.sprut.tables.Rdb$securityClasses.RDB$SECURITY_CLASSES;

    /**
     * The table <code>RDB$TRANSACTIONS</code>.
     */
    public static final Rdb$transactions RDB$TRANSACTIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$transactions.RDB$TRANSACTIONS;

    /**
     * The table <code>RDB$TRIGGERS</code>.
     */
    public static final Rdb$triggers RDB$TRIGGERS = ru.smartsarov.citylighting.sprut.tables.Rdb$triggers.RDB$TRIGGERS;

    /**
     * The table <code>RDB$TRIGGER_MESSAGES</code>.
     */
    public static final Rdb$triggerMessages RDB$TRIGGER_MESSAGES = ru.smartsarov.citylighting.sprut.tables.Rdb$triggerMessages.RDB$TRIGGER_MESSAGES;

    /**
     * The table <code>RDB$TYPES</code>.
     */
    public static final Rdb$types RDB$TYPES = ru.smartsarov.citylighting.sprut.tables.Rdb$types.RDB$TYPES;

    /**
     * The table <code>RDB$USER_PRIVILEGES</code>.
     */
    public static final Rdb$userPrivileges RDB$USER_PRIVILEGES = ru.smartsarov.citylighting.sprut.tables.Rdb$userPrivileges.RDB$USER_PRIVILEGES;

    /**
     * The table <code>RDB$VIEW_RELATIONS</code>.
     */
    public static final Rdb$viewRelations RDB$VIEW_RELATIONS = ru.smartsarov.citylighting.sprut.tables.Rdb$viewRelations.RDB$VIEW_RELATIONS;

    /**
     * The table <code>REGION</code>.
     */
    public static final Region REGION = ru.smartsarov.citylighting.sprut.tables.Region.REGION;

    /**
     * The table <code>REGION_TYPE</code>.
     */
    public static final RegionType REGION_TYPE = ru.smartsarov.citylighting.sprut.tables.RegionType.REGION_TYPE;

    /**
     * The table <code>REPORT</code>.
     */
    public static final Report REPORT = ru.smartsarov.citylighting.sprut.tables.Report.REPORT;

    /**
     * The table <code>REPORT_DATA</code>.
     */
    public static final ReportData REPORT_DATA = ru.smartsarov.citylighting.sprut.tables.ReportData.REPORT_DATA;

    /**
     * The table <code>REPORT_STRUCT</code>.
     */
    public static final ReportStruct REPORT_STRUCT = ru.smartsarov.citylighting.sprut.tables.ReportStruct.REPORT_STRUCT;

    /**
     * The table <code>REPORT_VAR</code>.
     */
    public static final ReportVar REPORT_VAR = ru.smartsarov.citylighting.sprut.tables.ReportVar.REPORT_VAR;

    /**
     * The table <code>SEC_TO_TEXT</code>.
     */
    public static final SecToText SEC_TO_TEXT = ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT;

    /**
     * Call <code>SEC_TO_TEXT</code>.
     */
    public static Result<SecToTextRecord> SEC_TO_TEXT(Configuration configuration, Integer sec) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec)).fetch();
    }

    /**
     * Get <code>SEC_TO_TEXT</code> as a table.
     */
    public static SecToText SEC_TO_TEXT(Integer sec) {
        return ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec);
    }

    /**
     * Get <code>SEC_TO_TEXT</code> as a table.
     */
    public static SecToText SEC_TO_TEXT(Field<Integer> sec) {
        return ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec);
    }

    /**
     * The table <code>SERVICE_CUR</code>.
     */
    public static final ServiceCur SERVICE_CUR = ru.smartsarov.citylighting.sprut.tables.ServiceCur.SERVICE_CUR;

    /**
     * The table <code>SERVICE_STATE</code>.
     */
    public static final ServiceState SERVICE_STATE = ru.smartsarov.citylighting.sprut.tables.ServiceState.SERVICE_STATE;

    /**
     * The table <code>SETTINGS_GUI</code>.
     */
    public static final SettingsGui SETTINGS_GUI = ru.smartsarov.citylighting.sprut.tables.SettingsGui.SETTINGS_GUI;

    /**
     * The table <code>SET_CNT_CONTROL</code>.
     */
    public static final SetCntControl SET_CNT_CONTROL = ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL;

    /**
     * Call <code>SET_CNT_CONTROL</code>.
     */
    public static Result<SetCntControlRecord> SET_CNT_CONTROL(Configuration configuration, Integer cntid, Integer cntAction, Integer cntLimit, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass)).fetch();
    }

    /**
     * Get <code>SET_CNT_CONTROL</code> as a table.
     */
    public static SetCntControl SET_CNT_CONTROL(Integer cntid, Integer cntAction, Integer cntLimit, String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass);
    }

    /**
     * Get <code>SET_CNT_CONTROL</code> as a table.
     */
    public static SetCntControl SET_CNT_CONTROL(Field<Integer> cntid, Field<Integer> cntAction, Field<Integer> cntLimit, Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass);
    }

    /**
     * The table <code>STREET</code>.
     */
    public static final Street STREET = ru.smartsarov.citylighting.sprut.tables.Street.STREET;

    /**
     * The table <code>STREET_TYPE</code>.
     */
    public static final StreetType STREET_TYPE = ru.smartsarov.citylighting.sprut.tables.StreetType.STREET_TYPE;

    /**
     * The table <code>UNO_STATES</code>.
     */
    public static final UnoStates UNO_STATES = ru.smartsarov.citylighting.sprut.tables.UnoStates.UNO_STATES;

    /**
     * The table <code>UPD_XGROUP</code>.
     */
    public static final UpdXgroup UPD_XGROUP = ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP;

    /**
     * Call <code>UPD_XGROUP</code>.
     */
    public static Result<UpdXgroupRecord> UPD_XGROUP(Configuration configuration, Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword)).fetch();
    }

    /**
     * Get <code>UPD_XGROUP</code> as a table.
     */
    public static UpdXgroup UPD_XGROUP(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Get <code>UPD_XGROUP</code> as a table.
     */
    public static UpdXgroup UPD_XGROUP(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * The table <code>USK</code>.
     */
    public static final Usk USK = ru.smartsarov.citylighting.sprut.tables.Usk.USK;

    /**
     * The table <code>USKL_LOG</code>.
     */
    public static final UsklLog USKL_LOG = ru.smartsarov.citylighting.sprut.tables.UsklLog.USKL_LOG;

    /**
     * The table <code>USKL_SHEDULE</code>.
     */
    public static final UsklShedule USKL_SHEDULE = ru.smartsarov.citylighting.sprut.tables.UsklShedule.USKL_SHEDULE;

    /**
     * The table <code>USKL_SYNC</code>.
     */
    public static final UsklSync USKL_SYNC = ru.smartsarov.citylighting.sprut.tables.UsklSync.USKL_SYNC;

    /**
     * The table <code>USKL_SYS_EVENT_TYPE</code>.
     */
    public static final UsklSysEventType USKL_SYS_EVENT_TYPE = ru.smartsarov.citylighting.sprut.tables.UsklSysEventType.USKL_SYS_EVENT_TYPE;

    /**
     * The table <code>USK_CHANGE</code>.
     */
    public static final UskChange USK_CHANGE = ru.smartsarov.citylighting.sprut.tables.UskChange.USK_CHANGE;

    /**
     * The table <code>USK_CURR</code>.
     */
    public static final UskCurr USK_CURR = ru.smartsarov.citylighting.sprut.tables.UskCurr.USK_CURR;

    /**
     * The table <code>USK_EXT_CHANGE</code>.
     */
    public static final UskExtChange USK_EXT_CHANGE = ru.smartsarov.citylighting.sprut.tables.UskExtChange.USK_EXT_CHANGE;

    /**
     * The table <code>USK_EXT_MODULE</code>.
     */
    public static final UskExtModule USK_EXT_MODULE = ru.smartsarov.citylighting.sprut.tables.UskExtModule.USK_EXT_MODULE;

    /**
     * The table <code>USK_JOURNAL</code>.
     */
    public static final UskJournal USK_JOURNAL = ru.smartsarov.citylighting.sprut.tables.UskJournal.USK_JOURNAL;

    /**
     * The table <code>USK_LOG</code>.
     */
    public static final UskLog USK_LOG = ru.smartsarov.citylighting.sprut.tables.UskLog.USK_LOG;

    /**
     * The table <code>USK_SYS_EVENT</code>.
     */
    public static final UskSysEvent USK_SYS_EVENT = ru.smartsarov.citylighting.sprut.tables.UskSysEvent.USK_SYS_EVENT;

    /**
     * The table <code>USK_TYPE</code>.
     */
    public static final UskType USK_TYPE = ru.smartsarov.citylighting.sprut.tables.UskType.USK_TYPE;

    /**
     * The table <code>VERSION</code>.
     */
    public static final Version VERSION = ru.smartsarov.citylighting.sprut.tables.Version.VERSION;

    /**
     * The table <code>VIEW_ELECTRO</code>.
     */
    public static final ViewElectro VIEW_ELECTRO = ru.smartsarov.citylighting.sprut.tables.ViewElectro.VIEW_ELECTRO;

    /**
     * The table <code>WT_ACCESS</code>.
     */
    public static final WtAccess WT_ACCESS = ru.smartsarov.citylighting.sprut.tables.WtAccess.WT_ACCESS;

    /**
     * The table <code>WT_GROUP</code>.
     */
    public static final WtGroup WT_GROUP = ru.smartsarov.citylighting.sprut.tables.WtGroup.WT_GROUP;

    /**
     * The table <code>WT_MSA</code>.
     */
    public static final WtMsa WT_MSA = ru.smartsarov.citylighting.sprut.tables.WtMsa.WT_MSA;

    /**
     * The table <code>WT_SCHEDULE</code>.
     */
    public static final WtSchedule WT_SCHEDULE = ru.smartsarov.citylighting.sprut.tables.WtSchedule.WT_SCHEDULE;

    /**
     * The table <code>WT_SCHEDULE_DEPEND</code>.
     */
    public static final WtScheduleDepend WT_SCHEDULE_DEPEND = ru.smartsarov.citylighting.sprut.tables.WtScheduleDepend.WT_SCHEDULE_DEPEND;

    /**
     * The table <code>WT_USER</code>.
     */
    public static final WtUser WT_USER = ru.smartsarov.citylighting.sprut.tables.WtUser.WT_USER;

    /**
     * The table <code>XGROUP</code>.
     */
    public static final Xgroup XGROUP = ru.smartsarov.citylighting.sprut.tables.Xgroup.XGROUP;

    /**
     * The table <code>XINTERFACE</code>.
     */
    public static final Xinterface XINTERFACE = ru.smartsarov.citylighting.sprut.tables.Xinterface.XINTERFACE;

    /**
     * The table <code>XRULE</code>.
     */
    public static final Xrule XRULE = ru.smartsarov.citylighting.sprut.tables.Xrule.XRULE;

    /**
     * The table <code>XUSER</code>.
     */
    public static final Xuser XUSER = ru.smartsarov.citylighting.sprut.tables.Xuser.XUSER;
}
