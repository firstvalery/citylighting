/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.citylighting.sprut;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;

import ru.smartsarov.citylighting.sprut.tables.CheckIp;
import ru.smartsarov.citylighting.sprut.tables.Dual;
import ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport;
import ru.smartsarov.citylighting.sprut.tables.InsGuardLog;
import ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2;
import ru.smartsarov.citylighting.sprut.tables.InsXgroup;
import ru.smartsarov.citylighting.sprut.tables.InsXuser;
import ru.smartsarov.citylighting.sprut.tables.ListHome;
import ru.smartsarov.citylighting.sprut.tables.ListStreet;
import ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro;
import ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile;
import ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet;
import ru.smartsarov.citylighting.sprut.tables.ObjControlGet;
import ru.smartsarov.citylighting.sprut.tables.ObjControlSet;
import ru.smartsarov.citylighting.sprut.tables.ObjMapGet;
import ru.smartsarov.citylighting.sprut.tables.ObjMapSet;
import ru.smartsarov.citylighting.sprut.tables.ParseCntList;
import ru.smartsarov.citylighting.sprut.tables.SecToText;
import ru.smartsarov.citylighting.sprut.tables.SetCntControl;
import ru.smartsarov.citylighting.sprut.tables.UpdXgroup;
import ru.smartsarov.citylighting.sprut.tables.records.CheckIpRecord;
import ru.smartsarov.citylighting.sprut.tables.records.DualRecord;
import ru.smartsarov.citylighting.sprut.tables.records.GprsTrafficReportRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsGuardLogRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsGuardLog_2Record;
import ru.smartsarov.citylighting.sprut.tables.records.InsXgroupRecord;
import ru.smartsarov.citylighting.sprut.tables.records.InsXuserRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ListHomeRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ListStreetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.LookIntelligentElectroRecord;
import ru.smartsarov.citylighting.sprut.tables.records.MrcHourPwrProfileRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjActionAvailableGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjControlSetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapGetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ObjMapSetRecord;
import ru.smartsarov.citylighting.sprut.tables.records.ParseCntListRecord;
import ru.smartsarov.citylighting.sprut.tables.records.SecToTextRecord;
import ru.smartsarov.citylighting.sprut.tables.records.SetCntControlRecord;
import ru.smartsarov.citylighting.sprut.tables.records.UpdXgroupRecord;


/**
 * Convenience access to all stored procedures and functions in 
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>CHECK_IP</code>.
     */
    public static Result<CheckIpRecord> checkIp(Configuration configuration, String ip, Integer id, Timestamp fsdate, Timestamp fedate, Timestamp fndate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate)).fetch();
    }

    /**
     * Get <code>CHECK_IP</code> as a table.
     */
    public static CheckIp checkIp(String ip, Integer id, Timestamp fsdate, Timestamp fedate, Timestamp fndate) {
        return ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate);
    }

    /**
     * Get <code>CHECK_IP</code> as a table.
     */
    public static CheckIp checkIp(Field<String> ip, Field<Integer> id, Field<Timestamp> fsdate, Field<Timestamp> fedate, Field<Timestamp> fndate) {
        return ru.smartsarov.citylighting.sprut.tables.CheckIp.CHECK_IP.call(ip, id, fsdate, fedate, fndate);
    }

    /**
     * Call <code>DUAL</code>.
     */
    public static Result<DualRecord> dual(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.Dual.DUAL.call()).fetch();
    }

    /**
     * Get <code>DUAL</code> as a table.
     */
    public static Dual dual() {
        return ru.smartsarov.citylighting.sprut.tables.Dual.DUAL.call();
    }

    /**
     * Call <code>GPRS_TRAFFIC_REPORT</code>.
     */
    public static Result<GprsTrafficReportRecord> gprsTrafficReport(Configuration configuration, String login, String pass, Date sdate, Date edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate)).fetch();
    }

    /**
     * Get <code>GPRS_TRAFFIC_REPORT</code> as a table.
     */
    public static GprsTrafficReport gprsTrafficReport(String login, String pass, Date sdate, Date edate) {
        return ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate);
    }

    /**
     * Get <code>GPRS_TRAFFIC_REPORT</code> as a table.
     */
    public static GprsTrafficReport gprsTrafficReport(Field<String> login, Field<String> pass, Field<Date> sdate, Field<Date> edate) {
        return ru.smartsarov.citylighting.sprut.tables.GprsTrafficReport.GPRS_TRAFFIC_REPORT.call(login, pass, sdate, edate);
    }

    /**
     * Call <code>INS_GUARD_LOG</code>.
     */
    public static Result<InsGuardLogRecord> insGuardLog(Configuration configuration, Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgEid) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid)).fetch();
    }

    /**
     * Get <code>INS_GUARD_LOG</code> as a table.
     */
    public static InsGuardLog insGuardLog(Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid);
    }

    /**
     * Get <code>INS_GUARD_LOG</code> as a table.
     */
    public static InsGuardLog insGuardLog(Field<Integer> grdlgAbId, Field<Integer> grdlgUnkId, Field<Integer> grdlgZid, Field<Integer> grdlgLid, Field<Short> grdlgEvent, Field<Short> grdlgSsost, Field<Short> grdlgDsost, Field<Short> grdlgLsost, Field<Timestamp> grdlgDatetime, Field<Short> grdlgDelay, Field<String> grdlgIbutton, Field<Integer> grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog.INS_GUARD_LOG.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgEid);
    }

    /**
     * Call <code>INS_GUARD_LOG_2</code>.
     */
    public static Result<InsGuardLog_2Record> insGuardLog_2(Configuration configuration, Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgPcsId, Integer grdlgEid) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid)).fetch();
    }

    /**
     * Get <code>INS_GUARD_LOG_2</code> as a table.
     */
    public static InsGuardLog_2 insGuardLog_2(Integer grdlgAbId, Integer grdlgUnkId, Integer grdlgZid, Integer grdlgLid, Short grdlgEvent, Short grdlgSsost, Short grdlgDsost, Short grdlgLsost, Timestamp grdlgDatetime, Short grdlgDelay, String grdlgIbutton, Integer grdlgPcsId, Integer grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid);
    }

    /**
     * Get <code>INS_GUARD_LOG_2</code> as a table.
     */
    public static InsGuardLog_2 insGuardLog_2(Field<Integer> grdlgAbId, Field<Integer> grdlgUnkId, Field<Integer> grdlgZid, Field<Integer> grdlgLid, Field<Short> grdlgEvent, Field<Short> grdlgSsost, Field<Short> grdlgDsost, Field<Short> grdlgLsost, Field<Timestamp> grdlgDatetime, Field<Short> grdlgDelay, Field<String> grdlgIbutton, Field<Integer> grdlgPcsId, Field<Integer> grdlgEid) {
        return ru.smartsarov.citylighting.sprut.tables.InsGuardLog_2.INS_GUARD_LOG_2.call(grdlgAbId, grdlgUnkId, grdlgZid, grdlgLid, grdlgEvent, grdlgSsost, grdlgDsost, grdlgLsost, grdlgDatetime, grdlgDelay, grdlgIbutton, grdlgPcsId, grdlgEid);
    }

    /**
     * Call <code>INS_XGROUP</code>.
     */
    public static Result<InsXgroupRecord> insXgroup(Configuration configuration, Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword)).fetch();
    }

    /**
     * Get <code>INS_XGROUP</code> as a table.
     */
    public static InsXgroup insXgroup(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Get <code>INS_XGROUP</code> as a table.
     */
    public static InsXgroup insXgroup(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.InsXgroup.INS_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Call <code>INS_XUSER</code>.
     */
    public static Result<InsXuserRecord> insXuser(Configuration configuration, Integer userId, Integer userAbId, Integer userGrpId, Integer userType, String userName, String userPassword, String userKey, String userDescription) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription)).fetch();
    }

    /**
     * Get <code>INS_XUSER</code> as a table.
     */
    public static InsXuser insXuser(Integer userId, Integer userAbId, Integer userGrpId, Integer userType, String userName, String userPassword, String userKey, String userDescription) {
        return ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription);
    }

    /**
     * Get <code>INS_XUSER</code> as a table.
     */
    public static InsXuser insXuser(Field<Integer> userId, Field<Integer> userAbId, Field<Integer> userGrpId, Field<Integer> userType, Field<String> userName, Field<String> userPassword, Field<String> userKey, Field<String> userDescription) {
        return ru.smartsarov.citylighting.sprut.tables.InsXuser.INS_XUSER.call(userId, userAbId, userGrpId, userType, userName, userPassword, userKey, userDescription);
    }

    /**
     * Call <code>LIST_HOME</code>.
     */
    public static Result<ListHomeRecord> listHome(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME.call()).fetch();
    }

    /**
     * Get <code>LIST_HOME</code> as a table.
     */
    public static ListHome listHome() {
        return ru.smartsarov.citylighting.sprut.tables.ListHome.LIST_HOME.call();
    }

    /**
     * Call <code>LIST_STREET</code>.
     */
    public static Result<ListStreetRecord> listStreet(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET.call()).fetch();
    }

    /**
     * Get <code>LIST_STREET</code> as a table.
     */
    public static ListStreet listStreet() {
        return ru.smartsarov.citylighting.sprut.tables.ListStreet.LIST_STREET.call();
    }

    /**
     * Call <code>LOOK_INTELLIGENT_ELECTRO</code>.
     */
    public static Result<LookIntelligentElectroRecord> lookIntelligentElectro(Configuration configuration) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO.call()).fetch();
    }

    /**
     * Get <code>LOOK_INTELLIGENT_ELECTRO</code> as a table.
     */
    public static LookIntelligentElectro lookIntelligentElectro() {
        return ru.smartsarov.citylighting.sprut.tables.LookIntelligentElectro.LOOK_INTELLIGENT_ELECTRO.call();
    }

    /**
     * Call <code>MRC_HOUR_PWR_PROFILE</code>.
     */
    public static Result<MrcHourPwrProfileRecord> mrcHourPwrProfile(Configuration configuration, Integer cid, Timestamp sdate, Timestamp edate) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate)).fetch();
    }

    /**
     * Get <code>MRC_HOUR_PWR_PROFILE</code> as a table.
     */
    public static MrcHourPwrProfile mrcHourPwrProfile(Integer cid, Timestamp sdate, Timestamp edate) {
        return ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate);
    }

    /**
     * Get <code>MRC_HOUR_PWR_PROFILE</code> as a table.
     */
    public static MrcHourPwrProfile mrcHourPwrProfile(Field<Integer> cid, Field<Timestamp> sdate, Field<Timestamp> edate) {
        return ru.smartsarov.citylighting.sprut.tables.MrcHourPwrProfile.MRC_HOUR_PWR_PROFILE.call(cid, sdate, edate);
    }

    /**
     * Call <code>OBJ_ACTION_AVAILABLE_GET</code>.
     */
    public static Result<ObjActionAvailableGetRecord> objActionAvailableGet(Configuration configuration, String login, String pass, Integer objId, Integer objType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType)).fetch();
    }

    /**
     * Get <code>OBJ_ACTION_AVAILABLE_GET</code> as a table.
     */
    public static ObjActionAvailableGet objActionAvailableGet(String login, String pass, Integer objId, Integer objType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType);
    }

    /**
     * Get <code>OBJ_ACTION_AVAILABLE_GET</code> as a table.
     */
    public static ObjActionAvailableGet objActionAvailableGet(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjActionAvailableGet.OBJ_ACTION_AVAILABLE_GET.call(login, pass, objId, objType);
    }

    /**
     * Call <code>OBJ_CONTROL_GET</code>.
     */
    public static Result<ObjControlGetRecord> objControlGet(Configuration configuration, String login, String pass, Integer objId, Integer objType, Integer objAction) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction)).fetch();
    }

    /**
     * Get <code>OBJ_CONTROL_GET</code> as a table.
     */
    public static ObjControlGet objControlGet(String login, String pass, Integer objId, Integer objType, Integer objAction) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction);
    }

    /**
     * Get <code>OBJ_CONTROL_GET</code> as a table.
     */
    public static ObjControlGet objControlGet(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType, Field<Integer> objAction) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlGet.OBJ_CONTROL_GET.call(login, pass, objId, objType, objAction);
    }

    /**
     * Call <code>OBJ_CONTROL_SET</code>.
     */
    public static Result<ObjControlSetRecord> objControlSet(Configuration configuration, String login, String pass, Integer objId, Integer objType, Integer objAction, Integer objActionType, Integer paramInt, Double paramDouble, String paramStr, String commentUser, Timestamp commentDatetime, String commentIp) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp)).fetch();
    }

    /**
     * Get <code>OBJ_CONTROL_SET</code> as a table.
     */
    public static ObjControlSet objControlSet(String login, String pass, Integer objId, Integer objType, Integer objAction, Integer objActionType, Integer paramInt, Double paramDouble, String paramStr, String commentUser, Timestamp commentDatetime, String commentIp) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp);
    }

    /**
     * Get <code>OBJ_CONTROL_SET</code> as a table.
     */
    public static ObjControlSet objControlSet(Field<String> login, Field<String> pass, Field<Integer> objId, Field<Integer> objType, Field<Integer> objAction, Field<Integer> objActionType, Field<Integer> paramInt, Field<Double> paramDouble, Field<String> paramStr, Field<String> commentUser, Field<Timestamp> commentDatetime, Field<String> commentIp) {
        return ru.smartsarov.citylighting.sprut.tables.ObjControlSet.OBJ_CONTROL_SET.call(login, pass, objId, objType, objAction, objActionType, paramInt, paramDouble, paramStr, commentUser, commentDatetime, commentIp);
    }

    /**
     * Call <code>OBJ_MAP_GET</code>.
     */
    public static Result<ObjMapGetRecord> objMapGet(Configuration configuration, Integer inObjId, Integer inObjType) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType)).fetch();
    }

    /**
     * Get <code>OBJ_MAP_GET</code> as a table.
     */
    public static ObjMapGet objMapGet(Integer inObjId, Integer inObjType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType);
    }

    /**
     * Get <code>OBJ_MAP_GET</code> as a table.
     */
    public static ObjMapGet objMapGet(Field<Integer> inObjId, Field<Integer> inObjType) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapGet.OBJ_MAP_GET.call(inObjId, inObjType);
    }

    /**
     * Call <code>OBJ_MAP_SET</code>.
     */
    public static Result<ObjMapSetRecord> objMapSet(Configuration configuration, Integer inObjId, Integer inObjType, Double inObjPosX, Double inObjPosY, Double inObjPosZ, String inActualParam) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam)).fetch();
    }

    /**
     * Get <code>OBJ_MAP_SET</code> as a table.
     */
    public static ObjMapSet objMapSet(Integer inObjId, Integer inObjType, Double inObjPosX, Double inObjPosY, Double inObjPosZ, String inActualParam) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam);
    }

    /**
     * Get <code>OBJ_MAP_SET</code> as a table.
     */
    public static ObjMapSet objMapSet(Field<Integer> inObjId, Field<Integer> inObjType, Field<Double> inObjPosX, Field<Double> inObjPosY, Field<Double> inObjPosZ, Field<String> inActualParam) {
        return ru.smartsarov.citylighting.sprut.tables.ObjMapSet.OBJ_MAP_SET.call(inObjId, inObjType, inObjPosX, inObjPosY, inObjPosZ, inActualParam);
    }

    /**
     * Call <code>PARSE_CNT_LIST</code>.
     */
    public static Result<ParseCntListRecord> parseCntList(Configuration configuration, String cntList) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList)).fetch();
    }

    /**
     * Get <code>PARSE_CNT_LIST</code> as a table.
     */
    public static ParseCntList parseCntList(String cntList) {
        return ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList);
    }

    /**
     * Get <code>PARSE_CNT_LIST</code> as a table.
     */
    public static ParseCntList parseCntList(Field<String> cntList) {
        return ru.smartsarov.citylighting.sprut.tables.ParseCntList.PARSE_CNT_LIST.call(cntList);
    }

    /**
     * Call <code>SEC_TO_TEXT</code>.
     */
    public static Result<SecToTextRecord> secToText(Configuration configuration, Integer sec) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec)).fetch();
    }

    /**
     * Get <code>SEC_TO_TEXT</code> as a table.
     */
    public static SecToText secToText(Integer sec) {
        return ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec);
    }

    /**
     * Get <code>SEC_TO_TEXT</code> as a table.
     */
    public static SecToText secToText(Field<Integer> sec) {
        return ru.smartsarov.citylighting.sprut.tables.SecToText.SEC_TO_TEXT.call(sec);
    }

    /**
     * Call <code>SET_CNT_CONTROL</code>.
     */
    public static Result<SetCntControlRecord> setCntControl(Configuration configuration, Integer cntid, Integer cntAction, Integer cntLimit, String login, String pass) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass)).fetch();
    }

    /**
     * Get <code>SET_CNT_CONTROL</code> as a table.
     */
    public static SetCntControl setCntControl(Integer cntid, Integer cntAction, Integer cntLimit, String login, String pass) {
        return ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass);
    }

    /**
     * Get <code>SET_CNT_CONTROL</code> as a table.
     */
    public static SetCntControl setCntControl(Field<Integer> cntid, Field<Integer> cntAction, Field<Integer> cntLimit, Field<String> login, Field<String> pass) {
        return ru.smartsarov.citylighting.sprut.tables.SetCntControl.SET_CNT_CONTROL.call(cntid, cntAction, cntLimit, login, pass);
    }

    /**
     * Call <code>UPD_XGROUP</code>.
     */
    public static Result<UpdXgroupRecord> updXgroup(Configuration configuration, Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return configuration.dsl().selectFrom(ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword)).fetch();
    }

    /**
     * Get <code>UPD_XGROUP</code> as a table.
     */
    public static UpdXgroup updXgroup(Integer grpId, String grpName, String grpDescription, Integer grpType, Integer grpAccess, String grpDbUname, String grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }

    /**
     * Get <code>UPD_XGROUP</code> as a table.
     */
    public static UpdXgroup updXgroup(Field<Integer> grpId, Field<String> grpName, Field<String> grpDescription, Field<Integer> grpType, Field<Integer> grpAccess, Field<String> grpDbUname, Field<String> grpDbPassword) {
        return ru.smartsarov.citylighting.sprut.tables.UpdXgroup.UPD_XGROUP.call(grpId, grpName, grpDescription, grpType, grpAccess, grpDbUname, grpDbPassword);
    }
}
